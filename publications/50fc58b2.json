{"id": "50fc58b2", "examenData": {"id": "401454", "nombreExamen": "Programaci\u00f3n UML", "tipoExamen": "Evaluaci\u00f3n", "fecha": "2025-04-21", "profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesorId": "16MI987", "nombreAlumno": "", "idAlumno": "", "bloqueado": false, "preguntasMarcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 caracter\u00edstica permite a un sistema reactivo escalar horizontalmente?  \nA) Monolitismo  \nB) Elasticidad  \nC) Dependencia vertical  \nD) Acoplamiento r\u00edgido  \nE) Estado global", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l de estas tecnolog\u00edas se usa com\u00fanmente para implementar mensajer\u00eda en sistemas reactivos?  \nA) JDBC  \nB) Kafka  \nC) Hibernate  \nD) JSP  \nE) SOAP", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 concepto describe la capacidad de un sistema reactivo para responder r\u00e1pidamente a est\u00edmulos?  \nA) Latencia  \nB) Resiliencia  \nC) Responsividad  \nD) Fragilidad  \nE) Rigidez", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 patr\u00f3n se utiliza para manejar flujos de datos as\u00edncronos en arquitecturas reactivas?  \nA) Observer  \nB) Iterator  \nC) Adapter  \nD) Builder  \nE) Prototype", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfCu\u00e1l de los siguientes principios es fundamental en las arquitecturas reactivas?  \nA) Acoplamiento fuerte entre componentes  \nB) Respuesta bloqueante a las solicitudes  \nC) Elasticidad y escalabilidad  \nD) Uso exclusivo de bases de datos relacionales  \nE) Programaci\u00f3n monol\u00edtica", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es com\u00fanmente utilizado en arquitecturas reactivas?  \nA) Singleton  \nB) Observer  \nC) Factory  \nD) Decorator  \nE) Adapter", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 herramienta se usa frecuentemente para implementar sistemas reactivos?  \nA) React.js  \nB) Spring WebFlux  \nC) Django  \nD) Laravel  \nE) Ruby on Rails", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 ventaja ofrece el manejo de flujos de datos as\u00edncronos en sistemas reactivos?  \nA) Mayor consumo de recursos del servidor  \nB) Mejor rendimiento y capacidad de respuesta  \nC) Dependencia de operaciones bloqueantes  \nD) Simplificaci\u00f3n del c\u00f3digo sincr\u00f3nico  \nE) Limitaci\u00f3n en la escalabilidad horizontal", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 t\u00e9rmino describe la capacidad de un sistema reactivo para manejar cargas variables?  \nA) Resiliencia  \nB) Elasticidad  \nC) Fragmentaci\u00f3n  \nD) Serializaci\u00f3n  \nE) Normalizaci\u00f3n", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfCu\u00e1l de las siguientes librer\u00edas es com\u00fanmente utilizada para implementar programaci\u00f3n reactiva en JavaScript?  \nA) Angular  \nB) React  \nC) RxJS  \nD) jQuery  \nE) Vue.js", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 11, "texto": "\u00bfQu\u00e9 principio de las arquitecturas reactivas promueve la capacidad de responder a eventos en tiempo real?  \nA) Acoplamiento fuerte  \nB) Resiliencia  \nC) Elasticidad  \nD) Orientaci\u00f3n a mensajes  \nE) Tolerancia a fallos", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 12, "texto": "En el contexto de sistemas reactivos, \u00bfqu\u00e9 significa \"Backpressure\"?  \nA) Un mecanismo para evitar la sobrecarga del sistema  \nB) Un patr\u00f3n de dise\u00f1o para bases de datos  \nC) Una t\u00e9cnica de cifrado de datos  \nD) Un protocolo de red  \nE) Un tipo de arquitectura monol\u00edtica", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 13, "texto": "\u00bfQu\u00e9 componente de un sistema reactivo es responsable de manejar y propagar eventos?  \nA) Broker  \nB) M\u00f3dulo  \nC) Controlador  \nD) Stream  \nE) Middleware", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 14, "texto": "\u00bfCu\u00e1l de los siguientes NO es un principio clave de la Manifesto Reactivo?  \nA) Responsivo  \nB) Escalable  \nC) Modular  \nD) Resiliente  \nE) Orientado a mensajes", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "**Intermedio**: Compara y contrasta el modelo de actores con el patr\u00f3n Observer en el contexto de las Arquitecturas Reactivas, destacando ventajas, desventajas y casos de uso t\u00edpicos para cada uno.", "puntaje": "", "respuestaAlumno": ""}, {"numero": 2, "texto": "**Intermedio-Avanzado**: Describe c\u00f3mo el aislamiento de componentes (bounded contexts) en una Arquitectura Reactiva contribuye a la resiliencia del sistema, e ilustra con un ejemplo real o hipot\u00e9tico.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 3, "texto": "**Avanzado**: Analiza c\u00f3mo el backpressure se maneja en sistemas reactivos y qu\u00e9 estrategias pueden implementarse para evitar la sobrecarga en flujos de datos as\u00edncronos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 4, "texto": "**Avanzado**: Eval\u00faa los desaf\u00edos de implementar consistencia eventual en una Arquitectura Reactiva altamente distribuida y propone t\u00e9cnicas para garantizar la coherencia de datos sin sacrificar la capacidad de respuesta.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 5, "texto": "**Intermedio**: Compara y contrasta el Modelo de Actores con la Programaci\u00f3n Reactiva, destacando sus ventajas y desventajas en el contexto de sistemas distribuidos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 6, "texto": "**Avanzado**: Describe c\u00f3mo el patr\u00f3n \"Event Sourcing\" se integra en una Arquitectura Reactiva y analiza su impacto en la consistencia y escalabilidad del sistema.", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Plataforma de Monitoreo de Tr\u00e1fico Urbano**  \n   - **Escenario**: Una ciudad quiere un sistema que procese datos de sensores de tr\u00e1fico (sem\u00e1foros, c\u00e1maras) para mostrar congesti\u00f3n en tiempo real y sugerir rutas alternativas.  \n   - **Requisitos**:  \n     - Procesar flujos de datos de miles de sensores con baja latencia.  \n     - Visualizar datos en un mapa interactivo actualizado continuamente.  \n     - Alertar a los conductores sobre incidentes v\u00eda notificaciones push.  \n   - **Herramientas sugeridas**: Apache Flink (procesamiento de flujos), Leaflet.js (mapas), MQTT (protocolo para sensores).", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 4, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 2, "descripcion": "**Chat de Soporte al Cliente con Escalado Autom\u00e1tico**  \n   - **Escenario**: Una empresa necesita un chat que maneje picos de demanda (ej. durante promociones) sin colapsar, asignando agentes de soporte din\u00e1micamente.  \n   - **Requisitos**:  \n     - Usar actores reactivos para gestionar conexiones de usuarios y agentes.  \n     - Escalar autom\u00e1ticamente los recursos en la nube durante picos de tr\u00e1fico.  \n     - Registrar historiales de conversaciones para an\u00e1lisis posteriores.  \n   - **Herramientas sugeridas**: Akka Cluster (escalabilidad), AWS Lambda (auto-escalado), MongoDB (almacenamiento).", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 4, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-21T16:19:32.828601", "expiration": "2025-04-28T21:19:32.796Z", "publicAccess": true}