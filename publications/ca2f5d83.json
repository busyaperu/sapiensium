{"id": "ca2f5d83", "examenData": {"email": "smartlabelperu@gmail.com", "examen_id": "727372", "nombre_examen": "DevOps e integraci\u00f3n/despliegue continuo", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-06-25T22:46:05.724Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI765", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 herramienta se utiliza com\u00fanmente para la gesti\u00f3n de la configuraci\u00f3n?", "puntaje": 0.5, "opciones": [{"texto": "Jenkins", "valor": "A"}, {"texto": "Docker", "valor": "B"}, {"texto": "Ansible", "valor": "C"}, {"texto": "Kubernetes", "valor": "D"}, {"texto": "Git", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es el objetivo principal de la integraci\u00f3n continua?", "puntaje": 0.5, "opciones": [{"texto": "Automatizar las pruebas", "valor": "A"}, {"texto": "Implementar c\u00f3digo en producci\u00f3n", "valor": "B"}, {"texto": "Detectar errores de integraci\u00f3n temprano", "valor": "C"}, {"texto": "Gestionar la infraestructura", "valor": "D"}, {"texto": "Monitorizar el rendimiento de la aplicaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 significa CI/CD?", "puntaje": 0.5, "opciones": [{"texto": "Continuous Integration/Continuous Delivery", "valor": "A"}, {"texto": "Centralized Infrastructure/Cloud Deployment", "valor": "B"}, {"texto": "Code Inspection/Code Development", "valor": "C"}, {"texto": "Component Integration/Component Design", "valor": "D"}, {"texto": "Cloud Infrastructure/Continuous Deployment", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes es una herramienta de orquestaci\u00f3n de contenedores?", "puntaje": 0.5, "opciones": [{"texto": "Git", "valor": "A"}, {"texto": "Jenkins", "valor": "B"}, {"texto": "Ansible", "valor": "C"}, {"texto": "Kubernetes", "valor": "D"}, {"texto": "Chef", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 es un pipeline de CI/CD?", "puntaje": 0.5, "opciones": [{"texto": "Un conjunto de pasos automatizados para construir, probar e implementar software", "valor": "A"}, {"texto": "Un tipo de arquitectura de microservicios", "valor": "B"}, {"texto": "Una metodolog\u00eda de desarrollo \u00e1gil", "valor": "C"}, {"texto": "Una herramienta para la gesti\u00f3n de la configuraci\u00f3n", "valor": "D"}, {"texto": "Un lenguaje de programaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l es la diferencia entre integraci\u00f3n continua y despliegue continuo?", "puntaje": 0.5, "opciones": [{"texto": "La integraci\u00f3n continua se centra en la automatizaci\u00f3n de las pruebas, mientras que el despliegue continuo se centra en la automatizaci\u00f3n de la implementaci\u00f3n.", "valor": "A"}, {"texto": "La integraci\u00f3n continua es un subconjunto del despliegue continuo.", "valor": "B"}, {"texto": "El despliegue continuo es un subconjunto de la integraci\u00f3n continua.", "valor": "C"}, {"texto": "No hay diferencia entre ambos.", "valor": "D"}, {"texto": "La integraci\u00f3n continua se centra en el desarrollo, mientras que el despliegue continuo se centra en las operaciones.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 herramienta se utiliza com\u00fanmente para la automatizaci\u00f3n de la infraestructura?", "puntaje": 0.5, "opciones": [{"texto": "Docker", "valor": "A"}, {"texto": "Kubernetes", "valor": "B"}, {"texto": "Terraform", "valor": "C"}, {"texto": "Git", "valor": "D"}, {"texto": "Jenkins", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfCu\u00e1l de las siguientes NO es una ventaja de DevOps?", "puntaje": 0.5, "opciones": [{"texto": "Mayor velocidad de entrega", "valor": "A"}, {"texto": "Mayor colaboraci\u00f3n entre equipos", "valor": "B"}, {"texto": "Mayor complejidad del proceso", "valor": "C"}, {"texto": "Mayor calidad del software", "valor": "D"}, {"texto": "Mayor eficiencia", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 es un repositorio de c\u00f3digo?", "puntaje": 0.5, "opciones": [{"texto": "Un lugar donde se almacena el c\u00f3digo fuente", "valor": "A"}, {"texto": "Un servidor web", "valor": "B"}, {"texto": "Una herramienta de monitorizaci\u00f3n", "valor": "C"}, {"texto": "Un tipo de base de datos", "valor": "D"}, {"texto": "Un lenguaje de programaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 10, "texto": "Explique c\u00f3mo la automatizaci\u00f3n de pruebas juega un rol crucial en la implementaci\u00f3n exitosa de la integraci\u00f3n continua y el despliegue continuo (CI/CD).  Proporcione ejemplos concretos de herramientas y t\u00e9cnicas utilizadas.", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 11, "texto": "Analice los desaf\u00edos de implementar CI/CD en un entorno heredado con sistemas monol\u00edticos y dependencias complejas. \u00bfQu\u00e9 estrategias se pueden utilizar para mitigar estos desaf\u00edos y lograr una transici\u00f3n gradual hacia CI/CD?", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 12, "texto": "Compare y contraste dos herramientas populares de orquestaci\u00f3n de contenedores (ej. Kubernetes, Docker Swarm) en el contexto de un pipeline de CI/CD.  \u00bfQu\u00e9 factores deben considerarse al elegir una herramienta espec\u00edfica para un proyecto?", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 13, "texto": "Describa un escenario en el que la implementaci\u00f3n de CI/CD haya fallado y analice las posibles causas ra\u00edz del fracaso.  \u00bfQu\u00e9 medidas preventivas se podr\u00edan haber tomado para evitar este escenario?", "puntaje": 1.5, "respuestaAlumno": ""}], "casos_uso": [{"numero": 14, "descripcion": "**Caso de Uso **  \n- **Escenario**: Una empresa de e-commerce necesita implementar un pipeline de CI/CD para desplegar autom\u00e1ticamente su aplicaci\u00f3n web en AWS cada vez que se actualiza el repositorio de GitHub. El despliegue debe incluir pruebas unitarias y de integraci\u00f3n.  \n- **Requisitos**: Configurar un pipeline con GitHub Actions que despliegue en AWS Elastic Beanstalk. Incluir etapas de build, test y deploy.  \n- **Herramientas sugeridas**: GitHub Actions, AWS Elastic Beanstalk, AWS CLI, Jest (para pruebas).  \n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 15, "descripcion": "**Caso de Uso:**  Desarrollo de una aplicaci\u00f3n web de comercio electr\u00f3nico.\n\n   **Escenario:** Una empresa de comercio electr\u00f3nico necesita implementar una nueva funcionalidad de pago con criptomonedas en su sitio web.  El desarrollo se realiza en equipos separados (frontend y backend).\n\n   **Pregunta 1 (DevOps):** \u00bfC\u00f3mo se implementa una estrategia de integraci\u00f3n continua que permita la integraci\u00f3n diaria de los cambios de ambos equipos, garantizando la estabilidad del sistema y detectando conflictos tempranos?\n\n   **Pregunta 2 (Integraci\u00f3n/Despliegue Continuo):** \u00bfC\u00f3mo se automatiza el proceso de despliegue de la nueva funcionalidad a un entorno de staging y posteriormente a producci\u00f3n, minimizando el tiempo de inactividad y asegurando la reversi\u00f3n en caso de fallo?\n\n   **Requisitos:** Implementaci\u00f3n de pipelines CI/CD,  gesti\u00f3n de configuraciones, pruebas automatizadas (unitarias e integraci\u00f3n),  monitorizaci\u00f3n del despliegue.\n\n   **Sugerencias:** Jenkins, GitLab CI/CD, Docker, Kubernetes, herramientas de monitoreo como Prometheus y Grafana.\n\n\n", "pregunta": "** Implementaci\u00f3n de pipelines CI/CD,  gesti\u00f3n de configuraciones, pruebas automatizadas (unitarias e integraci\u00f3n),  monitorizaci\u00f3n del despliegue.", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-06-25T17:46:05.776104", "expiration": "2025-07-02T22:46:05.724Z", "publicAccess": true}