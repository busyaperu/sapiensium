{"id": "321310c5", "examenData": {"id": "568861", "fecha": "2025-04-07", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1. \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?  \n\nA) Acoplamiento fuerte entre componentes  \nB) Tolerancia al fracaso  \nC) Uso exclusivo de bases de datos relacionales  \nD) Sincronizaci\u00f3n forzosa en todas las comunicaciones  \nE) Jerarqu\u00eda r\u00edgida de servicios", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos mediante el aislamiento de componentes", "valor": "B"}, {"texto": "C) Procesamiento sincr\u00f3nico de peticiones", "valor": "C"}, {"texto": "D) Uso exclusivo de bases de datos relacionales", "valor": "D"}, {"texto": "E) Centralizaci\u00f3n del manejo de errores", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento estrecho entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos", "valor": "B"}, {"texto": "C) Sincronizaci\u00f3n r\u00edgida", "valor": "C"}, {"texto": "D) Centralizaci\u00f3n del estado", "valor": "D"}, {"texto": "E) Bloques monol\u00edticos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos", "valor": "B"}, {"texto": "C) Procesamiento por lotes", "valor": "C"}, {"texto": "D) Sincronizaci\u00f3n r\u00edgida", "valor": "D"}, {"texto": "E) Centralizaci\u00f3n del estado", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos mediante redundancia", "valor": "B"}, {"texto": "C) Comunicaci\u00f3n s\u00edncrona bloqueante", "valor": "C"}, {"texto": "D) Centralizaci\u00f3n del estado de la aplicaci\u00f3n", "valor": "D"}, {"texto": "E) Orientaci\u00f3n a eventos as\u00edncronos", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. Compara y contrasta las arquitecturas en capas (por ejemplo, 3-tier) y la arquitectura hexagonal (puertos y adaptadores) en t\u00e9rminos de sus principios de dise\u00f1o, acoplamiento entre componentes y facilidad para realizar cambios o adaptaciones en el sistema. Proporciona ejemplos concretos de escenarios donde cada una ser\u00eda m\u00e1s adecuada.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 2, "texto": "1-1) **Avanzado**: Compare y contraste las arquitecturas en capas y la arquitectura hexagonal, destacando las ventajas y desventajas de cada una en el contexto de sistemas con alta volatilidad en los requisitos de negocio. Incluya ejemplos concretos donde cada enfoque ser\u00eda m\u00e1s adecuado.", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "### Caso 1-1  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos como el Black Friday, manteniendo la capacidad de respuesta y escalabilidad. El estudiante debe dise\u00f1ar una arquitectura reactiva que procese \u00f3rdenes de compra en tiempo real, garantizando consistencia y tolerancia a fallos.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo garantizar\u00edas que el sistema procese \u00f3rdenes de manera eficiente durante picos de tr\u00e1fico, evitando cuellos de botella?  \n2. \u00bfQu\u00e9 estrategias implementar\u00edas para manejar fallos en el procesamiento de pagos sin perder datos de \u00f3rdenes?  \n\n**Requisitos espec\u00edficos:**  \n- Usar un enfoque basado en mensajer\u00eda as\u00edncrona.  \n- Implementar patrones como *Event Sourcing* o *CQRS*.  \n- Garantizar consistencia eventual en los datos.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Kafka, Akka, Spring WebFlux.  \n- Enfoques: Microservicios reactivos, circuit breakers, colas de retry.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-07T15:44:18.981734", "expiration": "2025-04-14T20:44:18.960Z", "publicAccess": true}