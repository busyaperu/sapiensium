{"id": "e68d388c", "examenData": {"examen_id": "684907", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-04-28T20:28:28.512Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l de estos principios NO pertenece al Manifiesto Reactivo?", "puntaje": 1, "opciones": [{"texto": "Orientado a mensajes", "valor": "A"}, {"texto": "Tolerante a fallos", "valor": "B"}, {"texto": "Centralizado", "valor": "C"}, {"texto": "Responsivo", "valor": "D"}, {"texto": "El\u00e1stico", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 patr\u00f3n es clave para implementar sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Singleton", "valor": "A"}, {"texto": "Observer", "valor": "B"}, {"texto": "Factory", "valor": "C"}, {"texto": "Decorator", "valor": "D"}, {"texto": "Prototype", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se usa com\u00fanmente para comunicaci\u00f3n as\u00edncrona en arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "REST", "valor": "A"}, {"texto": "GraphQL", "valor": "B"}, {"texto": "Message brokers", "valor": "C"}, {"texto": "SOAP", "valor": "D"}, {"texto": "FTP", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 ventaja ofrece el modelo de actores en sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Simplifica la depuraci\u00f3n", "valor": "A"}, {"texto": "Elimina la necesidad de concurrencia", "valor": "B"}, {"texto": "Aislamiento y encapsulaci\u00f3n de estado", "valor": "C"}, {"texto": "Reduce el uso de memoria", "valor": "D"}, {"texto": "Permite herencia m\u00faltiple", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 componente gestiona el flujo de datos en programaci\u00f3n reactiva funcional?", "puntaje": 1, "opciones": [{"texto": "Promises", "valor": "A"}, {"texto": "Callbacks", "valor": "B"}, {"texto": "Observables", "valor": "C"}, {"texto": "Iterators", "valor": "D"}, {"texto": "Generators", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l es el prop\u00f3sito principal de backpressure en sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Encriptar datos en tr\u00e1nsito", "valor": "A"}, {"texto": "Balancear carga entre servidores", "valor": "B"}, {"texto": "Prevenir sobrecarga del consumidor", "valor": "C"}, {"texto": "Optimizar consultas a bases de datos", "valor": "D"}, {"texto": "Reducir latencia en la red", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 paradigma de programaci\u00f3n est\u00e1 m\u00e1s alineado con arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "Orientado a objetos", "valor": "A"}, {"texto": "Funcional", "valor": "B"}, {"texto": "Procedimental", "valor": "C"}, {"texto": "L\u00f3gico", "valor": "D"}, {"texto": "Estructurado", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 herramienta se usa para manejar streams de datos en JavaScript de forma reactiva?", "puntaje": 1, "opciones": [{"texto": "React.js", "valor": "A"}, {"texto": "Redux", "valor": "B"}, {"texto": "RxJS", "valor": "C"}, {"texto": "Express", "valor": "D"}, {"texto": "Lodash", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 tipo de escalabilidad priorizan los sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Vertical", "valor": "A"}, {"texto": "Horizontal", "valor": "B"}, {"texto": "Diagonal", "valor": "C"}, {"texto": "Circular", "valor": "D"}, {"texto": "Jer\u00e1rquica", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 10, "texto": "**(Intermedio)** Compara las ventajas y desventajas de usar una arquitectura reactiva frente a una arquitectura tradicional monol\u00edtica en el desarrollo de aplicaciones escalables.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 11, "texto": "**(Intermedio)** Describe c\u00f3mo el patr\u00f3n de dise\u00f1o \"Event Sourcing\" se integra dentro de una arquitectura reactiva y qu\u00e9 beneficios aporta en t\u00e9rminos de consistencia y escalabilidad.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "**(Avanzado)** Analiza c\u00f3mo se maneja el backpressure en sistemas reactivos y qu\u00e9 estrategias pueden implementarse para asegurar un flujo de datos eficiente sin saturar los componentes.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "**(Avanzado)** Explica de qu\u00e9 manera las arquitecturas reactivas pueden garantizar resiliencia y tolerancia a fallos, detallando al menos dos patrones o t\u00e9cnicas espec\u00edficas que faciliten este comportamiento.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 14, "descripcion": "**Escenario**: Un sistema de monitoreo de IoT para hospitales debe procesar flujos de datos de dispositivos m\u00e9dicos (ej. ritmo card\u00edaco) en tiempo real y alertar al personal si hay anomal\u00edas.  \n   **Requisitos**:  \n   - Dise\u00f1ar una arquitectura que procese flujos de datos reactivamente y genere alertas en menos de 2 segundos.  \n   - Visualizar datos en un dashboard actualizado en tiempo real.  \n   **Herramientas sugeridas**: Akka Streams, MQTT, React.js.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 15, "descripcion": "**Escenario**: Una app de transporte (ej. Uber) requiere calcular tarifas din\u00e1micas basadas en demanda, tr\u00e1fico y distancia en tiempo real.  \n   **Requisitos**:  \n   - Crear un servicio reactivo que recalcule tarifas cada 30 segundos usando datos de ubicaci\u00f3n y demanda.  \n   - Asegurar baja latencia (<1s) para respuestas a usuarios.  \n   **Herramientas sugeridas**: Redis, Node.js con RxJS, WebSockets.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-28T15:28:28.537294", "expiration": "2025-05-05T20:28:28.512Z", "publicAccess": true}