{"id": "2af0c402", "examenData": {"examen_id": "028583", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-24T14:00:35.309Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es fundamental para manejar la concurrencia en sistemas reactivos?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Strategy", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es la principal ventaja de usar un backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Prevenci\u00f3n de sobrecarga del sistema\nC) Menor consumo de memoria\nD) Aumento de la latencia\nE) Simplificaci\u00f3n del c\u00f3digo", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se utiliza com\u00fanmente para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) Reactor\nD) Hibernate\nE) Struts", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones sobre la elasticidad en arquitecturas reactivas es FALSA?\nA) Permite escalar recursos seg\u00fan la demanda.\nB) Reduce los costos operativos.\nC) Garantiza un rendimiento constante independientemente de la carga.\nD) Permite una mejor utilizaci\u00f3n de los recursos.\nE) Se adapta a las fluctuaciones de carga.", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 concepto describe la capacidad de un sistema reactivo para continuar funcionando incluso con fallos parciales?\nA) Elasticidad\nB) Responsividad\nC) Resiliencia\nD) Mensajer\u00eda\nE) Concurrencia", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza a menudo para manejar la concurrencia en sistemas reactivos?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Template Method", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfCu\u00e1l es la principal ventaja de utilizar un backpressure en un sistema reactivo?\nA) Mejorar la latencia\nB) Aumentar la concurrencia\nC) Prevenir el colapso del sistema debido a la sobrecarga\nD) Simplificar la gesti\u00f3n de errores\nE) Mejorar la escalabilidad horizontal", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es com\u00fanmente usada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) REST", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones sobre la resiliencia en sistemas reactivos es FALSA?\nA) Los sistemas reactivos deber\u00edan ser capaces de tolerar fallos.\nB) La supervisi\u00f3n es crucial para la resiliencia.\nC) Los sistemas reactivos siempre deben tener un \u00fanico punto de fallo.\nD) La contenci\u00f3n de fallos es importante para evitar la propagaci\u00f3n de errores.\nE) La auto-curaci\u00f3n es una caracter\u00edstica deseable.", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 significa el t\u00e9rmino \"elasticidad\" en el contexto de las arquitecturas reactivas?\nA) Capacidad para manejar un gran volumen de datos.\nB) Capacidad para adaptarse a cambios en la carga.\nC) Capacidad para recuperarse de fallos.\nD) Capacidad para responder r\u00e1pidamente a las solicitudes.\nE) Capacidad para mantener la consistencia de datos.", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "Explique c\u00f3mo el patr\u00f3n de dise\u00f1o \"Backpressure\" mitiga los problemas de sobrecarga en arquitecturas reactivas.  Detalle un escenario en el que este patr\u00f3n sea crucial y describa su implementaci\u00f3n.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "Analice las implicaciones de la elecci\u00f3n de un framework reactivo espec\u00edfico (ej. Spring WebFlux, Akka, RxJava) en el desarrollo de una aplicaci\u00f3n microservicio distribuida. Considere factores como la escalabilidad, la tolerancia a fallos y la complejidad de la implementaci\u00f3n.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Compare y contraste los modelos de programaci\u00f3n reactiva basados en push (ej. Observables) con los basados en pull (ej. iteradores).  Discuta las situaciones en las que cada modelo es m\u00e1s apropiado.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "Dise\u00f1e una arquitectura reactiva para una aplicaci\u00f3n de comercio electr\u00f3nico que maneje un alto volumen de transacciones concurrentes, incluyendo la gesti\u00f3n de eventos, la persistencia de datos y la integraci\u00f3n con sistemas externos.  Justifique sus elecciones de dise\u00f1o.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Explique c\u00f3mo se implementar\u00eda la resiliencia en una arquitectura reactiva utilizando patrones como el backpressure y la tolerancia a fallos.  Proporcione ejemplos concretos de tecnolog\u00edas que podr\u00edan ser empleadas.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 16, "texto": "Analice las implicaciones de la escalabilidad en una arquitectura reactiva, considerando tanto la escalabilidad horizontal como la vertical.  \u00bfC\u00f3mo se gestiona la distribuci\u00f3n de carga y el manejo de picos de demanda en un sistema reactivo?", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 17, "descripcion": "**Escenario:** Una aplicaci\u00f3n de comercio electr\u00f3nico necesita gestionar el inventario de productos en tiempo real, actualizando las cantidades disponibles a medida que se realizan compras y devoluciones. El sistema debe ser resistente a fallos y garantizar la consistencia de datos.\n\n**Requisitos:** Desarrollar un sistema reactivo para el manejo de inventario que responda a eventos de compra y devoluci\u00f3n, actualizando el stock en tiempo real y notificando a otros servicios sobre los cambios.\n\n**Sugerencias:** Event Sourcing, CQRS, Akka, Cassandra.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 18, "descripcion": "**Escenario:** Una aplicaci\u00f3n de chat en tiempo real necesita manejar miles de usuarios concurrentes enviando y recibiendo mensajes instant\u00e1neamente.  Debe escalar de forma el\u00e1stica para adaptarse a picos de tr\u00e1fico.\n\n**Requisitos:** Implementar un sistema de chat reactivo que permita la comunicaci\u00f3n bidireccional en tiempo real entre usuarios. Debe ser escalable y tolerante a fallos.\n\n**Sugerencias:** WebSockets, Vert.x, Redis.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-24T09:00:35.396574", "expiration": "2025-05-31T14:00:35.310Z", "publicAccess": true}