{"id": "a8f2d458", "examenData": {"examen_id": "075045", "nombre_examen": "Diagrama de casos de uso", "tipo_examen": "Primera Practica", "fecha": "2025-06-09T14:25:12.264Z", "nombre_profesor": "Mariela Isabel Camargo Roman", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l de estos principios NO pertenece a los principios reactivos?  \nA) Responsivo  \nB) Escalable  \nC) Monol\u00edtico  \nD) Resiliente  \nE) Orientado a mensajes", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 herramienta se usa com\u00fanmente para implementar arquitecturas reactivas en Java?  \nA) Reactor  \nB) Hibernate  \nC) Spring MVC  \nD) JDBC  \nE) JUnit", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es clave en sistemas reactivos para manejar flujos de datos?  \nA) Observer  \nB) Singleton  \nC) Factory  \nD) Decorator  \nE) Adapter", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l es el beneficio principal de usar backpressure en sistemas reactivos?  \nA) Evitar la sobrecarga del consumidor  \nB) Aumentar el acoplamiento entre componentes  \nC) Reducir la escalabilidad horizontal  \nD) Limitar el uso de mensajes as\u00edncronos  \nE) Eliminar la necesidad de resiliencia", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 lenguaje de programaci\u00f3n es ampliamente asociado con el paradigma reactivo?  \nA) Scala  \nB) COBOL  \nC) Pascal  \nD) Fortran  \nE) Assembly", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l de los siguientes principios NO es parte del Manifiesto Reactivo?  \nA) Responsivo  \nB) Escalable  \nC) Acoplado  \nD) Resiliente  \nE) Orientado a mensajes", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es clave en arquitecturas reactivas para manejar flujos de datos?  \nA) Singleton  \nB) Observer  \nC) Factory  \nD) Decorator  \nE) Adapter", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se usa com\u00fanmente para implementar sistemas reactivos en Java?  \nA) JPA  \nB) Reactor  \nC) Hibernate  \nD) JDBC  \nE) Servlets", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 ventaja principal ofrecen las arquitecturas reactivas frente a las tradicionales?  \nA) Mayor consumo de recursos hardware  \nB) Menor capacidad de procesamiento en paralelo  \nC) Mejor manejo de cargas variables y alta concurrencia  \nD) Dependencia exclusiva de bases de datos relacionales  \nE) Complejidad reducida en el c\u00f3digo monol\u00edtico", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 componente permite la comunicaci\u00f3n as\u00edncrona entre servicios en sistemas reactivos?  \nA) Load Balancers  \nB) Message Brokers  \nC) Firewalls  \nD) Proxies inversos  \nE) Bases de datos SQL", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "**\u00bfCu\u00e1les son los principales desaf\u00edos t\u00e9cnicos al dise\u00f1ar una arquitectura reactiva para manejar flujos de datos en tiempo real, y c\u00f3mo se abordan estos desaf\u00edos mediante patrones o herramientas espec\u00edficas?**", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "**Analice las diferencias entre un enfoque monol\u00edtico tradicional y una arquitectura reactiva en t\u00e9rminos de escalabilidad, tolerancia a fallos y capacidad de respuesta, destacando ventajas y desventajas de ambos modelos.**", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "**Describa el rol de los componentes no bloqueantes (non-blocking) en una arquitectura reactiva, y argumente por qu\u00e9 son esenciales para lograr alta concurrencia y eficiencia en el uso de recursos.**", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "**Dise\u00f1e una soluci\u00f3n reactiva para un sistema de reservas de hotel, detallando c\u00f3mo se garantizar\u00eda la resiliencia ante fallos de red, la gesti\u00f3n de la congesti\u00f3n y la consistencia eventual de datos.**", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Compare y contraste la filosof\u00eda de las arquitecturas reactivas con la de las arquitecturas tradicionales basadas en monolitos, destacando ventajas y desaf\u00edos en t\u00e9rminos de escalabilidad, mantenibilidad y manejo de fallos.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 16, "descripcion": "**Escenario:** Una aplicaci\u00f3n de chat en tiempo real con miles de usuarios concurrentes que requieren notificaciones instant\u00e1neas de mensajes, actualizaciones de estado y eventos del sistema.\n\n**Requisitos:**  Desarrollar un sistema de chat reactivo que soporte la comunicaci\u00f3n bidireccional en tiempo real entre usuarios, gestione la presencia de usuarios y notifique instant\u00e1neamente sobre nuevos mensajes y eventos. Debe ser escalable y eficiente en el uso de recursos.\n\n**Sugerencias:** WebSockets, Akka, Vert.x.\n\n**Preguntas:** 1. \u00bfC\u00f3mo se gestionar\u00eda la persistencia de mensajes en un sistema de chat reactivo, considerando la alta velocidad de escritura? 2. \u00bfQu\u00e9 mecanismos se implementar\u00edan para garantizar la entrega de mensajes en orden y sin p\u00e9rdida de informaci\u00f3n en un entorno distribuido?", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 17, "descripcion": "**Escenario:** Un sistema de control de tr\u00e1fico a\u00e9reo que necesita procesar y reaccionar a datos de sensores en tiempo real para garantizar la seguridad y eficiencia del espacio a\u00e9reo.\n\n**Requisitos:**  Construir un sistema reactivo que reciba datos de m\u00faltiples sensores (radar, GPS, etc.), procese la informaci\u00f3n en tiempo real y genere alertas ante situaciones cr\u00edticas.  Debe ser altamente confiable y tolerante a fallos.\n\n**Sugerencias:** RxJava, Project Reactor, Akka Streams.\n\n**Preguntas:** 1. \u00bfC\u00f3mo se gestionar\u00eda la latencia en un sistema de tiempo real cr\u00edtico como el control de tr\u00e1fico a\u00e9reo, donde cada milisegundo cuenta? 2. \u00bfQu\u00e9 estrategias de redundancia y failover se implementar\u00edan para garantizar la disponibilidad del sistema ante fallos de hardware o software?", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-06-09T09:25:12.346708", "expiration": "2025-06-16T14:25:12.264Z", "publicAccess": true}