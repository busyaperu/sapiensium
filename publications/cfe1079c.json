{"id": "cfe1079c", "examenData": {"id": "705862", "fecha": "2025-04-10", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos mediante aislamiento", "valor": "B"}, {"texto": "C) Procesamiento en lotes (batch)", "valor": "C"}, {"texto": "D) Sincronizaci\u00f3n forzada de procesos", "valor": "D"}, {"texto": "E) Centralizaci\u00f3n del estado de la aplicaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. Compara y contrasta las arquitecturas en capas (por ejemplo, 3-tier) y la arquitectura hexagonal (puertos y adaptadores), explicando sus ventajas, desventajas y casos de uso t\u00edpicos en el desarrollo de software. Incluye ejemplos concretos donde cada enfoque ser\u00eda m\u00e1s adecuado. (Nivel: intermedio)", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso de Uso 1-1**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos de ventas flash sin degradar el rendimiento. Debes dise\u00f1ar una arquitectura reactiva que garantice escalabilidad y resiliencia.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo implementar\u00edas un sistema de gesti\u00f3n de pedidos que reaccione a fluctuaciones de demanda usando patrones reactivos?  \n2. \u00bfQu\u00e9 estrategias usar\u00edas para manejar fallos en microservicios cr\u00edticos (ej: procesamiento de pagos) sin afectar la experiencia del usuario?  \n\n**Requisitos espec\u00edficos:**  \n- Usar mensajer\u00eda as\u00edncrona para desacoplar componentes.  \n- Implementar circuit breakers para manejo de fallos.  \n- Garantizar consistencia eventual en el sistema de pedidos.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Kafka, Akka, Spring WebFlux, Resilience4j.  \n- Enfoques: Event Sourcing, CQRS, backpressure para control de flujo.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-09T19:34:00.308159", "expiration": "2025-04-17T00:34:00.297Z", "publicAccess": true}