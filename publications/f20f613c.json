{"id": "f20f613c", "examenData": {"examen_id": "651445", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-27T18:03:54.435Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza frecuentemente en arquitecturas reactivas para manejar la concurrencia?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Strategy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "Un sistema reactivo idealmente debe ser:\nA) Monol\u00edtico\nB) Sincr\u00f3nico\nC) Bloqueante\nD) Escalable\nE) Centralizado", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l es la principal ventaja del uso de backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Menor consumo de memoria\nC) Prevenci\u00f3n de sobrecarga del sistema\nD) Simplificaci\u00f3n del c\u00f3digo\nE) Aumento de la latencia", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es com\u00fanmente utilizada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) JPA", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfCu\u00e1l de las siguientes caracter\u00edsticas describe mejor la resiliencia en una arquitectura reactiva?\nA) Capacidad para manejar picos de carga\nB) Capacidad para recuperarse de fallos\nC) Capacidad para responder r\u00e1pidamente a las solicitudes\nD) Capacidad para procesar grandes vol\u00famenes de datos\nE) Capacidad para distribuir la carga de trabajo", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 6, "texto": "Explique c\u00f3mo el patr\u00f3n de dise\u00f1o Reactor implementa el modelo reactivo, detallando sus componentes principales (reactor, handlers, selectors) y su funcionamiento en la gesti\u00f3n de eventos as\u00edncronos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 7, "texto": "Analice las implicaciones de la implementaci\u00f3n de backpressure en un sistema distribuido basado en arquitecturas reactivas.  \u00bfC\u00f3mo se gestiona la sobrecarga y se evita el colapso del sistema?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 8, "texto": "Compare y contraste dos frameworks reactivos populares (ej. Spring WebFlux y Akka Streams),  destacando sus fortalezas y debilidades en diferentes escenarios de uso.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 9, "texto": "Dise\u00f1e una arquitectura reactiva para una aplicaci\u00f3n de streaming de video en tiempo real, considerando aspectos como la escalabilidad, la tolerancia a fallos y la gesti\u00f3n eficiente de recursos.  Incluya una descripci\u00f3n de las tecnolog\u00edas y patrones de dise\u00f1o que utilizar\u00eda.", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 10, "texto": "Explique c\u00f3mo la programaci\u00f3n reactiva y el patr\u00f3n de dise\u00f1o Reactor (o similar) contribuyen a la escalabilidad y resiliencia de una arquitectura distribuida.  Ilustre su respuesta con un diagrama que muestre el flujo de datos.", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 11, "texto": "Analice las implicaciones de la gesti\u00f3n de errores y la tolerancia a fallos en un sistema distribuido basado en una arquitectura reactiva. \u00bfC\u00f3mo se manejan las excepciones y los tiempos de espera en este tipo de arquitectura?  \u00bfQu\u00e9 patrones de dise\u00f1o son particularmente \u00fatiles en este contexto?", "puntaje": 1.5, "respuestaAlumno": ""}], "casos_uso": [{"numero": 12, "descripcion": "**Escenario:** Sistema de trading de alta frecuencia.\n    **Pregunta 1:** \u00bfC\u00f3mo manejar picos de volumen de \u00f3rdenes repentinos sin afectar la latencia general del sistema?\n    **Pregunta 2:** \u00bfC\u00f3mo asegurar la consistencia de datos entre diferentes componentes del sistema (ej., motor de matching, gesti\u00f3n de riesgos) cuando las actualizaciones son frecuentes y simult\u00e1neas?\n    **Requisitos:** Implementar un mecanismo de backpressure y un protocolo de comunicaci\u00f3n as\u00edncrono tolerante a fallos.\n    **Sugerencias:** Reactive Streams, Apache Kafka, Akka.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 13, "descripcion": "**Escenario:** Plataforma de juegos online multijugador masivo (MMO).\n    **Pregunta 1:** \u00bfC\u00f3mo escalar din\u00e1micamente el n\u00famero de instancias de servidor de juego en respuesta a fluctuaciones en el n\u00famero de jugadores concurrentes?\n    **Pregunta 2:** \u00bfC\u00f3mo notificar a los jugadores de forma eficiente sobre eventos relevantes que ocurren en el juego (ej., acciones de otros jugadores, cambios en el entorno) sin sobrecargar la red?\n    **Requisitos:** Implementar auto-scaling basado en m\u00e9tricas de rendimiento y un sistema de publicaci\u00f3n/suscripci\u00f3n en tiempo real.\n    **Sugerencias:** Kubernetes, gRPC, WebSockets con Reactive Extensions.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-27T13:03:54.487342", "expiration": "2025-06-03T18:03:54.435Z", "publicAccess": true}