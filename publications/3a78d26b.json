{"id": "3a78d26b", "examenData": {"examen_id": "825738", "nombre_examen": "Principios SOLID de dise\u00f1o orientado a objetos", "tipo_examen": "PC2", "fecha": "2025-06-09T19:12:28.427Z", "nombre_profesor": "Mariela Isabel Camargo Roman", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 principio SOLID se relaciona con la capacidad de sustituir un objeto por un subtipo sin alterar el comportamiento del programa?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de Interfaces", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "El Principio de Segregaci\u00f3n de Interfaces sugiere que:", "puntaje": 1, "opciones": [{"texto": "Las interfaces deben tener m\u00faltiples m\u00e9todos para cubrir todas las funcionalidades", "valor": "A"}, {"texto": "Los clientes no deben verse obligados a depender de interfaces que no usan", "valor": "B"}, {"texto": "Las interfaces deben heredar de clases abstractas", "valor": "C"}, {"texto": "Las interfaces deben ser reemplazadas por clases concretas", "valor": "D"}, {"texto": "Las interfaces deben evitarse en el dise\u00f1o orientado a objetos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l de los siguientes principios SOLID promueve el uso de abstracciones en lugar de dependencias concretas?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de Interfaces", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 problema intenta resolver el Principio de Responsabilidad \u00danica?", "puntaje": 1, "opciones": [{"texto": "La dificultad para extender funcionalidades existentes", "valor": "A"}, {"texto": "La rigidez en las dependencias entre m\u00f3dulos", "valor": "B"}, {"texto": "La alta cohesi\u00f3n y bajo acoplamiento en las clases", "valor": "C"}, {"texto": "La falta de claridad en las jerarqu\u00edas de herencia", "valor": "D"}, {"texto": "La sobrecarga de responsabilidades en una sola clase", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "Seg\u00fan SOLID, \u00bfqu\u00e9 caracter\u00edstica debe tener una clase para cumplir con el Principio de Abierto/Cerrado?", "puntaje": 1, "opciones": [{"texto": "Debe ser modificada constantemente para agregar nuevas funcionalidades", "valor": "A"}, {"texto": "Debe permitir nuevas funcionalidades mediante herencia o composici\u00f3n sin modificar su c\u00f3digo", "valor": "B"}, {"texto": "Debe evitar el uso de interfaces o clases abstractas", "valor": "C"}, {"texto": "Debe depender directamente de implementaciones concretas", "valor": "D"}, {"texto": "Debe contener m\u00faltiples responsabilidades para ser flexible", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l de los siguientes es un beneficio directo del Principio de Sustituci\u00f3n de Liskov?", "puntaje": 1, "opciones": [{"texto": "Reduce la necesidad de usar polimorfismo", "valor": "A"}, {"texto": "Permite que las subclases alteren el comportamiento esperado de la superclase", "valor": "B"}, {"texto": "Garantiza que las subclases puedan usarse en lugar de sus superclases sin errores", "valor": "C"}, {"texto": "Elimina la necesidad de herencia en el dise\u00f1o", "valor": "D"}, {"texto": "Fomenta el acoplamiento fuerte entre clases", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "El Principio de Inversi\u00f3n de Dependencias establece que:", "puntaje": 1, "opciones": [{"texto": "Los m\u00f3dulos de alto nivel deben depender de m\u00f3dulos de bajo nivel", "valor": "A"}, {"texto": "Los detalles deben depender de abstracciones, no al rev\u00e9s", "valor": "B"}, {"texto": "Las clases concretas deben heredar directamente de otras clases concretas", "valor": "C"}, {"texto": "Las interfaces son innecesarias en el dise\u00f1o de software", "valor": "D"}, {"texto": "Las dependencias deben resolverse en tiempo de ejecuci\u00f3n en lugar de compilaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 principio SOLID se viola cuando una clase implementa una interfaz con m\u00e9todos que no utiliza?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de Interfaces", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 principio SOLID se centra en la extensibilidad del software sin modificar el c\u00f3digo existente?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "El principio de Sustituci\u00f3n de Liskov se relaciona con:", "puntaje": 1, "opciones": [{"texto": "La creaci\u00f3n de objetos a trav\u00e9s de f\u00e1bricas.", "valor": "A"}, {"texto": "La herencia y la capacidad de sustituir subtipos por sus tipos base.", "valor": "B"}, {"texto": "La separaci\u00f3n de interfaces.", "valor": "C"}, {"texto": "La dependencia de abstracciones.", "valor": "D"}, {"texto": "La cohesi\u00f3n de las clases.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 11, "texto": "\u00bfCu\u00e1l principio SOLID busca evitar interfaces \"gordas\" que obligan a las clases a implementar m\u00e9todos que no necesitan?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 12, "texto": "El Principio de Inversi\u00f3n de Dependencias promueve:", "puntaje": 1, "opciones": [{"texto": "La dependencia en clases concretas.", "valor": "A"}, {"texto": "La dependencia en abstracciones en lugar de concreciones.", "valor": "B"}, {"texto": "La creaci\u00f3n de objetos dependientes dentro de la misma clase.", "valor": "C"}, {"texto": "La modificaci\u00f3n del c\u00f3digo existente para extender la funcionalidad.", "valor": "D"}, {"texto": "La creaci\u00f3n de interfaces con muchos m\u00e9todos.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 13, "texto": "\u00bfQu\u00e9 principio SOLID ayuda a mantener las clases enfocadas en una tarea espec\u00edfica?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 14, "texto": "Si una subclase no puede reemplazar completamente a su superclase sin alterar el comportamiento del sistema, \u00bfqu\u00e9 principio SOLID se est\u00e1 violando?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 15, "texto": "\u00bfCu\u00e1l es el objetivo principal de los principios SOLID?", "puntaje": 1, "opciones": [{"texto": "Complicar el dise\u00f1o del software.", "valor": "A"}, {"texto": "Crear software mantenible, escalable y flexible.", "valor": "B"}, {"texto": "Reducir la cantidad de c\u00f3digo.", "valor": "C"}, {"texto": "Aumentar la complejidad del c\u00f3digo.", "valor": "D"}, {"texto": "Evitar el uso de interfaces.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 16, "texto": "\u00bfQu\u00e9 principio SOLID se relaciona con la dependencia de abstracciones y no de implementaciones concretas?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 17, "texto": "\u00bfQu\u00e9 principio SOLID fomenta la creaci\u00f3n de interfaces espec\u00edficas para cada cliente en lugar de una interfaz general?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencias", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 18, "texto": "El Principio de Abierto/Cerrado establece que las entidades de software deben estar:", "puntaje": 1, "opciones": [{"texto": "Abiertas para la modificaci\u00f3n, cerradas para la extensi\u00f3n", "valor": "A"}, {"texto": "Cerradas para la modificaci\u00f3n, abiertas para la extensi\u00f3n", "valor": "B"}, {"texto": "Abiertas para la modificaci\u00f3n y la extensi\u00f3n", "valor": "C"}, {"texto": "Cerradas para la modificaci\u00f3n y la extensi\u00f3n", "valor": "D"}, {"texto": "Ninguna de las anteriores", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 19, "texto": "\u00bfQu\u00e9 principio SOLID se viola cuando una subclase cambia el comportamiento fundamental de su superclase de una manera inesperada?", "puntaje": 1, "opciones": [{"texto": "Principio de Responsabilidad \u00danica", "valor": "A"}, {"texto": "Principio de Abierto/Cerrado", "valor": "B"}, {"texto": "Principio de Sustituci\u00f3n de Liskov", "valor": "C"}, {"texto": "Principio de Segregaci\u00f3n de la Interfaz", "valor": "D"}, {"texto": "Principio de Inversi\u00f3n de Dependencia", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 20, "texto": "El Principio de Segregaci\u00f3n de la Interfaz promueve:", "puntaje": 1, "opciones": [{"texto": "Interfaces grandes y complejas", "valor": "A"}, {"texto": "Interfaces peque\u00f1as y espec\u00edficas", "valor": "B"}, {"texto": "La dependencia de clases concretas", "valor": "C"}, {"texto": "La herencia m\u00faltiple", "valor": "D"}, {"texto": "Ninguna de las anteriores", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [], "casos_uso": []}, "createdAt": "2025-06-09T14:12:28.565925", "expiration": "2025-06-16T19:12:28.427Z", "publicAccess": true}