{"id": "a02f3f3e", "examenData": {"examen_id": "857053", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-04-30T22:34:49.162Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de mensajer\u00eda se utiliza com\u00fanmente en sistemas reactivos para manejar la contrapresi\u00f3n?", "puntaje": 1, "opciones": [{"texto": "Publicaci\u00f3n/Suscripci\u00f3n", "valor": "A"}, {"texto": "Solicitud/Respuesta", "valor": "B"}, {"texto": "Cola de mensajes", "valor": "C"}, {"texto": "Push-pull", "valor": "D"}, {"texto": "Ninguna de las anteriores", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l de las siguientes opciones describe mejor la \"elasticidad\" en un sistema reactivo?", "puntaje": 1, "opciones": [{"texto": "La capacidad de mantenerse responsivo bajo carga variable.", "valor": "A"}, {"texto": "La capacidad de recuperarse de fallas.", "valor": "B"}, {"texto": "La capacidad de manejar grandes vol\u00famenes de datos.", "valor": "C"}, {"texto": "La capacidad de comunicarse de forma as\u00edncrona.", "valor": "D"}, {"texto": "La capacidad de ser determinista.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 es un \"backpressure\" en el contexto de los sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Un mecanismo para manejar la sobrecarga del sistema.", "valor": "A"}, {"texto": "Un tipo de fallo del sistema.", "valor": "B"}, {"texto": "Un m\u00e9todo para escalar horizontalmente.", "valor": "C"}, {"texto": "Un patr\u00f3n de dise\u00f1o para la resiliencia.", "valor": "D"}, {"texto": "Un protocolo de comunicaci\u00f3n.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes NO es una ventaja de usar Arquitecturas Reactivas?", "puntaje": 1, "opciones": [{"texto": "Mayor capacidad de respuesta", "valor": "A"}, {"texto": "Mayor resiliencia", "valor": "B"}, {"texto": "Mayor complejidad", "valor": "C"}, {"texto": "Mejor escalabilidad", "valor": "D"}, {"texto": "Mayor eficiencia de recursos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 tipo de concurrencia se utiliza a menudo en sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Concurrencia basada en hilos", "valor": "A"}, {"texto": "Concurrencia basada en eventos", "valor": "B"}, {"texto": "Concurrencia basada en procesos", "valor": "C"}, {"texto": "Concurrencia basada en bloqueos", "valor": "D"}, {"texto": "Ninguna de las anteriores", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l de las siguientes herramientas o bibliotecas se utiliza com\u00fanmente para construir sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Spring Boot", "valor": "A"}, {"texto": "ReactJS", "valor": "B"}, {"texto": "Akka", "valor": "C"}, {"texto": "RxJava", "valor": "D"}, {"texto": "Todas las anteriores", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 concepto se utiliza para aislar fallos en un sistema reactivo?", "puntaje": 1, "opciones": [{"texto": "Aislamiento de fallos", "valor": "A"}, {"texto": "Tolerancia a fallos", "valor": "B"}, {"texto": "Recuperaci\u00f3n de fallos", "valor": "C"}, {"texto": "Replicaci\u00f3n de datos", "valor": "D"}, {"texto": "Ninguna de las anteriores", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfCu\u00e1l es el papel de un \"supervisor\" en un sistema reactivo?", "puntaje": 1, "opciones": [{"texto": "Monitorear y gestionar el ciclo de vida de los componentes.", "valor": "A"}, {"texto": "Manejar la comunicaci\u00f3n entre componentes.", "valor": "B"}, {"texto": "Procesar datos de forma as\u00edncrona.", "valor": "C"}, {"texto": "Escalar el sistema horizontalmente.", "valor": "D"}, {"texto": "Equilibrar la carga entre componentes.", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l de las siguientes opciones describe mejor el principio de \"responsividad\" en un sistema reactivo?", "puntaje": 1, "opciones": [{"texto": "El sistema debe responder de manera oportuna incluso bajo falla.", "valor": "A"}, {"texto": "El sistema debe ser capaz de recuperarse de fallas.", "valor": "B"}, {"texto": "El sistema debe ser capaz de manejar grandes vol\u00famenes de datos.", "valor": "C"}, {"texto": "El sistema debe comunicarse de forma as\u00edncrona.", "valor": "D"}, {"texto": "El sistema debe ser determinista.", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 10, "texto": "\u00bfC\u00f3mo se relaciona el patr\u00f3n de dise\u00f1o \"Circuit Breaker\" con la resiliencia en arquitecturas reactivas?  Explica su funcionamiento y proporciona un ejemplo de su implementaci\u00f3n.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 11, "texto": "Compara y contrasta los enfoques s\u00edncronos y as\u00edncronos en el contexto de las arquitecturas reactivas. \u00bfCu\u00e1les son las ventajas y desventajas de cada uno?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "\u00bfQu\u00e9 papel juegan los mensajes inmutables en las arquitecturas reactivas y c\u00f3mo impactan en la gesti\u00f3n del estado y la concurrencia?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Describe c\u00f3mo la retropresi\u00f3n (backpressure) ayuda a gestionar la carga en sistemas reactivos y previene la sobrecarga del sistema.  Proporciona un ejemplo de una estrategia de retropresi\u00f3n.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 14, "descripcion": "**Escenario pr\u00e1ctico detallado:** Una plataforma de comercio electr\u00f3nico necesita mejorar la resiliencia y la escalabilidad de su proceso de gesti\u00f3n de inventario en tiempo real. El sistema actual sufre ca\u00eddas cuando hay picos de demanda (ej. Black Friday) y las actualizaciones de stock entre la web, la base de datos y los almacenes f\u00edsicos son inconsistentes. Se requiere un sistema que reaccione a los cambios de inventario de m\u00faltiples fuentes (ventas web, devoluciones, recepciones de almac\u00e9n) de forma as\u00edncrona, garantizando consistencia eventual y manejando fallos en los sistemas externos sin detener el procesamiento.\n    **Requisitos espec\u00edficos:** Dise\u00f1e la arquitectura reactiva del subsistema de gesti\u00f3n de inventario. Explique c\u00f3mo se manejar\u00eda la propagaci\u00f3n de eventos de cambio de stock, c\u00f3mo se garantizar\u00eda la resiliencia ante la ca\u00edda de un almac\u00e9n o una base de datos externa, y c\u00f3mo el sistema escalar\u00eda autom\u00e1ticamente ante un aumento dr\u00e1stico de transacciones. Describa los principios reactivos aplicados.\n    **Sugerencias de herramientas o enfoques:** Akka (Actors), Spring WebFlux/Reactor, Kafka/RabbitMQ (Message Broker), Patr\u00f3n Event Sourcing, Patr\u00f3n CQRS.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 15, "descripcion": "**Escenario pr\u00e1ctico detallado:** Una empresa de an\u00e1lisis de datos necesita procesar flujos masivos de datos de sensores de veh\u00edculos conectados en tiempo real. Los datos llegan de millones de veh\u00edculos simult\u00e1neamente, con picos impredecibles. Se requiere un sistema capaz de ingerir, filtrar y agregar estos datos con baja latencia, ser tolerante a fallos (la p\u00e9rdida de datos de un veh\u00edculo no debe afectar a otros) y ajustar su capacidad de procesamiento din\u00e1micamente seg\u00fan el volumen de datos entrante.\n    **Requisitos espec\u00edficos:** Proponga una arquitectura reactiva para la ingesta y procesamiento inicial de los datos de sensores. Detalle c\u00f3mo se manejar\u00eda la elasticidad para escalar el procesamiento, c\u00f3mo se asegurar\u00eda la resiliencia ante fallos de nodos de procesamiento, y c\u00f3mo se implementar\u00eda la comunicaci\u00f3n as\u00edncrona entre las etapas de ingesta, filtrado y agregaci\u00f3n. Identifique los componentes clave y su interacci\u00f3n basada en mensajes.\n    **Sugerencias de herramientas o enfoques:** Apache Kafka (Streaming Platform), Apache Flink/Spark Streaming (Stream Processing), Akka Streams, Kubernetes (Orquestaci\u00f3n para Elasticidad), Patr\u00f3n Publish-Subscribe.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-30T17:34:49.222137", "expiration": "2025-05-07T22:34:49.162Z", "publicAccess": true}