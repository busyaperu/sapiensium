{"id": "042b301d", "examenData": {"id": "323692", "fecha": "2025-04-08", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Escalabilidad vertical", "valor": "A"}, {"texto": "B) Acoplamiento fuerte entre componentes", "valor": "B"}, {"texto": "C) Tolerancia a fallos", "valor": "C"}, {"texto": "D) Procesamiento s\u00edncrono", "valor": "D"}, {"texto": "E) Dependencia de bases de datos relacionales", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Alto acoplamiento entre componentes", "valor": "A"}, {"texto": "B) Escalabilidad limitada", "valor": "B"}, {"texto": "C) Respuesta en tiempo real a eventos", "valor": "C"}, {"texto": "D) Uso exclusivo de bases de datos relacionales", "valor": "D"}, {"texto": "E) Procesamiento por lotes (batch) como principal patr\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Tolerancia al fallo mediante la replicaci\u00f3n de estado", "valor": "B"}, {"texto": "C) Comunicaci\u00f3n s\u00edncrona por defecto", "valor": "C"}, {"texto": "D) Centralizaci\u00f3n del manejo de errores", "valor": "D"}, {"texto": "E) Uso exclusivo de bases de datos relacionales", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. **Avanzado**: Compare y contraste las arquitecturas en capas y hexagonal en t\u00e9rminos de acoplamiento, cohesi\u00f3n y escalabilidad. Incluya ejemplos concretos de escenarios donde cada arquitectura ser\u00eda m\u00e1s adecuada, justificando su respuesta.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 2, "texto": "1-1 Compara y contrasta la arquitectura en capas tradicional con la arquitectura hexagonal, explicando las ventajas y desventajas de cada una en t\u00e9rminos de acoplamiento, cohesi\u00f3n y adaptabilidad a cambios en los requisitos del sistema. Proporciona ejemplos concretos donde cada arquitectura ser\u00eda m\u00e1s adecuada. (nivel: intermedio)\n\n(Soluci\u00f3n de muestra no requerida seg\u00fan las restricciones)", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso de uso 1-1**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos de ventas flash sin degradar el rendimiento. El sistema debe procesar \u00f3rdenes en tiempo real, notificar a los usuarios sobre el estado de sus pedidos y mantener la consistencia de los datos.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo dise\u00f1ar\u00edas una arquitectura reactiva para garantizar escalabilidad y resiliencia durante picos de carga?  \n2. \u00bfQu\u00e9 patrones reactivos utilizar\u00edas para manejar el flujo as\u00edncrono de \u00f3rdenes y notificaciones?  \n\n**Requisitos espec\u00edficos:**  \n- Implementar un sistema basado en mensajer\u00eda as\u00edncrona.  \n- Garantizar consistencia eventual en los datos de pedidos.  \n- Utilizar circuit breakers para manejar fallos en servicios externos.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Kafka, Akka, Spring WebFlux, Reactor.  \n- Enfoques: Event Sourcing, CQRS, patr\u00f3n Saga.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-08T17:21:06.551913", "expiration": "2025-04-15T22:21:06.530Z", "publicAccess": true}