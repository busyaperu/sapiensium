{"id": "8316d1d1", "examenData": {"id": "506370", "fecha": "2025-04-07", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Escalabilidad limitada", "valor": "B"}, {"texto": "C) Tolerancia a fallos integrada", "valor": "C"}, {"texto": "D) Sincronizaci\u00f3n r\u00edgida de procesos", "valor": "D"}, {"texto": "E) Bajo rendimiento en sistemas distribuidos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Escalabilidad vertical limitada", "valor": "A"}, {"texto": "B) Acoplamiento fuerte entre componentes", "valor": "B"}, {"texto": "C) Procesamiento s\u00edncrono por defecto", "valor": "C"}, {"texto": "D) Tolerancia a fallos integrada", "valor": "D"}, {"texto": "E) Dependencia de bases de datos relacionales", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. Describe las principales diferencias entre la arquitectura en capas tradicional (como la arquitectura de 3 capas) y la arquitectura hexagonal. Explica en qu\u00e9 situaciones ser\u00eda m\u00e1s conveniente utilizar cada una, considerando aspectos como acoplamiento, testabilidad y mantenibilidad del sistema. (nivel intermedio)", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso de uso 1-1:**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos como el Black Friday, garantizando alta disponibilidad y respuestas en tiempo real para actualizaciones de inventario y procesamiento de pedidos.  \n\n**Preguntas de casos de uso:**  \n1. \u00bfC\u00f3mo dise\u00f1ar\u00edas un sistema reactivo para manejar escalabilidad autom\u00e1tica y recuperaci\u00f3n ante fallos durante picos de demanda?  \n2. \u00bfQu\u00e9 patrones reactivos (ej. Circuit Breaker, Event Sourcing) aplicar\u00edas para garantizar consistencia en las actualizaciones de inventario?  \n\n**Requisitos espec\u00edficos:**  \n- Implementar un servicio de pedidos que reaccione a eventos de compra.  \n- Garantizar consistencia eventual entre microservicios de inventario y pedidos.  \n- Demostrar resiliencia mediante reintentos y timeouts.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Akka, Spring WebFlux, Kafka, Kubernetes.  \n- Enfoques: Patr\u00f3n CQRS, colas de eventos, escalado horizontal.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-07T11:42:44.089470", "expiration": "2025-04-14T16:42:44.072Z", "publicAccess": true}