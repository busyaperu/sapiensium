{"id": "aaa926e2", "examenData": {"examen_id": "691763", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-04-30T19:50:30.609Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es com\u00fan en sistemas reactivos para manejar flujos de datos as\u00edncronos?  \nA) Singleton  \nB) Observer  \nC) Decorator  \nD) Factory  \nE) Proxy", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se utiliza com\u00fanmente para implementar sistemas reactivos en Java?  \nA) Spring MVC  \nB) Hibernate  \nC) Reactor  \nD) JDBC  \nE) JSP", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l de las siguientes caracter\u00edsticas NO es parte del Manifiesto Reactivo?  \nA) Responsivo  \nB) Escalable  \nC) Monol\u00edtico  \nD) Resiliente  \nE) Orientado a mensajes", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 tipo de comunicaci\u00f3n se promueve en las arquitecturas reactivas?  \nA) S\u00edncrona  \nB) Bloqueante  \nC) As\u00edncrona  \nD) Directa  \nE) Basada en sesiones", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 componente es esencial en un sistema reactivo para manejar la concurrencia?  \nA) Hilos tradicionales  \nB) Event loops  \nC) Variables globales  \nD) Locks expl\u00edcitos  \nE) Transacciones largas", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 6, "texto": "**Intermedio:** Compara y contrasta el uso de *Event Sourcing* con *CQRS* en una arquitectura reactiva, detallando los beneficios y desaf\u00edos de cada enfoque en un escenario de alta concurrencia.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 7, "texto": "**Avanzado:** Analiza c\u00f3mo el *Backpressure* se maneja en sistemas reactivos y prop\u00f3n una estrategia para implementarlo en un flujo de datos en tiempo real con picos de carga impredecibles.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 8, "texto": "**Intermedio:** Explica c\u00f3mo las arquitecturas reactivas abordan el problema de la latencia en sistemas distribuidos, mencionando patrones como *Circuit Breaker* o *Bulkheading* con ejemplos concretos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 9, "texto": "**Avanzado:** Dise\u00f1a un esquema de comunicaci\u00f3n entre microservicios reactivos utilizando mensajer\u00eda as\u00edncrona, justificando la elecci\u00f3n de tecnolog\u00edas como Kafka o RabbitMQ y c\u00f3mo garantizas la consistencia eventual.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 10, "texto": "**Intermedio**: Compara y contrasta el modelo de actores con los sistemas basados en eventos en arquitecturas reactivas, destacando ventajas, desventajas y casos de uso t\u00edpicos para cada uno.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 11, "descripcion": "1. **Caso de uso 1: Sistema de reservas en tiempo real para un cine**  \n   - **Escenario**: Un cine necesita un sistema que permita a los usuarios reservar asientos en tiempo real, evitando conflictos cuando m\u00faltiples usuarios intentan reservar el mismo asiento simult\u00e1neamente.  \n   - **Requisitos**:  \n     - Implementar un sistema reactivo que notifique a los usuarios cuando un asiento ya est\u00e1 ocupado.  \n     - Garantizar la consistencia de los datos en alta concurrencia.  \n   - **Herramientas sugeridas**: Akka (Actor Model), WebSockets, Base de datos con soporte para transacciones (PostgreSQL).  \n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-30T14:50:30.640703", "expiration": "2025-05-07T19:50:30.609Z", "publicAccess": true}