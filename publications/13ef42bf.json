{"id": "13ef42bf", "examenData": {"examen_id": "075170", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-04-30T19:03:33.999Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l de los siguientes es un principio clave de las arquitecturas reactivas seg\u00fan el Manifiesto Reactivo?  \nA) Tolerancia al acoplamiento  \nB) Responsividad  \nC) Centralizaci\u00f3n del estado  \nD) Sincronizaci\u00f3n forzada  \nE) Jerarqu\u00eda r\u00edgida de componentes", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es com\u00fan en sistemas reactivos para manejar flujos de datos?  \nA) Singleton  \nB) Observer  \nC) Decorator  \nD) Factory  \nE) Proxy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se utiliza frecuentemente para implementar sistemas reactivos en Java?  \nA) JPA  \nB) Reactor  \nC) Hibernate  \nD) Spring MVC  \nE) JDBC", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 ventaja ofrece el modelo de mensajer\u00eda as\u00edncrona en arquitecturas reactivas?  \nA) Mayor latencia  \nB) Menor escalabilidad  \nC) Mejor aislamiento de fallos  \nD) Acoplamiento temporal  \nE) Dependencia de respuestas inmediatas", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfCu\u00e1l de estos frameworks es ampliamente usado para construir aplicaciones reactivas en JavaScript?  \nA) AngularJS  \nB) jQuery  \nC) React.js  \nD) Express  \nE) Lodash", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es clave en sistemas reactivos para manejar el flujo de datos?  \nA) Singleton  \nB) Observer  \nC) Decorator  \nD) Factory  \nE) Proxy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfCu\u00e1l de estas tecnolog\u00edas se usa com\u00fanmente para implementar sistemas reactivos?  \nA) ReactJS  \nB) Apache Kafka  \nC) MySQL  \nD) RESTful APIs  \nE) HTML5", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 caracter\u00edstica define a un sistema reactivo seg\u00fan el Manifiesto Reactivo?  \nA) Jerarqu\u00eda estricta  \nB) Respuesta en lote  \nC) Resiliencia  \nD) Acoplamiento temporal  \nE) Monolitismo", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 componente en una arquitectura reactiva es responsable de manejar errores sin detener el sistema?  \nA) Load Balancer  \nB) Circuit Breaker  \nC) API Gateway  \nD) Servidor de cach\u00e9  \nE) Base de datos relacional", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfCu\u00e1l de los siguientes NO es un beneficio de las arquitecturas reactivas?  \nA) Escalabilidad horizontal  \nB) Baja latencia  \nC) Alta disponibilidad  \nD) Consistencia inmediata  \nE) Tolerancia a fallos", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "**Describe c\u00f3mo el principio de \"responsabilidad \u00fanica\" se aplica en los componentes de una arquitectura reactiva y por qu\u00e9 es importante.**", "puntaje": 0.5, "respuestaAlumno": ""}, {"numero": 12, "texto": "**Compara el manejo de estados en una arquitectura reactiva tradicional (como React) frente a un enfoque no reactivo (como jQuery), destacando ventajas y desventajas.**", "puntaje": 0.5, "respuestaAlumno": ""}, {"numero": 13, "texto": "**\u00bfQu\u00e9 problemas puede resolver el uso de un patr\u00f3n como Flux o Redux en una aplicaci\u00f3n reactiva? Proporciona un ejemplo concreto.**", "puntaje": 0.5, "respuestaAlumno": ""}, {"numero": 14, "texto": "**Analiza c\u00f3mo el renderizado condicional en frameworks reactivos mejora la eficiencia de una aplicaci\u00f3n frente a m\u00e9todos tradicionales de manipulaci\u00f3n del DOM.**", "puntaje": 0.5, "respuestaAlumno": ""}, {"numero": 15, "texto": "**Intermedio:** Describe c\u00f3mo el patr\u00f3n de dise\u00f1o \"Event Sourcing\" se integra dentro de una arquitectura reactiva y qu\u00e9 beneficios aporta en sistemas distribuidos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 16, "texto": "**Intermedio:** Compara el modelo de comunicaci\u00f3n basado en mensajes con el modelo tradicional orientado a servicios (SOA) en el contexto de las arquitecturas reactivas.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 17, "texto": "**B\u00e1sico:** \u00bfPor qu\u00e9 la resiliencia es un concepto clave en las arquitecturas reactivas? Proporciona un ejemplo pr\u00e1ctico de c\u00f3mo se puede lograr.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 18, "descripcion": "1. **Caso de uso: Sistema de monitoreo de tr\u00e1fico en tiempo real**  \n   - **Escenario**: Una ciudad quiere implementar un sistema reactivo que procese flujos de datos de sensores de tr\u00e1fico para detectar congestiones y notificar a los conductores mediante una app m\u00f3vil.  \n   - **Requisitos**: El estudiante debe dise\u00f1ar una arquitectura reactiva que procese eventos de sensores, aplique filtros para identificar congestiones y env\u00ede alertas en tiempo real.  \n   - **Herramientas sugeridas**: Apache Kafka para el streaming de datos, Akka o Project Reactor para el procesamiento reactivo, y Firebase para notificaciones push.  \n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 19, "descripcion": "1. **Caso de uso: Sistema de reservas en tiempo real para cines**  \n   - **Escenario**: Un cine quiere implementar un sistema de reservas que maneje picos de demanda durante estrenos de pel\u00edculas, garantizando disponibilidad de asientos y actualizaci\u00f3n inmediata para todos los usuarios.  \n   - **Requisitos**:  \n     - Implementar un sistema reactivo que maneje concurrencia alta.  \n     - Garantizar consistencia en la asignaci\u00f3n de asientos (evitar dobles reservas).  \n   - **Herramientas sugeridas**: Akka (Actor Model), Spring WebFlux, base de datos distribuida (Cassandra).  \n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-30T14:03:34.044436", "expiration": "2025-05-07T19:03:33.999Z", "publicAccess": true}