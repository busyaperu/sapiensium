{"id": "f205dbd7", "examenData": {"examen_id": "455175", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-06-06T18:27:42.320Z", "nombre_profesor": "Mariela Isabel Camargo Roman", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 caracter\u00edstica de las arquitecturas reactivas se enfoca en manejar fallos de manera efectiva?", "puntaje": 1, "opciones": [{"texto": "Alta concurrencia", "valor": "A"}, {"texto": "Resiliencia", "valor": "B"}, {"texto": "Transparencia", "valor": "C"}, {"texto": "Velocidad de respuesta", "valor": "D"}, {"texto": "Centralizaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "En un sistema reactivo, \u00bfqu\u00e9 patr\u00f3n se utiliza com\u00fanmente para evitar el colapso del sistema ante fallos repetidos?", "puntaje": 1, "opciones": [{"texto": "Retry", "valor": "A"}, {"texto": "Circuit Breaker", "valor": "B"}, {"texto": "Singleton", "valor": "C"}, {"texto": "Observer", "valor": "D"}, {"texto": "Proxy", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l de los siguientes t\u00e9rminos describe mejor el objetivo de la elasticidad en arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "Usar recursos m\u00ednimos en todo momento", "valor": "A"}, {"texto": "Ajustar recursos din\u00e1micamente seg\u00fan la demanda", "valor": "B"}, {"texto": "Priorizar la latencia sobre la velocidad", "valor": "C"}, {"texto": "Responder solo a eventos cr\u00edticos", "valor": "D"}, {"texto": "Eliminar completamente los mensajes", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 componente es esencial para garantizar la comunicaci\u00f3n asincr\u00f3nica en sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Bases de datos compartidas", "valor": "A"}, {"texto": "Colas de mensajes", "valor": "B"}, {"texto": "Servicios monol\u00edticos", "valor": "C"}, {"texto": "Llamadas REST s\u00edncronas", "valor": "D"}, {"texto": "Transacciones de base de datos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfCu\u00e1l de las siguientes tecnolog\u00edas NO se alinea con el principio de mensajer\u00eda dirigida (message-driven)?", "puntaje": 1, "opciones": [{"texto": "Apache Kafka", "valor": "A"}, {"texto": "Akka", "valor": "B"}, {"texto": "REST API", "valor": "C"}, {"texto": "RabbitMQ", "valor": "D"}, {"texto": "Redis Pub/Sub", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "En el contexto de arquitecturas reactivas, \u00bfqu\u00e9 implica la propiedad de \"responsividad\"?", "puntaje": 1, "opciones": [{"texto": "Usar un solo hilo de ejecuci\u00f3n", "valor": "A"}, {"texto": "Garantizar respuestas \u00fanicas y predecibles", "valor": "B"}, {"texto": "Responder en un tiempo predecible y dentro de l\u00edmites aceptables", "valor": "C"}, {"texto": "Minimizar el uso de recursos", "valor": "D"}, {"texto": "Evitar la persistencia de datos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 patr\u00f3n se asocia estrechamente con la gesti\u00f3n de eventos en sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Microservicios", "valor": "A"}, {"texto": "CQRS (Command Query Responsibility Segregation)", "valor": "B"}, {"texto": "Singleton", "valor": "C"}, {"texto": "Stateful Services", "valor": "D"}, {"texto": "API Gateway", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfCu\u00e1l de los siguientes NO es un beneficio directo de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "Resiliencia ante fallos", "valor": "A"}, {"texto": "Escalabilidad horizontal", "valor": "B"}, {"texto": "Simplificaci\u00f3n de la l\u00f3gica centralizada", "valor": "C"}, {"texto": "Manejo eficiente de cargas variables", "valor": "D"}, {"texto": "Desacoplamiento entre componentes", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "En un sistema reactivo, \u00bfqu\u00e9 tipo de dise\u00f1o se utiliza para separar operaciones de escritura y lectura?", "puntaje": 1, "opciones": [{"texto": "RESTful", "valor": "A"}, {"texto": "CQRS", "valor": "B"}, {"texto": "Microservicios", "valor": "C"}, {"texto": "Pipes and Filters", "valor": "D"}, {"texto": "Monolito evolucionado", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 mecanismo permite a los sistemas reactivos manejar flujos de datos continuos sin saturar recursos?", "puntaje": 1, "opciones": [{"texto": "Cach\u00e9 en memoria", "valor": "A"}, {"texto": "Backpressure", "valor": "B"}, {"texto": "Transacciones ACID", "valor": "C"}, {"texto": "Balanceo de carga", "valor": "D"}, {"texto": "Validaci\u00f3n de datos", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 1, "texto": "**Intermedio**: Compara y contrasta el modelo de actores con el uso de streams reactivos (ej. Reactive Streams) en una arquitectura reactiva, destacando ventajas y desventajas de cada enfoque.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 2, "texto": "**Avanzado**: Analiza c\u00f3mo el patr\u00f3n *Event Sourcing* puede integrarse en una arquitectura reactiva para garantizar consistencia eventual y alta disponibilidad. Proporciona un ejemplo concreto.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 3, "texto": "**Intermedio**: Explica el rol de los protocolos de backpressure en sistemas reactivos y c\u00f3mo estos mecanismos previenen el desbordamiento de recursos en escenarios de carga asim\u00e9trica.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 4, "texto": "**Avanzado**: Dise\u00f1a una estrategia para migrar una aplicaci\u00f3n monol\u00edtica tradicional a una arquitectura reactiva, considerando desaf\u00edos como la gesti\u00f3n de estado distribuido y la latencia en comunicaciones as\u00edncronas.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 1, "descripcion": "Escenario pr\u00e1ctico: Creaci\u00f3n de un sistema de monitoreo de sensores para una red de dispositivos IoT en una ciudad inteligente, donde se requiere procesar y analizar grandes cantidades de datos en tiempo real para tomar decisiones sobre el tr\u00e1fico, la seguridad y los servicios p\u00fablicos. Requisitos espec\u00edficos: el sistema debe ser capaz de procesar datos de al menos 10,000 sensores diferentes, con un retardo m\u00e1ximo de 1 segundo desde la captura del dato hasta su procesamiento. Sugerencias de herramientas o enfoques: Utilizar tecnolog\u00edas de procesamiento de flujo de datos como Apache Flink o Apache Storm, y bases de datos time-series como InfluxDB.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 2, "descripcion": "Escenario pr\u00e1ctico: Dise\u00f1o de un sistema de recomendaci\u00f3n de contenido para una plataforma de streaming de videos que necesita sugerir pel\u00edculas y series de televisi\u00f3n a los usuarios en funci\u00f3n de sus preferencias y comportamientos de visualizaci\u00f3n. Requisitos espec\u00edficos: el sistema debe poder procesar el historial de visualizaci\u00f3n de al menos 1 mill\u00f3n de usuarios, y generar recomendasiones personalizadas en menos de 500 milisegundos. Sugerencias de herramientas o enfoques: Utilizar algoritmos de aprendizaje autom\u00e1tico como colaborative filtering, y frameworks como TensorFlow o PyTorch para el desarrollo de modelos predictivos.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 3, "descripcion": "Escenario pr\u00e1ctico: Implementaci\u00f3n de un sistema de detecci\u00f3n de fraudes en tiempo real para una entidad financiera que maneja transacciones bancarias y de tarjetas de cr\u00e9dito. Requisitos espec\u00edficos: el sistema debe ser capaz de analizar al menos 5000 transacciones por segundo, identificando patrones sospechosos y alertando a los equipos de seguridad en menos de 1 segundo. Sugerencias de herramientas o enfoques: Utilizar t\u00e9cnicas de procesamiento de eventos complejos como Apache Pulsar, y algoritmos de aprendizaje autom\u00e1tico para el an\u00e1lisis de patrones an\u00f3malos.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 4, "descripcion": "Escenario pr\u00e1ctico: Desarrollo de un sistema de chat en vivo para una empresa de soporte t\u00e9cnico que requiere manejar m\u00faltiples conversaciones simult\u00e1neas con clientes, ofreciendo respuestas en tiempo real y garantizando la calidad del servicio. Requisitos espec\u00edficos: el sistema debe poder manejar al menos 500 conversaciones concurrentes, con un tiempo de respuesta m\u00e1ximo de 2 segundos. Sugerencias de herramientas o enfoques: Utilizar tecnolog\u00edas de mensajer\u00eda en tiempo real como WebSockets, y frameworks de desarrollo web como React o Angular para la interfaz de usuario.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-06-06T13:27:42.472758", "expiration": "2025-06-13T18:27:42.320Z", "publicAccess": true}