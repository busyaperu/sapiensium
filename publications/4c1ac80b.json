{"id": "4c1ac80b", "examenData": {"email": "smartlabelperu@gmail.com", "examen_id": "350949", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-06-25T15:00:37.253Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI765", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l es el principio fundamental de la resiliencia en arquitecturas reactivas?", "puntaje": 0.5, "opciones": [{"texto": "Escalabilidad horizontal", "valor": "A"}, {"texto": "Tolerancia a fallos", "valor": "B"}, {"texto": "Uso de bases de datos transaccionales", "valor": "C"}, {"texto": "Exclusividad de recursos", "valor": "D"}, {"texto": "Interfaz gr\u00e1fica intuitiva", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 caracter\u00edstica define una comunicaci\u00f3n basada en mensajes en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Sincronizaci\u00f3n estricta", "valor": "A"}, {"texto": "Uso de sockets TCP/IP", "valor": "B"}, {"texto": "Comunicaci\u00f3n as\u00edncrona e inmutable", "valor": "C"}, {"texto": "Transacciones ACID", "valor": "D"}, {"texto": "Prioridad en tiempo real", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l de las siguientes NO es una caracter\u00edstica de un sistema reactivo?", "puntaje": 0.5, "opciones": [{"texto": "Recuperaci\u00f3n ante fallos", "valor": "A"}, {"texto": "Adaptabilidad a cargas variables", "valor": "B"}, {"texto": "Centralizaci\u00f3n de componentes", "valor": "C"}, {"texto": "Procesamiento sin bloqueos", "valor": "D"}, {"texto": "Interacci\u00f3n basada en eventos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 patr\u00f3n se utiliza com\u00fanmente en sistemas reaktivos para aislar componentes fallidos?", "puntaje": 0.5, "opciones": [{"texto": "Balanceo de carga", "valor": "A"}, {"texto": "Cach\u00e9 de resultados", "valor": "B"}, {"texto": "Retry policy", "valor": "C"}, {"texto": "Circuit Breaker", "valor": "D"}, {"texto": "Singleton", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 se entiende por \"elasticidad\" en un sistema reactivo?", "puntaje": 0.5, "opciones": [{"texto": "Soportar m\u00faltiples lenguajes de programaci\u00f3n", "valor": "A"}, {"texto": "Ajustar recursos autom\u00e1ticamente seg\u00fan la demanda", "valor": "B"}, {"texto": "Priorizar respuestas de usuarios VIP", "valor": "C"}, {"texto": "Usar algoritmos de compresi\u00f3n de datos", "valor": "D"}, {"texto": "Garantizar respuestas en tiempo real", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l es el enfoque principal de la arquitectura de microservicios en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Monolito dividido en capas", "valor": "A"}, {"texto": "Comunicaci\u00f3n s\u00edncrona directa", "valor": "B"}, {"texto": "Componentes desacoplados y escalables", "valor": "C"}, {"texto": "Uso obligatorio de bases de datos SQL", "valor": "D"}, {"texto": "Centralizaci\u00f3n de la l\u00f3gica de negocio", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 tipo de arquitectura se basa en la propagaci\u00f3n de eventos como unidad de interacci\u00f3n?", "puntaje": 0.5, "opciones": [{"texto": "Arquitectura cliente-servidor", "valor": "A"}, {"texto": "Arquitectura orientada a eventos", "valor": "B"}, {"texto": "Arquitectura en capas", "valor": "C"}, {"texto": "Arquitectura de canalizaci\u00f3n (pipeline)", "valor": "D"}, {"texto": "Arquitectura de base de datos relacional", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfPara qu\u00e9 se emplea la t\u00e9cnica de \"backpressure\" en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Para aumentar la velocidad de procesamiento", "valor": "A"}, {"texto": "Para garantizar la seguridad de la red", "valor": "B"}, {"texto": "Para comprimir mensajes durante la transmisi\u00f3n", "valor": "C"}, {"texto": "Para gestionar el flujo de datos y evitar sobrecargas", "valor": "D"}, {"texto": "Para optimizar el uso de memoria RAM", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l es el est\u00e1ndar de implementaci\u00f3n para sistemas reactivos basados en flujos de datos?", "puntaje": 0.5, "opciones": [{"texto": "REST API", "valor": "A"}, {"texto": "GraphQL", "valor": "B"}, {"texto": "Java EE", "valor": "C"}, {"texto": "HTTP/3", "valor": "D"}, {"texto": "Reactive Streams", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 10, "texto": "Describe c\u00f3mo el patr\u00f3n \"Back-pressure\" ayuda a gestionar la sobrecarga en un sistema reactivo y proporciona un ejemplo concreto de su implementaci\u00f3n.", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 11, "texto": "Explica el concepto de \"Location Transparency\" en el contexto de las Arquitecturas Reactivas y c\u00f3mo se relaciona con la elasticidad y la tolerancia a fallos.", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 12, "texto": "Dise\u00f1a una arquitectura reactiva simple para un sistema de chat en tiempo real, considerando los componentes clave y los flujos de datos reactivos necesarios.", "puntaje": 1.5, "respuestaAlumno": ""}, {"numero": 13, "texto": "Analiza las ventajas y desventajas de utilizar un modelo de actores en una arquitectura reactiva, compar\u00e1ndolo con otras alternativas para la concurrencia y la gesti\u00f3n del estado.", "puntaje": 1.5, "respuestaAlumno": ""}], "casos_uso": [{"numero": 15, "descripcion": "**Escenario:** Una plataforma de trading financiero en tiempo real necesita procesar millones de actualizaciones de precios por segundo, ejecutar \u00f3rdenes de compra/venta con baja latencia y notificar a los usuarios instant\u00e1neamente sobre el estado de sus operaciones. El sistema debe ser altamente concurrente y tolerante a fallos. Dada esta situaci\u00f3n, el estudiante debe analizarla y genera 2 preguntas casos de uso Arquitecturas reactivas un caso por pregunta, explorando los desaf\u00edos y soluciones reactivas aplicables a la gesti\u00f3n de flujos de datos de mercado y eventos de usuario.\n**Requisitos espec\u00edficos:** Dise\u00f1ar una arquitectura conceptual que muestre c\u00f3mo se gestionan los flujos de datos de mercado (precios) y los eventos de usuario (\u00f3rdenes) de forma reactiva. Identificar los componentes clave y c\u00f3mo se aplicar\u00eda el manejo de backpressure en este contexto.\n**Sugerencias de herramientas o enfoques:** Reactive Streams (RxJava, Project Reactor), Akka, Kafka, WebSocket, Aeron.\n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 4.5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 16, "descripcion": "**Gesti\u00f3n de Inventario en Tiempo Real:**\n\n*   **Escenario:** Una gran cadena de supermercados necesita un sistema de inventario que refleje las existencias en tiempo real en cientos de tiendas. Los cambios en el inventario (ventas, recepciones, ajustes) deben propagarse instant\u00e1neamente a todos los usuarios (empleados, gerentes, sistema de reabastecimiento).\n\n*   **Requisitos:** El sistema debe manejar miles de actualizaciones por segundo, garantizar la consistencia de los datos en todas las tiendas, y notificar a los usuarios sobre niveles bajos de stock de productos cr\u00edticos. Implementar un mecanismo de \"backpressure\" para manejar picos de carga.\n\n*   **Sugerencias:** Utilizar Apache Kafka para el flujo de eventos, Akka Streams para el procesamiento y React para la interfaz de usuario.\n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-06-25T10:00:37.283979", "expiration": "2025-07-02T15:00:37.253Z", "publicAccess": true}