{"id": "f9d8e441", "examenData": {"examen_id": "124759", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-31T22:52:14.853Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [], "preguntas_libres": [{"numero": 1, "texto": "Explique c\u00f3mo la gesti\u00f3n de errores y la tolerancia a fallos se implementan de manera eficiente en arquitecturas reactivas, utilizando patrones como el backpressure y la supervisi\u00f3n.  Ilustre su respuesta con un ejemplo de un escenario de fallo y c\u00f3mo una arquitectura reactiva lo manejar\u00eda.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 2, "texto": "Analice la influencia de la programaci\u00f3n funcional y la inmutabilidad en el dise\u00f1o de sistemas reactivos.  \u00bfC\u00f3mo contribuye la inmutabilidad a la escalabilidad y la concurrencia?  Proporcione ejemplos de lenguajes de programaci\u00f3n adecuados para este enfoque.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 3, "texto": "Compare y contraste diferentes patrones de dise\u00f1o reactivos, como el Reactor, el Actor y el CQRS (Command Query Responsibility Segregation).  \u00bfEn qu\u00e9 situaciones es m\u00e1s apropiado utilizar cada uno de ellos? Justifique su respuesta con ejemplos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 4, "texto": "Dise\u00f1e una arquitectura reactiva para una aplicaci\u00f3n de streaming de video en tiempo real, considerando aspectos como la escalabilidad, la baja latencia, la tolerancia a fallos y la gesti\u00f3n de la carga.  Detalle las tecnolog\u00edas y patrones de dise\u00f1o que utilizar\u00eda, justificando sus elecciones.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": []}, "createdAt": "2025-05-31T17:52:14.874529", "expiration": "2025-06-07T22:52:14.853Z", "publicAccess": true}