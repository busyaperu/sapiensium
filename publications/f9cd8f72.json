{"id": "f9cd8f72", "examenData": {"examen_id": "273593", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-06-16T20:43:59.126Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI765", "preguntas_marcar": [], "preguntas_libres": [{"numero": 1, "texto": "Explique c\u00f3mo la programaci\u00f3n reactiva y el patr\u00f3n de dise\u00f1o Reactor facilitan la gesti\u00f3n de concurrencia y la escalabilidad en una arquitectura distribuida.  Incluya ejemplos de herramientas o frameworks que implementan este patr\u00f3n.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 1, "descripcion": "1. **Caso de Uso:** Sistema de Monitoreo de Sensores IoT en tiempo real.\n\n**Escenario:** Una empresa agr\u00edcola necesita monitorear la temperatura, humedad y luz de sus invernaderos.  Se recopilan datos de sensores IoT desplegados en cada invernadero y se deben mostrar alertas en tiempo real si alg\u00fan par\u00e1metro se sale de los rangos predefinidos.\n\n**Pregunta 1:** \u00bfC\u00f3mo se implementar\u00eda un sistema reactivo para procesar el flujo continuo de datos de los sensores y generar alertas en tiempo real, minimizando la latencia y asegurando la alta disponibilidad?\n\n**Pregunta 2:** \u00bfQu\u00e9 mecanismos de resiliencia se implementar\u00edan para garantizar que el sistema contin\u00fae funcionando incluso si algunos sensores fallan o la conexi\u00f3n a la red se interrumpe?\n\n**Requisitos:**  Implementar un sistema reactivo que procese datos de sensores, genere alertas y las visualice en una interfaz de usuario.  El sistema debe ser escalable y tolerante a fallos.\n\n**Sugerencias:**  Spring Reactor, Kafka, Redis, Grafana.\n\n\n2. **Caso de Uso:** Sistema de Recomendaci\u00f3n de Productos en una Tienda Online.\n\n**Escenario:** Una tienda online necesita un sistema de recomendaci\u00f3n de productos en tiempo real que se adapte al comportamiento del usuario mientras navega por el sitio.\n\n**Pregunta 1:** \u00bfC\u00f3mo se dise\u00f1ar\u00eda un sistema reactivo para procesar las interacciones del usuario (clics, b\u00fasquedas, compras) y generar recomendaciones personalizadas en tiempo real, utilizando un enfoque basado en eventos?\n\n**Pregunta 2:** \u00bfQu\u00e9 estrategias se implementar\u00edan para gestionar el crecimiento de datos de usuario y garantizar el rendimiento del sistema de recomendaci\u00f3n a medida que la base de usuarios crece?\n\n**Requisitos:**  Implementar un sistema de recomendaci\u00f3n reactivo que procese eventos de usuario y genere recomendaciones personalizadas.  El sistema debe ser escalable y eficiente.\n\n**Sugerencias:**  Akka, Cassandra, Elasticsearch,  librer\u00edas de machine learning.\n\n\n3. **Caso de Uso:**  Plataforma de Chat en tiempo real con notificaciones.\n\n**Escenario:**  Se necesita desarrollar una plataforma de chat en tiempo real para una aplicaci\u00f3n de mensajer\u00eda instant\u00e1nea.  Los usuarios deben recibir notificaciones instant\u00e1neas cuando reciben nuevos mensajes.\n\n**Pregunta 1:** \u00bfC\u00f3mo se implementar\u00eda un sistema reactivo para gestionar la comunicaci\u00f3n bidireccional entre los usuarios y entregar las notificaciones de mensajes nuevos en tiempo real, manteniendo una baja latencia?\n\n**Pregunta 2:** \u00bfC\u00f3mo se gestionar\u00eda la escalabilidad del sistema para soportar un gran n\u00famero de usuarios concurrentes y un alto volumen de mensajes?\n\n**Requisitos:**  Implementar una plataforma de chat reactiva con notificaciones en tiempo real.  El sistema debe ser escalable y gestionar la concurrencia eficientemente.\n\n**Sugerencias:** WebSockets,  RabbitMQ,  Vert.x.\n\n\n4. **Caso de Uso:** Procesamiento de transacciones financieras de alta frecuencia.\n\n**Escenario:**  Un banco necesita procesar un alto volumen de transacciones financieras de alta frecuencia con baja latencia y alta confiabilidad.\n\n**Pregunta 1:** \u00bfC\u00f3mo se dise\u00f1ar\u00eda un sistema reactivo para procesar las transacciones financieras de forma eficiente, minimizando la latencia y garantizando la consistencia de los datos?\n\n**Pregunta 2:** \u00bfQu\u00e9 medidas se implementar\u00edan para asegurar la integridad de las transacciones y la prevenci\u00f3n de p\u00e9rdidas de datos en caso de fallos del sistema?\n\n**Requisitos:** Implementar un sistema reactivo para el procesamiento de transacciones financieras de alta frecuencia.  El sistema debe ser altamente confiable, consistente y tolerante a fallos.\n\n**Sugerencias:**  RxJava,  Hazelcast,  bases de datos in-memory.\n\n\n5. **Caso de Uso:**  Sistema de an\u00e1lisis de logs en tiempo real.\n\n**Escenario:** Una empresa necesita analizar en tiempo real los logs generados por sus aplicaciones para detectar anomal\u00edas y solucionar problemas de forma proactiva.\n\n**Pregunta 1:** \u00bfC\u00f3mo se dise\u00f1ar\u00eda un sistema reactivo para procesar y analizar un flujo continuo de logs, generando alertas en tiempo real sobre eventos cr\u00edticos o an\u00f3malos?\n\n**Pregunta 2:** \u00bfQu\u00e9 t\u00e9cnicas de agregaci\u00f3n y visualizaci\u00f3n de datos se implementar\u00edan para facilitar la interpretaci\u00f3n de los resultados del an\u00e1lisis de logs?\n\n**Requisitos:** Implementar un sistema reactivo de an\u00e1lisis de logs en tiempo real con generaci\u00f3n de alertas. El sistema debe ser escalable y eficiente en el procesamiento de grandes vol\u00famenes de datos.\n\n**Sugerencias:**  Apache Flume,  Apache Kafka,  Elasticsearch, Kibana.", "pregunta": "**  Implementar un sistema reactivo que procese datos de sensores, genere alertas y las visualice en una interfaz de usuario.  El sistema debe ser escalable y tolerante a fallos.", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-06-16T15:43:59.163746", "expiration": "2025-06-23T20:43:59.126Z", "publicAccess": true}