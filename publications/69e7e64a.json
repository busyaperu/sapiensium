{"id": "69e7e64a", "examenData": {"examen_id": "614943", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-22T14:14:59.824Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza com\u00fanmente para manejar la concurrencia en arquitecturas reactivas?\nA) Singleton\nB) Factory\nC) Reactor\nD) Observer\nE) Strategy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es la principal ventaja del uso de backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Menor consumo de memoria\nC) Prevenci\u00f3n de sobrecarga del sistema\nD) Simplificaci\u00f3n del c\u00f3digo\nE) Mejor rendimiento en bases de datos relacionales", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es ampliamente utilizada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) JPA", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones sobre la elasticidad en arquitecturas reactivas es FALSA?\nA) Permite escalar recursos seg\u00fan la demanda.\nB) Reduce costos al optimizar el uso de recursos.\nC) Garantiza un tiempo de respuesta constante.\nD) Se adapta a cambios en la carga de trabajo.\nE) Mejora la disponibilidad del sistema.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 concepto permite la comunicaci\u00f3n asincr\u00f3nica y no bloqueante en sistemas reactivos?\nA) Programaci\u00f3n s\u00edncrona\nB) Programaci\u00f3n imperativa\nC) Mensajer\u00eda\nD) Programaci\u00f3n orientada a objetos\nE) Programaci\u00f3n procedural", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza a menudo para manejar la concurrencia en sistemas reactivos?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Strategy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfCu\u00e1l es la principal ventaja del uso de un backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Menor latencia\nC) Prevenci\u00f3n de sobrecarga del sistema\nD) Mayor escalabilidad\nE) Simplificaci\u00f3n del c\u00f3digo", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es com\u00fanmente utilizada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) JPA", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l de las siguientes caracter\u00edsticas describe mejor la elasticidad en una arquitectura reactiva?\nA) Capacidad para manejar errores\nB) Capacidad para adaptarse a cambios en la carga\nC) Capacidad para responder r\u00e1pidamente a las solicitudes\nD) Capacidad para procesar grandes vol\u00famenes de datos\nE) Capacidad para comunicarse de manera as\u00edncrona", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 concepto permite la comunicaci\u00f3n as\u00edncrona y no bloqueante en sistemas reactivos?\nA) Polimorfismo\nB) Herencia\nC) Encapsulaci\u00f3n\nD) Mensajer\u00eda\nE) Abstracci\u00f3n", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "Explique c\u00f3mo la gesti\u00f3n de errores y la tolerancia a fallos se implementan de manera diferente en una arquitectura reactiva en comparaci\u00f3n con una arquitectura monol\u00edtica.  Proporcione ejemplos concretos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "Analice el papel de los patrones de dise\u00f1o como el Reactor, el Actor y el CQRS en la construcci\u00f3n de una aplicaci\u00f3n distribuida y reactiva, detallando sus fortalezas y debilidades en diferentes contextos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Imagine un escenario donde una aplicaci\u00f3n reactiva debe escalar para manejar un repentino aumento masivo en la demanda de usuarios.  Describa en detalle c\u00f3mo se adaptar\u00eda la arquitectura para manejar esta carga y qu\u00e9 mecanismos ser\u00edan cruciales para mantener la estabilidad y el rendimiento.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "Compare y contraste las estrategias de implementaci\u00f3n de un sistema reactivo usando diferentes frameworks, como Spring WebFlux (Java) y Akka (Scala).  Discuta las consideraciones de elecci\u00f3n de tecnolog\u00eda en funci\u00f3n de las necesidades del proyecto.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Explique c\u00f3mo se implementa la tolerancia a fallos en una arquitectura reactiva, incluyendo ejemplos concretos de patrones y mecanismos utilizados para manejar la falla de componentes individuales sin afectar la disponibilidad del sistema completo.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 16, "descripcion": "- Escenario pr\u00e1ctico detallado: Una plataforma de an\u00e1lisis de redes sociales debe procesar un flujo constante y de alto volumen de tweets en tiempo real. Cada tweet debe ser analizado para determinar su sentimiento y clasificado por tema. El volumen de tweets puede variar dr\u00e1sticamente durante eventos importantes, y el sistema debe manejar estos picos sin perder datos ni colapsar. Los resultados del an\u00e1lisis deben estar disponibles para un dashboard en tiempo real y almacenados en una base de datos anal\u00edtica.\n    - Requisitos espec\u00edficos:", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 17, "descripcion": "Dise\u00f1ar la pipeline de ingesta y procesamiento de tweets utilizando principios reactivos para manejar el alto rendimiento y la variabilidad del flujo de datos, implementando backpressure para gestionar la sobrecarga.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-22T09:14:59.860536", "expiration": "2025-05-29T14:14:59.824Z", "publicAccess": true}