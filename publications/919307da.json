{"id": "919307da", "examenData": {"examen_id": "327553", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-04-28T22:20:57.977Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l de estos principios NO es parte del Manifiesto Reactivo?  \nA) Responsivo  \nB) Tolerante a fallos  \nC) Basado en componentes  \nD) Orientado a mensajes  \nE) Escalable el\u00e1sticamente", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 patr\u00f3n es com\u00fan en arquitecturas reactivas para manejar flujos de datos?  \nA) Singleton  \nB) Observer  \nC) Factory  \nD) Decorator  \nE) Proxy", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se usa com\u00fanmente para implementar sistemas reactivos en Java?  \nA) Spring MVC  \nB) Hibernate  \nC) Reactor  \nD) JSP  \nE) JDBC", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 ventaja ofrece el modelo no bloqueante en sistemas reactivos?  \nA) Mayor consumo de recursos hardware  \nB) Mejor manejo de concurrencia con menos hilos  \nC) Simplificaci\u00f3n de la depuraci\u00f3n de errores  \nD) Compatibilidad con lenguajes est\u00e1ticos  \nE) Reducci\u00f3n de la necesidad de testing", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "En una arquitectura reactiva, \u00bfqu\u00e9 significa \"backpressure\"?  \nA) Un mecanismo de cifrado de datos  \nB) Control del flujo para evitar sobrecarga del consumidor  \nC) Una t\u00e9cnica de balanceo de carga  \nD) Un patr\u00f3n de redundancia de servidores  \nE) Un protocolo de autenticaci\u00f3n", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l de los siguientes principios NO pertenece al Manifiesto Reactivo?  \nA) Responsivo  \nB) Escalable  \nC) Monol\u00edtico  \nD) Resiliente  \nE) Orientado a mensajes", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 herramienta se usa com\u00fanmente para implementar backpressure en sistemas reactivos?  \nA) Kafka  \nB) Reactor  \nC) RabbitMQ  \nD) MongoDB  \nE) Docker", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "En una arquitectura reactiva, \u00bfqu\u00e9 componente se encarga de manejar fallos y recuperaci\u00f3n?  \nA) Load Balancer  \nB) Circuit Breaker  \nC) API Gateway  \nD) Base de datos relacional  \nE) Servidor web", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l de estos lenguajes es ampliamente usado para programaci\u00f3n reactiva?  \nA) Python  \nB) Java  \nC) HTML  \nD) SQL  \nE) CSS", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 patr\u00f3n permite la comunicaci\u00f3n entre componentes reactivos sin acoplamiento directo?  \nA) Singleton  \nB) Factory  \nC) Pub/Sub  \nD) Decorator  \nE) Proxy", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "**Intermedio**: Compara y contrasta el modelo de actores con el patr\u00f3n Observer en el contexto de las arquitecturas reactivas, destacando ventajas y desventajas de cada enfoque.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "**Avanzado**: Analiza c\u00f3mo el \"Backpressure\" maneja problemas de sobrecarga en sistemas reactivos y proporciona un ejemplo pr\u00e1ctico de su implementaci\u00f3n en un framework como Akka o Project Reactor.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "**Intermedio**: Explica el rol de los sistemas de mensajer\u00eda (como Kafka o RabbitMQ) en una arquitectura reactiva y c\u00f3mo garantizan la consistencia eventual en un entorno distribuido.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "**Avanzado**: Dise\u00f1a una arquitectura reactiva para un sistema de comercio electr\u00f3nico de alta concurrencia, detallando c\u00f3mo abordar\u00edas la gesti\u00f3n de estados, la tolerancia a fallos y la latencia.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 15, "descripcion": "**Escenario**: Una plataforma de comercio en l\u00ednea necesita manejar picos de demanda durante eventos de ventas flash, garantizando respuestas r\u00e1pidas en la actualizaci\u00f3n de inventario y pedidos.  \n   **Requisitos**: Dise\u00f1ar un sistema reactivo con backpressure para evitar sobrecarga, usando colas de mensajes y patrones como Circuit Breaker para fallos.  \n   **Herramientas**: Spring WebFlux, RabbitMQ, Project Reactor, Resilience4j.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 16, "descripcion": "**Escenario**: Un servicio de telemetr\u00eda para veh\u00edculos aut\u00f3nomos debe procesar millones de eventos/segundo (ubicaci\u00f3n, velocidad, fallos) y reaccionar a anomal\u00edas en <100ms.  \n   **Requisitos**: Implementar un flujo de eventos con ventanas de tiempo para agregaci\u00f3n y detecci\u00f3n de anomal\u00edas (ej: velocidad > l\u00edmite).  \n   **Herramientas**: Apache Flink, Kafka Streams, Scala con Akka.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-28T17:20:58.012993", "expiration": "2025-05-05T22:20:57.977Z", "publicAccess": true}