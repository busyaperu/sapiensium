{"id": "3bbc78f6", "examenData": {"email": "smartlabelperu@gmail.com", "examen_id": "591911", "nombre_examen": "Arquitecturas orientadas a servicios (SOA)", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-06-25T22:56:04.165Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI765", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 describe mejor un servicio en SOA?", "puntaje": 0.5, "opciones": [{"texto": "Una unidad de trabajo aut\u00f3noma y reutilizable", "valor": "A"}, {"texto": "Un componente de hardware espec\u00edfico", "valor": "B"}, {"texto": "Un lenguaje de programaci\u00f3n", "valor": "C"}, {"texto": "Un tipo de base de datos", "valor": "D"}, {"texto": "Una metodolog\u00eda de desarrollo de software", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 3}, {"numero": 2, "texto": "\u00bfCu\u00e1l es el papel de un ESB (Enterprise Service Bus) en una arquitectura SOA?", "puntaje": 0.5, "opciones": [{"texto": "Facilitar la comunicaci\u00f3n entre servicios", "valor": "A"}, {"texto": "Almacenar datos de servicios", "valor": "B"}, {"texto": "Desarrollar nuevos servicios", "valor": "C"}, {"texto": "Monitorear el rendimiento de la red", "valor": "D"}, {"texto": "Proveer seguridad a nivel de hardware", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 2}, {"numero": 3, "texto": "\u00bfQu\u00e9 est\u00e1ndar se utiliza com\u00fanmente para describir servicios web en SOA?", "puntaje": 0.5, "opciones": [{"texto": "WSDL", "valor": "A"}, {"texto": "HTML", "valor": "B"}, {"texto": "SQL", "valor": "C"}, {"texto": "Java", "valor": "D"}, {"texto": "Python", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 4}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes es una ventaja clave de implementar SOA?", "puntaje": 0.5, "opciones": [{"texto": "Mayor agilidad empresarial", "valor": "A"}, {"texto": "Aumento de la complejidad del sistema", "valor": "B"}, {"texto": "Reducci\u00f3n de la reutilizaci\u00f3n de c\u00f3digo", "valor": "C"}, {"texto": "Mayor dependencia del proveedor", "valor": "D"}, {"texto": "Menor flexibilidad", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 0}, {"numero": 5, "texto": "\u00bfQu\u00e9 es un contrato de servicio en SOA?", "puntaje": 0.5, "opciones": [{"texto": "Un acuerdo formal que define la interfaz y el comportamiento de un servicio", "valor": "A"}, {"texto": "Un contrato legal entre el proveedor y el consumidor del servicio", "valor": "B"}, {"texto": "Un documento que describe la arquitectura completa del sistema", "valor": "C"}, {"texto": "Un acuerdo de nivel de servicio (SLA)", "valor": "D"}, {"texto": "Un documento que especifica los requisitos de hardware", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 2}, {"numero": 6, "texto": "\u00bfCu\u00e1l de los siguientes NO es un tipo com\u00fan de servicio en SOA?", "puntaje": 0.5, "opciones": [{"texto": "Servicios de negocio", "valor": "A"}, {"texto": "Servicios de datos", "valor": "B"}, {"texto": "Servicios de presentaci\u00f3n", "valor": "C"}, {"texto": "Servicios de hardware", "valor": "D"}, {"texto": "Servicios de infraestructura", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 2}, {"numero": 7, "texto": "\u00bfQu\u00e9 es la orquestaci\u00f3n de servicios en SOA?", "puntaje": 0.5, "opciones": [{"texto": "La coordinaci\u00f3n de m\u00faltiples servicios para ejecutar un proceso de negocio", "valor": "A"}, {"texto": "La gesti\u00f3n del ciclo de vida de los servicios", "valor": "B"}, {"texto": "El dise\u00f1o de la interfaz de usuario para los servicios", "valor": "C"}, {"texto": "La implementaci\u00f3n de la seguridad para los servicios", "valor": "D"}, {"texto": "La monitorizaci\u00f3n del rendimiento de los servicios", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 1}, {"numero": 8, "texto": "\u00bfQu\u00e9 protocolo se utiliza com\u00fanmente para la comunicaci\u00f3n entre servicios en SOA?", "puntaje": 0.5, "opciones": [{"texto": "SOAP", "valor": "A"}, {"texto": "FTP", "valor": "B"}, {"texto": "SMTP", "valor": "C"}, {"texto": "HTTP", "valor": "D"}, {"texto": "SSH", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 4}, {"numero": 9, "texto": "\u00bfCu\u00e1l de las siguientes es una consideraci\u00f3n importante al dise\u00f1ar una arquitectura SOA?", "puntaje": 0.5, "opciones": [{"texto": "Granularidad del servicio", "valor": "A"}, {"texto": "Tipo de sistema operativo", "valor": "B"}, {"texto": "Lenguaje de programaci\u00f3n espec\u00edfico", "valor": "C"}, {"texto": "Ubicaci\u00f3n f\u00edsica del servidor", "valor": "D"}, {"texto": "Marca del hardware utilizado", "valor": "E"}], "respuestaSeleccionada": null, "respuestaCorrectaIndex": 4}], "preguntas_libres": [{"numero": 10, "texto": "Describa el concepto de acoplamiento en el contexto de las Arquitecturas Orientadas a Servicios (SOA). Explique c\u00f3mo un alto acoplamiento puede impactar negativamente la flexibilidad y la mantenibilidad de un sistema SOA, y qu\u00e9 estrategias se pueden emplear para reducirlo.", "puntaje": 1.5, "respuestaAlumno": "", "respuestaProfesor": "El acoplamiento en SOA describe la dependencia entre servicios. Un alto acoplamiento significa que los servicios est\u00e1n fuertemente interconectados, conociendo detalles de implementaci\u00f3n de otros, como formatos de datos espec\u00edficos o protocolos de comunicaci\u00f3n.  Esto impacta negativamente la flexibilidad, ya que un cambio en un servicio puede requerir modificaciones en cascada en otros servicios dependientes, dificultando la evoluci\u00f3n y la integraci\u00f3n de nuevas funcionalidades.  Tambi\u00e9n afecta la mantenibilidad, complicando la correcci\u00f3n de errores y el despliegue de actualizaciones.\n\nPara reducir el acoplamiento, se deben emplear estrategias como:  definir interfaces estandarizadas y contratos de servicio bien definidos; utilizar  mensajer\u00eda as\u00edncrona y protocolos de comunicaci\u00f3n desacoplados;  abstraer la l\u00f3gica de negocio en los servicios y exponerla a trav\u00e9s de interfaces gen\u00e9ricas;  y emplear un Enterprise Service Bus (ESB) para mediar la comunicaci\u00f3n y transformar datos entre servicios, promoviendo la interoperabilidad sin dependencia directa.\n"}, {"numero": 11, "texto": "Compare y contraste los enfoques de comunicaci\u00f3n s\u00edncrona y as\u00edncrona en SOA. Detalle las ventajas y desventajas de cada uno, y proporcione ejemplos de escenarios donde cada enfoque ser\u00eda m\u00e1s apropiado.", "puntaje": 1.5, "respuestaAlumno": "", "respuestaProfesor": "La comunicaci\u00f3n s\u00edncrona en SOA implica una interacci\u00f3n en tiempo real entre el cliente y el servicio, donde el cliente espera una respuesta inmediata.  Su ventaja radica en la simplicidad para transacciones tipo solicitud-respuesta, pero presenta la desventaja de crear acoplamiento temporal y afectar la disponibilidad si el servicio falla. Un ejemplo apropiado ser\u00eda una consulta de saldo bancario.\n\nEn contraste, la comunicaci\u00f3n as\u00edncrona desacopla al cliente y al servicio, permitiendo al cliente continuar su operaci\u00f3n sin esperar una respuesta inmediata.  Esto mejora la disponibilidad y la escalabilidad, pero introduce mayor complejidad en el manejo de respuestas y seguimiento de mensajes. Un ejemplo ideal ser\u00eda un proceso de pedido online, donde la confirmaci\u00f3n se env\u00eda posteriormente por correo electr\u00f3nico.  En resumen, la elecci\u00f3n entre ambos enfoques depende de los requisitos espec\u00edficos de la aplicaci\u00f3n, priorizando la inmediatez versus la flexibilidad y la resiliencia.\n"}, {"numero": 12, "texto": "Explique el rol de un Enterprise Service Bus (ESB) en una arquitectura SOA. \u00bfCu\u00e1les son las funciones clave que un ESB t\u00edpicamente proporciona y c\u00f3mo facilita la integraci\u00f3n entre diferentes servicios?", "puntaje": 1, "respuestaAlumno": "", "respuestaProfesor": "Un Enterprise Service Bus (ESB) act\u00faa como columna vertebral de una arquitectura orientada a servicios (SOA), facilitando la comunicaci\u00f3n e integraci\u00f3n entre diferentes servicios.  Funciona como intermediario, desacoplando los servicios  y permitiendo que interact\u00faen sin conocimiento directo de la implementaci\u00f3n del otro. \n\nEl ESB proporciona funciones clave como: enrutamiento de mensajes, transformaci\u00f3n de datos, orquestaci\u00f3n de servicios, manejo de excepciones y monitorizaci\u00f3n.  Transforma datos entre formatos incompatibles,  permitiendo que servicios con diferentes interfaces tecnol\u00f3gicas se comuniquen.  Orquesta m\u00faltiples servicios para crear procesos de negocio complejos.  Adem\u00e1s, proporciona capacidades de manejo de excepciones para asegurar la confiabilidad del sistema.  Finalmente, el ESB monitoriza el flujo de mensajes, proporcionando informaci\u00f3n valiosa sobre el rendimiento del sistema.  En resumen, el ESB simplifica la integraci\u00f3n de servicios heterog\u00e9neos, promoviendo la flexibilidad y la escalabilidad en un entorno SOA.\n"}, {"numero": 13, "texto": "El descubrimiento de servicios es crucial en SOA. Describa diferentes mecanismos para el descubrimiento de servicios, incluyendo tanto enfoques centralizados como descentralizados. Analice las implicaciones de cada enfoque en t\u00e9rminos de escalabilidad y tolerancia a fallos.", "puntaje": 1.5, "respuestaAlumno": "", "respuestaProfesor": "El descubrimiento de servicios permite a las aplicaciones localizar y utilizar servicios en un entorno SOA. Existen dos enfoques principales: centralizado y descentralizado.\n\nEn el enfoque **centralizado**, un registro de servicios (ej. UDDI) act\u00faa como un directorio \u00fanico. Los proveedores publican sus servicios y los consumidores los consultan.  Ofrece simplicidad y gesti\u00f3n centralizada, pero introduce un \u00fanico punto de fallo, limitando la escalabilidad y la tolerancia a fallos.\n\nLos enfoques **descentralizados**, como el multicast o los sistemas peer-to-peer, evitan este problema. Los servicios se anuncian a la red o se descubren a trav\u00e9s de interacciones directas entre nodos.  Esto mejora la escalabilidad y la tolerancia a fallos, ya que no hay dependencia de un componente central. Sin embargo, la gesti\u00f3n y el descubrimiento pueden ser m\u00e1s complejos, especialmente en redes grandes.\n\nLa elecci\u00f3n entre un enfoque centralizado o descentralizado depende de los requisitos espec\u00edficos del sistema, como el tama\u00f1o, la complejidad y la necesidad de escalabilidad y tolerancia a fallos.\n"}, {"numero": 14, "texto": "Considere un escenario donde una empresa desea modernizar una aplicaci\u00f3n monol\u00edtica legacy hacia una arquitectura SOA. Describa los pasos clave y los desaf\u00edos potenciales que probablemente enfrentar\u00e1 durante este proceso de migraci\u00f3n.", "puntaje": 1.5, "respuestaAlumno": "", "respuestaProfesor": "La modernizaci\u00f3n de una aplicaci\u00f3n monol\u00edtica a una arquitectura SOA implica descomponer la aplicaci\u00f3n en servicios independientes e interoperables.  Los pasos clave incluyen: 1) **An\u00e1lisis del monolito:** Identificar funcionalidades candidatas para ser servicios, considerando dependencias y acoplamiento. 2) **Dise\u00f1o de servicios:** Definir interfaces, protocolos de comunicaci\u00f3n (SOAP, REST) y granularidad de los servicios. 3) **Implementaci\u00f3n de servicios:** Desarrollar o refactorizar componentes del monolito para exponerlos como servicios. 4) **Pruebas e Integraci\u00f3n:** Asegurar la interoperabilidad y el correcto funcionamiento de los servicios con el monolito existente y otros sistemas. 5) **Despliegue e Implementaci\u00f3n:**  Implementar los servicios en una infraestructura adecuada, considerando escalabilidad y disponibilidad. 6) **Monitorizaci\u00f3n y Gesti\u00f3n:**  Monitorear el rendimiento y la disponibilidad de los servicios.\n\nLos desaf\u00edos potenciales incluyen: la complejidad de la descomposici\u00f3n del monolito, la gesti\u00f3n de transacciones distribuidas, la consistencia de datos, la necesidad de nuevas habilidades y herramientas, el  impacto en el rendimiento y la seguridad, y la gesti\u00f3n de la coexistencia entre el monolito y los nuevos servicios durante la transici\u00f3n.\n"}], "casos_uso": [{"numero": 15, "descripcion": "**Caso de Uso: Integraci\u00f3n de Sistemas de Reservas de Hotel**\n\n*   **Escenario:** Una cadena hotelera busca integrar su sistema de reservas existente (desarrollado en .NET) con un nuevo sistema de gesti\u00f3n de fidelizaci\u00f3n de clientes basado en Java y un portal de reservas de terceros que utiliza APIs REST.\n\n*   **Pregunta 1:** \u00bfC\u00f3mo se podr\u00eda implementar una arquitectura SOA para permitir la comunicaci\u00f3n y el intercambio de datos entre estos tres sistemas heterog\u00e9neos, garantizando la consistencia de la informaci\u00f3n de reservas?\n\n*   **Pregunta 2:** \u00bfQu\u00e9 consideraciones de seguridad se deben tener en cuenta al exponer los servicios de reservas a trav\u00e9s de APIs, especialmente al interactuar con el portal de terceros, y c\u00f3mo se podr\u00edan implementar mecanismos de autenticaci\u00f3n y autorizaci\u00f3n adecuados?\n\n*   **Requisitos:** El estudiante debe dise\u00f1ar una arquitectura SOA que facilite la integraci\u00f3n, describir el flujo de mensajes, identificar los servicios clave, y proponer soluciones para la seguridad de la API.\n\n*   **Sugerencias:** ESB (Enterprise Service Bus), Web Services (SOAP/REST), OAuth 2.0, JWT.\n\n", "pregunta": "** El estudiante debe dise\u00f1ar una arquitectura SOA que facilite la integraci\u00f3n, describir el flujo de mensajes, identificar los servicios clave, y proponer soluciones para la seguridad de la API.", "puntaje": 4.5, "respuestaAlumno": "", "archivoSubido": false, "respuestaProfesor": "Para integrar los sistemas de reservas, fidelizaci\u00f3n y el portal de terceros se propone una arquitectura SOA basada en un Enterprise Service Bus (ESB). El ESB actuar\u00e1 como intermediario, facilitando la comunicaci\u00f3n y transformaci\u00f3n de mensajes entre los sistemas heterog\u00e9neos (.NET, Java y APIs REST).\n\n**Servicios Clave:**\n\n*   **Servicio de Reservas:** Expuesto por el sistema .NET, permite crear, modificar y consultar reservas.\n*   **Servicio de Fidelizaci\u00f3n:**  Expuesto por el sistema Java, gestiona los puntos de fidelizaci\u00f3n, descuentos y perfiles de clientes.\n*   **Servicio de Notificaciones:**  Env\u00eda notificaciones al cliente sobre el estado de su reserva.\n\n**Flujo de Mensajes (Ejemplo: Nueva Reserva):**\n\n1.  El portal de terceros env\u00eda una solicitud de reserva (REST) al ESB.\n2.  El ESB transforma la solicitud al formato compatible con el Servicio de Reservas (.NET, posiblemente SOAP).\n3.  El Servicio de Reservas procesa la solicitud y env\u00eda la confirmaci\u00f3n al ESB.\n4.  El ESB transforma la confirmaci\u00f3n al formato REST y la env\u00eda al portal de terceros.\n5.  Paralelamente, el ESB env\u00eda la informaci\u00f3n de la reserva al Servicio de Fidelizaci\u00f3n (Java, posiblemente SOAP) para actualizar los puntos del cliente.\n6.  El ESB invoca el Servicio de Notificaciones para informar al cliente.\n\n**Seguridad de la API:**\n\nPara asegurar la comunicaci\u00f3n con el portal de terceros, se implementar\u00e1 OAuth 2.0 con JSON Web Tokens (JWT). El portal de terceros deber\u00e1 obtener un token de acceso del servidor de autorizaci\u00f3n de la cadena hotelera antes de poder acceder a los servicios de reserva a trav\u00e9s del ESB.  Cada solicitud al ESB incluir\u00e1 el JWT, que ser\u00e1 validado para autenticar y autorizar la operaci\u00f3n.  Se implementar\u00e1 HTTPS para cifrar la comunicaci\u00f3n.  Se utilizar\u00e1 un API Gateway para aplicar pol\u00edticas de seguridad adicionales, como limitaci\u00f3n de tasa y validaci\u00f3n de esquemas, protegiendo el ESB y los servicios backend.  Se registrar\u00e1n todos los accesos a la API para auditor\u00eda y detecci\u00f3n de intrusiones.\n"}, {"numero": 16, "descripcion": "1. **Caso de Uso:** Sistema de Gesti\u00f3n de Inventario para una Cadena de Tiendas Minoristas.\n\n   **Escenario:** Una cadena de tiendas minoristas necesita un sistema para gestionar su inventario en tiempo real, incluyendo la capacidad de rastrear productos, gestionar existencias en diferentes almacenes y generar reportes de ventas.  Se requiere integrar con el sistema de punto de venta (POS) existente.\n\n   **Pregunta 1:** \u00bfC\u00f3mo se puede dise\u00f1ar una arquitectura SOA que permita la integraci\u00f3n del sistema de gesti\u00f3n de inventario con el sistema POS existente, permitiendo la actualizaci\u00f3n del inventario en tiempo real tras cada venta?  Describa los servicios involucrados y su interacci\u00f3n.\n\n   **Pregunta 2:** \u00bfQu\u00e9 mecanismos de seguridad se deben implementar en la arquitectura SOA para proteger la informaci\u00f3n sensible del inventario, como precios y cantidades, de accesos no autorizados?  Considere la autenticaci\u00f3n, autorizaci\u00f3n y cifrado de datos.\n\n   **Requisitos:** Dise\u00f1o de la arquitectura SOA, diagrama de despliegue, especificaci\u00f3n de los servicios (WSDL o OpenAPI),  plan de seguridad.\n\n   **Sugerencias:**  Apache Camel, MuleSoft, Spring Boot.\n\n\n", "pregunta": "** Dise\u00f1o de la arquitectura SOA, diagrama de despliegue, especificaci\u00f3n de los servicios (WSDL o OpenAPI),  plan de seguridad.", "puntaje": 4, "respuestaAlumno": "", "archivoSubido": false, "respuestaProfesor": "## Arquitectura SOA para Sistema de Gesti\u00f3n de Inventario\n\nLa arquitectura SOA propuesta utiliza un ESB (Enterprise Service Bus) como Apache Camel o MuleSoft para la integraci\u00f3n.  El diagrama de despliegue incluye el Sistema de Gesti\u00f3n de Inventario, el Sistema POS existente y el ESB.\n\n**Servicios:**\n\n* **Servicio de Actualizaci\u00f3n de Inventario:** Recibe informaci\u00f3n de ventas del POS y actualiza el inventario en tiempo real. (OpenAPI: `/actualizarInventario/{idProducto}/{cantidad}`)\n* **Servicio de Consulta de Inventario:** Permite consultar la disponibilidad de productos en diferentes almacenes. (OpenAPI: `/consultarInventario/{idProducto}`)\n* **Servicio de Generaci\u00f3n de Reportes:** Genera reportes de ventas y existencias. (OpenAPI: `/generarReporte/{tipoReporte}/{fechaInicio}/{fechaFin}`)\n* **Servicio de Gesti\u00f3n de Almacenes:** Permite gestionar la informaci\u00f3n de los almacenes. (OpenAPI: `/gestionarAlmacen/{idAlmacen}`)\n\nEl Sistema POS, tras cada venta, env\u00eda un mensaje al ESB con la informaci\u00f3n del producto y cantidad vendida. El ESB transforma el mensaje y lo env\u00eda al Servicio de Actualizaci\u00f3n de Inventario. Este servicio actualiza la base de datos del inventario y env\u00eda una confirmaci\u00f3n al ESB, que a su vez puede notificar al POS.\n\n**Especificaci\u00f3n (OpenAPI - ejemplo para Actualizar Inventario):**\n\n```json\n{\n  \"paths\": {\n    \"/actualizarInventario/{idProducto}/{cantidad}\": {\n      \"post\": {\n        \"summary\": \"Actualiza el inventario\",\n        \"parameters\": [\n          {\"name\": \"idProducto\", \"in\": \"path\", \"required\": true, \"schema\": {\"type\": \"integer\"}},\n          {\"name\": \"cantidad\", \"in\": \"path\", \"required\": true, \"schema\": {\"type\": \"integer\"}}\n        ],\n        \"responses\": {\n          \"200\": {\"description\": \"Inventario actualizado\"}\n        }\n      }\n    }\n  }\n}\n```\n\n**Plan de Seguridad:**\n\n* **Autenticaci\u00f3n:**  Utilizar tokens JWT para la autenticaci\u00f3n entre sistemas.\n* **Autorizaci\u00f3n:** Implementar control de acceso basado en roles (RBAC) para restringir el acceso a los servicios.  Solo usuarios autorizados podr\u00e1n acceder a informaci\u00f3n sensible como precios.\n* **Cifrado:**  Cifrar la comunicaci\u00f3n entre sistemas utilizando TLS/SSL.  Cifrar datos sensibles en la base de datos.\n\n\nEsta arquitectura SOA proporciona flexibilidad, escalabilidad y seguridad para la gesti\u00f3n del inventario, integrando eficientemente el sistema POS existente. La implementaci\u00f3n con Spring Boot facilita el desarrollo de los microservicios y la integraci\u00f3n con el ESB.\n"}]}, "createdAt": "2025-06-25T17:56:04.267285", "expiration": "2025-07-02T22:56:04.165Z", "publicAccess": true}