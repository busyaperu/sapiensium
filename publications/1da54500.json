{"id": "1da54500", "examenData": {"examen_id": "820711", "fecha": "2025-04-18T18:03:56.432Z", "profesor_id": "prof01", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "nombre_examen": "820711", "tipo_examen": "Plantilla", "preguntas_marcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 2.5, "opciones": [{"texto": "A) Acoplamiento estrecho entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos mediante bloqueo de operaciones", "valor": "B"}, {"texto": "C) Responsividad as\u00edncrona", "valor": "C"}, {"texto": "D) Centralizaci\u00f3n del procesamiento de datos", "valor": "D"}, {"texto": "E) Uso exclusivo de bases de datos relacionales", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 2.5, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Escalabilidad limitada", "valor": "B"}, {"texto": "C) Respuesta en tiempo real a eventos", "valor": "C"}, {"texto": "D) Uso exclusivo de bases de datos relacionales", "valor": "D"}, {"texto": "E) Dependencia de procesos sincr\u00f3nicos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 2.5, "opciones": [{"texto": "A) Acoplamiento estrecho entre componentes", "valor": "A"}, {"texto": "B) Tolerancia a fallos mediante bloqueo de procesos", "valor": "B"}, {"texto": "C) Orientaci\u00f3n a mensajes as\u00edncronos", "valor": "C"}, {"texto": "D) Centralizaci\u00f3n del manejo de estado", "valor": "D"}, {"texto": "E) Dependencia de tiempos de respuesta fijos", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 1, "texto": "1-1. Compara y contrasta la arquitectura en capas con la arquitectura hexagonal, detallando sus principios fundamentales, ventajas, desventajas y casos de uso t\u00edpicos. Incluye ejemplos concretos para ilustrar cada punto.", "puntaje": 2.5, "respuestaAlumno": ""}, {"numero": 2, "texto": "1-1 Compara y contrasta los principios fundamentales de la arquitectura en capas y la arquitectura hexagonal, explicando en qu\u00e9 escenarios ser\u00eda m\u00e1s adecuado utilizar cada una y por qu\u00e9. Incluye ejemplos concretos para respaldar tu an\u00e1lisis. (nivel: intermedio)", "puntaje": 2.5, "respuestaAlumno": ""}], "casos_uso": [{"numero": 1, "descripcion": "**Caso 1-1**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos de ventas flash sin degradar el rendimiento. Debes dise\u00f1ar un sistema reactivo que procese \u00f3rdenes de compra de manera as\u00edncrona y escale autom\u00e1ticamente seg\u00fan la demanda.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo garantizar\u00edas que el sistema procese \u00f3rdenes de forma resiliente, incluso si un componente falla?  \n2. \u00bfQu\u00e9 patrones reactivos usar\u00edas para manejar la concurrencia y evitar cuellos de botella?  \n\n**Requisitos espec\u00edficos:**  \n- Implementar un sistema basado en mensajer\u00eda as\u00edncrona.  \n- Garantizar consistencia eventual en el procesamiento de \u00f3rdenes.  \n- Usar mecanismos de backpressure para manejar cargas elevadas.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Kafka, Akka, Spring WebFlux.  \n- Patrones: Event Sourcing, CQRS, Circuit Breaker.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 3.5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 2, "descripcion": "**Caso de Uso 1-1:**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos de ventas flash sin degradar el rendimiento. Debes dise\u00f1ar un sistema reactivo que garantice escalabilidad y resiliencia.  \n\n**Preguntas de casos de uso:**  \n1. \u00bfC\u00f3mo implementar\u00edas un sistema de procesamiento de pedidos asincr\u00f3nico para evitar bloqueos durante altas cargas?  \n2. \u00bfQu\u00e9 estrategias usar\u00edas para garantizar la consistencia de datos entre microservicios al actualizar el inventario y registrar pedidos?  \n\n**Requisitos espec\u00edficos:**  \n- Usar mensajer\u00eda as\u00edncrona (ej. colas de eventos).  \n- Implementar patr\u00f3n Saga para manejar transacciones distribuidas.  \n- Garantizar tolerancia a fallos y retroceso (backpressure) en flujos de datos.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Kafka, RabbitMQ, Akka, Project Reactor.  \n- Enfoques: Event Sourcing, CQRS, Circuit Breaker.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 4, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-18T13:03:56.497724", "expiration": "2025-04-25T18:03:56.432Z", "publicAccess": true}