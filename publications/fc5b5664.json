{"id": "fc5b5664", "examenData": {"examen_id": "319918", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-23T21:35:21.396Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza com\u00fanmente para manejar la concurrencia en arquitecturas reactivas?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Strategy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es la principal ventaja del uso de un backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Menor consumo de memoria\nC) Prevenci\u00f3n de sobrecarga del sistema\nD) Aumento de la latencia\nE) Simplificaci\u00f3n del c\u00f3digo", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es ampliamente utilizada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) JSF", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones sobre los sistemas reactivos es FALSA?\nA) Son altamente escalables.\nB) Son resistentes a fallos.\nC) Requieren una gran cantidad de recursos de hardware.\nD) Son f\u00e1ciles de probar.\nE) Son flexibles y adaptables.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 tipo de comunicaci\u00f3n se favorece en las arquitecturas reactivas?\nA) S\u00edncrona\nB) Bloqueante\nC) As\u00edncrona\nD) Directa\nE) Centralizada", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza a menudo en arquitecturas reactivas para manejar eventos as\u00edncronos?\nA) Singleton\nB) Factory\nC) Observer\nD) Strategy\nE) Template Method", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfCu\u00e1l es la principal ventaja del uso de backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Menor consumo de memoria\nC) Prevenci\u00f3n de sobrecarga del sistema\nD) Aumento de la concurrencia\nE) Simplificaci\u00f3n del c\u00f3digo", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es com\u00fanmente usada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) JPA", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones sobre la elasticidad en un sistema reactivo es FALSA?\nA) Permite escalar recursos seg\u00fan la demanda.\nB) Reduce costos al optimizar el uso de recursos.\nC) Garantiza un tiempo de respuesta constante independientemente de la carga.\nD) Se adapta a cambios en la carga de trabajo.\nE) Mejora la disponibilidad del sistema.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 concepto describe la capacidad de un sistema reactivo para continuar funcionando a pesar de fallos?\nA) Elasticidad\nB) Responsividad\nC) Resiliencia\nD) Mensajer\u00eda\nE) Backpressure", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "Explique c\u00f3mo el patr\u00f3n de dise\u00f1o \"Command Query Responsibility Segregation\" (CQRS) se integra y beneficia a una arquitectura reactiva.  Detalle las implicaciones en la escalabilidad y el rendimiento.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "Analice el rol de los patrones de dise\u00f1o como el Backpressure y la gesti\u00f3n de errores en la construcci\u00f3n de sistemas reactivos resilientes y altamente disponibles.  Proporcione ejemplos de implementaciones pr\u00e1cticas de estos patrones.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Compare y contraste dos frameworks populares para la construcci\u00f3n de aplicaciones reactivas (ej. Spring Reactor y Akka), considerando aspectos como la curva de aprendizaje, las caracter\u00edsticas principales y la idoneidad para diferentes tipos de aplicaciones.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "Dise\u00f1e una arquitectura reactiva para una aplicaci\u00f3n de comercio electr\u00f3nico de alto tr\u00e1fico, considerando los desaf\u00edos de la concurrencia, la tolerancia a fallos y la escalabilidad.  Incluya un diagrama de componentes y una descripci\u00f3n de sus interacciones.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Explique c\u00f3mo el patr\u00f3n de dise\u00f1o \"Reactor\" se aplica en una arquitectura reactiva, detallando su funcionamiento y sus componentes clave.  Proporcione un ejemplo concreto de su uso.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 16, "descripcion": "**Escenario:** Plataforma de e-learning con cursos interactivos.\n    **Pregunta 1:** \u00bfC\u00f3mo manejar la actualizaci\u00f3n en tiempo real del progreso de un estudiante en un curso, visible simult\u00e1neamente para el estudiante y el instructor?\n    **Pregunta 2:** \u00bfC\u00f3mo implementar un sistema de notificaciones push para alertas personalizadas (nuevos materiales, fechas l\u00edmite) sin sobrecargar el servidor?\n    **Requisitos:** Implementar un sistema de actualizaci\u00f3n en tiempo real del progreso. Desarrollar un sistema de notificaciones push escalable.\n    **Sugerencias:** WebSockets, Server-Sent Events, Apache Kafka, Firebase Cloud Messaging, Reactive Streams.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 17, "descripcion": "**Escenario:** Aplicaci\u00f3n de monitorizaci\u00f3n de sensores IoT en una f\u00e1brica.\n    **Pregunta 1:** \u00bfC\u00f3mo procesar y visualizar datos de miles de sensores en tiempo real, mostrando alertas si se superan umbrales cr\u00edticos?\n    **Pregunta 2:** \u00bfC\u00f3mo asegurar la resiliencia del sistema si falla alguno de los sensores o gateways de comunicaci\u00f3n?\n    **Requisitos:** Procesamiento de flujos de datos en tiempo real. Implementar mecanismos de tolerancia a fallos.\n    **Sugerencias:** Apache Kafka Streams, Akka Streams, Circuit Breaker pattern, MQTT.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-23T16:35:21.469631", "expiration": "2025-05-30T21:35:21.396Z", "publicAccess": true}