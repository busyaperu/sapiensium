{"id": "30d957d9", "examenData": {"examen_id": "121671", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-20T16:02:36.887Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza a menudo para manejar la concurrencia en sistemas reactivos?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Strategy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es una caracter\u00edstica principal de un sistema el\u00e1stico?\nA) Puede manejar picos de carga inesperados.\nB) Siempre utiliza la misma cantidad de recursos.\nC) Es inmune a fallas.\nD) Se ejecuta en una sola m\u00e1quina.\nE) Requiere una configuraci\u00f3n manual para escalar.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se utiliza com\u00fanmente para la comunicaci\u00f3n as\u00edncrona en arquitecturas reactivas?\nA) Llamadas de procedimiento remoto (RPC)\nB) Colas de mensajes (Message Queues)\nC) Llamadas a funciones s\u00edncronas\nD) Bases de datos relacionales\nE) Archivos de texto plano", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l es el beneficio principal de la resiliencia en una arquitectura reactiva?\nA) Mayor velocidad de procesamiento.\nB) Menor consumo de memoria.\nC) Continuidad del servicio ante fallos.\nD) Simplificaci\u00f3n del desarrollo.\nE) Reducci\u00f3n del costo de infraestructura.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 concepto se refiere a la capacidad de un sistema reactivo para adaptarse a cambios en la carga de trabajo?\nA) Resiliencia\nB) Elasticidad\nC) Responsividad\nD) Orientaci\u00f3n a mensajes\nE) Consistencia", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l de los siguientes principios NO es parte de las arquitecturas reactivas?  \nA) Responsividad  \nB) Elasticidad  \nC) Acoplamiento fuerte  \nD) Tolerancia a fallos  \nE) Orientaci\u00f3n a mensajes", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 patr\u00f3n es com\u00fan en sistemas reactivos para manejar flujos de datos as\u00edncronos?  \nA) Singleton  \nB) Observer  \nC) Decorator  \nD) Factory  \nE) Strategy", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 herramienta se usa frecuentemente para implementar sistemas reactivos en Java?  \nA) ReactJS  \nB) Spring WebFlux  \nC) Django  \nD) Laravel  \nE) Express", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 ventaja principal ofrecen las arquitecturas reactivas?  \nA) Reducci\u00f3n de costos en hardware  \nB) Mayor complejidad en el mantenimiento  \nC) Escalabilidad bajo carga variable  \nD) Dependencia de bases de datos relacionales  \nE) Limitaci\u00f3n en la concurrencia", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfQu\u00e9 componente es esencial en un sistema reactivo para manejar eventos?  \nA) Load Balancer  \nB) Message Broker  \nC) Servidor web est\u00e1tico  \nD) API REST s\u00edncrona  \nE) Base de datos SQL centralizada", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "1. B\u00e1sico: Describe los principios fundamentales de la arquitectura reactiva y explica c\u00f3mo difieren de los enfoques tradicionales de dise\u00f1o de software. Proporciona un ejemplo sencillo de un sistema que podr\u00eda beneficiarse de la adopci\u00f3n de una arquitectura reactiva.\n\n", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "Aqu\u00ed te dejo exactamente 5 preguntas abiertas sobre Arquitecturas Reactivas con la estructura solicitada:\n\n2. B\u00e1sico\n*Describe los principios fundamentales de la arquitectura reactiva y explica c\u00f3mo se diferencian de los enfoques tradicionales de desarrollo de software. Proporciona un ejemplo pr\u00e1ctico de un sistema que podr\u00eda beneficiarse de esta arquitectura.\n\n", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Describe los patrones de dise\u00f1o m\u00e1s comunes utilizados en arquitecturas reactivas para manejar la concurrencia y el paralelismo, y explica c\u00f3mo cada uno aborda los desaf\u00edos de la programaci\u00f3n concurrente.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "Analiza las ventajas y desventajas de utilizar un enfoque de programaci\u00f3n reactivo en lugar de uno tradicional en un sistema de procesamiento de transacciones financieras, considerando factores como la latencia, la consistencia de los datos y la capacidad de recuperaci\u00f3n ante fallas.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Explica c\u00f3mo se pueden integrar servicios externos, como bases de datos o APIs, en una arquitectura reactiva de manera que se mantenga la coherencia y la integridad de los datos, y se minimice el impacto de posibles fallas o retrasos en estos servicios.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 16, "descripcion": "**Escenario:** Plataforma de e-learning con cursos en vivo. M\u00faltiples estudiantes interact\u00faan simult\u00e1neamente con un instructor, enviando preguntas y recibiendo respuestas en tiempo real.\n    **Pregunta 1:** \u00bfC\u00f3mo se puede implementar un sistema de mensajer\u00eda en tiempo real que gestione picos de concurrencia elevados (miles de usuarios) sin degradar el rendimiento?\n    **Pregunta 2:** \u00bfQu\u00e9 estrategias se pueden usar para mantener la sincronizaci\u00f3n entre las diferentes instancias del servidor que gestionan las sesiones de los usuarios y evitar la p\u00e9rdida de mensajes?\n    **Requisitos:** Implementar un backend que soporte comunicaci\u00f3n bidireccional en tiempo real, tolerante a fallos y escalable.\n    **Sugerencias:** WebSockets, gRPC, Reactive Streams, Apache Kafka.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 17, "descripcion": "**Escenario:** Sistema de monitoreo de sensores IoT en una f\u00e1brica. Los sensores env\u00edan continuamente datos (temperatura, presi\u00f3n, vibraci\u00f3n) que deben ser procesados y analizados en tiempo real para detectar anomal\u00edas.\n    **Pregunta 1:** \u00bfC\u00f3mo dise\u00f1ar una arquitectura que procese el flujo constante de datos de los sensores, detecte patrones an\u00f3malos y genere alertas en tiempo real?\n    **Pregunta 2:** \u00bfQu\u00e9 mecanismos se pueden implementar para garantizar la persistencia y disponibilidad de los datos de los sensores en caso de fallo de alg\u00fan componente del sistema?\n    **Requisitos:** Construir un pipeline de procesamiento de datos en tiempo real, con detecci\u00f3n de anomal\u00edas y sistema de alertas.\n    **Sugerencias:** Apache Kafka Streams, Apache Flink, Cassandra, InfluxDB.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-20T11:02:36.994170", "expiration": "2025-05-27T16:02:36.887Z", "publicAccess": true}