{"id": "265a7920", "examenData": {"id": "177981", "fecha": "2025-04-16", "profesor": "Mariela Isabel Camargo Rom\u00e1n", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 5, "opciones": [{"texto": "A) Escalabilidad limitada", "valor": "A"}, {"texto": "B) Acoplamiento fuerte entre componentes", "valor": "B"}, {"texto": "C) Respuesta en tiempo real a eventos", "valor": "C"}, {"texto": "D) Dependencia de bases de datos relacionales", "valor": "D"}, {"texto": "E) Uso exclusivo de lenguajes de programaci\u00f3n est\u00e1ticos", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. **Compara y contrasta las arquitecturas en capas y hexagonal en t\u00e9rminos de acoplamineto, flexibilidad y mantenibilidad. Proporciona ejemplos concretos de escenarios donde cada una ser\u00eda m\u00e1s adecuada.** (Avanzado)", "puntaje": 5, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso 1-1**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos como el Black Friday, donde miles de usuarios realizan compras simult\u00e1neamente. El sistema debe procesar \u00f3rdenes en tiempo real, garantizar la consistencia de los datos y escalar autom\u00e1ticamente seg\u00fan la demanda.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo implementar\u00edas un sistema de procesamiento de \u00f3rdenes reactivo que maneje alta concurrencia y garantice la consistencia de los datos?  \n2. \u00bfQu\u00e9 estrategias de escalamiento autom\u00e1tico podr\u00edan usarse para ajustar los recursos durante picos de tr\u00e1fico?  \n\n**Requisitos espec\u00edficos:**  \n- Implementar un servicio de \u00f3rdenes usando un enfoque reactivo (ej. event sourcing, CQRS).  \n- Asegurar la resiliencia mediante patrones como circuit breakers o retries.  \n- Configurar autoescalamiento basado en m\u00e9tricas como CPU o latencia.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Akka, Spring WebFlux, Kafka, Kubernetes (HPA).  \n- Enfoques: Event-driven architecture, serverless (AWS Lambda).", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-16T17:55:47.425401", "expiration": "2025-04-23T22:55:47.404Z", "publicAccess": true}