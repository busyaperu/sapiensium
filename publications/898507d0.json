{"id": "898507d0", "examenData": {"examen_id": "327140", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-28T22:41:30.413Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza a menudo para manejar la concurrencia en sistemas reactivos?\nA) Singleton\nB) Factory\nC) Actor\nD) Observer\nE) Strategy", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es la principal ventaja de usar un backpressure en un sistema reactivo?\nA) Mayor velocidad de procesamiento\nB) Menor latencia\nC) Prevenci\u00f3n de sobrecarga del sistema\nD) Simplificaci\u00f3n del c\u00f3digo\nE) Mejor manejo de errores", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es com\u00fanmente utilizada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) Hibernate\nE) JSP", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones sobre la elasticidad en sistemas reactivos es FALSA?\nA) Permite escalar recursos seg\u00fan la demanda.\nB) Reduce la necesidad de aprovisionamiento excesivo.\nC) Garantiza un rendimiento constante bajo cualquier carga.\nD) Mejora la utilizaci\u00f3n de recursos.\nE) Se adapta a cambios en la carga de trabajo.", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 concepto describe la capacidad de un sistema reactivo para continuar funcionando a pesar de fallos?\nA) Elasticidad\nB) Responsividad\nC) Resiliencia\nD) Orientaci\u00f3n a Mensajes\nE) Programaci\u00f3n Funcional", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 6, "texto": "Explique c\u00f3mo el patr\u00f3n de dise\u00f1o Reactor implementa la arquitectura reactiva, detallando su funcionamiento interno y las implicaciones en la gesti\u00f3n de eventos y la concurrencia.  Incluya ejemplos concretos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 7, "texto": "Analice la importancia de la backpressure en un sistema reactivo distribuido.  Describa diferentes estrategias para manejar la backpressure y sus implicaciones en la fiabilidad y el rendimiento del sistema.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 8, "texto": "Compare y contraste dos frameworks reactivos populares (ej. Spring WebFlux y Akka Streams)  considerando sus modelos de programaci\u00f3n, sus capacidades para manejar diferentes tipos de datos y su idoneidad para distintos escenarios de uso.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 9, "texto": "Dise\u00f1e una arquitectura reactiva para una aplicaci\u00f3n de streaming de video en tiempo real, considerando aspectos como la escalabilidad horizontal, la tolerancia a fallos, y la gesti\u00f3n de la latencia.  Detalle las tecnolog\u00edas y patrones de dise\u00f1o que utilizar\u00eda.", "puntaje": 2, "respuestaAlumno": ""}], "casos_uso": [{"numero": 10, "descripcion": "1.\n    -   **Escenario Pr\u00e1ctico Detallado:** Un equipo est\u00e1 desarrollando una plataforma de e-learning interactiva sobre Arquitecturas Reactivas. Necesitan implementar una funcionalidad que genere din\u00e1micamente dos preguntas de cuestionario para evaluar la comprensi\u00f3n del estudiante. Cada pregunta debe presentar un escenario pr\u00e1ctico diferente donde se aplica un patr\u00f3n o principio de Arquitectura Reactiva (como manejo de contrapresi\u00f3n, tolerancia a fallos o escalabilidad el\u00e1stica), pidiendo al estudiante que identifique el patr\u00f3n o explique su aplicaci\u00f3n. El sistema debe asegurar que las dos preguntas generadas en una sesi\u00f3n sean sobre casos de uso distintos.\n    -   **Requisitos Espec\u00edficos:** Implementar un servicio o m\u00f3dulo que, al ser invocado, seleccione aleatoriamente dos escenarios de uso de Arquitecturas Reactivas de una base de datos o lista predefinida, los formule como preguntas claras y las devuelva. El m\u00f3dulo debe garantizar que los dos escenarios seleccionados sean \u00fanicos en cada invocaci\u00f3n (dentro de un conjunto limitado de opciones) y que cada uno describa un caso de uso de RA.\n    -   **Sugerencias de Herramientas o Enfoques:** Uso de un framework web como Spring Boot con Spring WebFlux, una base de datos simple (como H2 o PostgreSQL) para almacenar los escenarios de preguntas, y un mecanismo de selecci\u00f3n aleatoria con control de unicidad (por ejemplo, usando un Set o controlando IDs ya seleccionados).\n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 10, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-28T17:41:30.450354", "expiration": "2025-06-04T22:41:30.413Z", "publicAccess": true}