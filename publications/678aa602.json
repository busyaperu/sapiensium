{"id": "678aa602", "examenData": {"examen_id": "525970", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-30T17:15:30.540Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza com\u00fanmente en arquitecturas reactivas para manejar el procesamiento as\u00edncrono?\nA) Singleton\nB) Factory\nC) Observer\nD) Strategy\nE) Command", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es la principal ventaja del uso de un backpressure en un sistema reactivo?\nA) Aumentar la latencia\nB) Mejorar la escalabilidad\nC) Prevenir sobrecargas del sistema\nD) Reducir el consumo de memoria\nE) Simplificar la programaci\u00f3n", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es ampliamente utilizada para implementar flujos de datos reactivos?\nA) JDBC\nB) Spring MVC\nC) RxJava\nD) JPA\nE) Hibernate", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes caracter\u00edsticas NO es t\u00edpicamente asociada con una arquitectura microservicios reactiva?\nA) Alta disponibilidad\nB) Despliegue independiente\nC) Monolito de base de datos\nD) Escalabilidad horizontal\nE) Tolerancia a fallos", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 concepto permite que un sistema reactivo se recupere de fallos sin interrumpir el servicio?\nA) Backpressure\nB) Resiliencia\nC) Elasticidad\nD) Orientaci\u00f3n a mensajes\nE) Responsividad", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 6, "texto": "Explique c\u00f3mo se implementar\u00eda la tolerancia a fallos en una arquitectura reactiva utilizando patrones como el Circuit Breaker y la reintenci\u00f3n.  Proporcione ejemplos concretos de su aplicaci\u00f3n.", "puntaje": 1, "respuestaAlumno": "", "archivoId": "anexo_284879_1748469930521", "archivoNombre": "Documentos-de-embarque.pdf", "archivoUrl": "https://cloud.appwrite.io/v1/storage/buckets/APPWRITE_BUCKET_DOCUMENTO_ANEXO_EXAMEN/files/anexo_284879_1748469930521/view?project=67e565df00172171560", "archivoTama\u00f1o": 168651, "archivoTipo": "application/pdf"}, {"numero": 7, "texto": "Analice la importancia del backpressure en una arquitectura reactiva y describa diferentes estrategias para gestionarlo eficientemente, considerando escenarios de alta concurrencia y picos de demanda.", "puntaje": 2, "respuestaAlumno": "", "archivoId": "anexo_269321_1748468425568", "archivoNombre": "", "archivoUrl": "", "archivoTama\u00f1o": 1017026, "archivoTipo": "application/pdf"}, {"numero": 8, "texto": "Compare y contraste dos frameworks reactivos populares (ej. Spring WebFlux y Akka)  destacando sus fortalezas y debilidades en diferentes contextos de aplicaci\u00f3n.  \u00bfQu\u00e9 factores influir\u00edan en la elecci\u00f3n de uno sobre el otro para un proyecto espec\u00edfico?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 9, "texto": "Dise\u00f1e una arquitectura reactiva para una aplicaci\u00f3n de comercio electr\u00f3nico que maneje un gran volumen de transacciones concurrentes, considerando aspectos como la escalabilidad, la resiliencia y la gesti\u00f3n de eventos.  Incluya una descripci\u00f3n de los componentes clave y sus interacciones.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 10, "descripcion": "**Caso de Uso:** Plataforma de E-learning Interactiva\n\n    *   **Escenario:** Una plataforma de e-learning necesita soportar miles de estudiantes interactuando simult\u00e1neamente con lecciones interactivas, cuestionarios en tiempo real y foros de discusi\u00f3n. Los tiempos de respuesta deben ser m\u00ednimos para mantener la participaci\u00f3n.\n\n    *   **Pregunta 1:** \u00bfC\u00f3mo se implementar\u00eda un sistema reactivo para manejar la carga variable de usuarios y mantener la disponibilidad de los servicios de lecciones interactivas?\n\n    *   **Requisitos:**\n        *   Implementar un back-end reactivo que pueda escalar horizontalmente.\n        *   Utilizar un sistema de mensajer\u00eda as\u00edncrona para comunicar componentes.\n        *   Implementar backpressure para evitar sobrecargar los servicios.\n\n    *   **Sugerencias:** Reactor, RxJava, Kafka, RabbitMQ, Kubernetes.\n\n    *   **Pregunta 2:** \u00bfQu\u00e9 estrategia de manejo de errores y resiliencia se aplicar\u00eda para asegurar que un fallo en un componente (ej., servicio de cuestionarios) no afecte la experiencia de usuario en otros componentes (ej., visualizaci\u00f3n de videos)?\n\n    *   **Requisitos:**\n        *   Implementar patrones Circuit Breaker y Bulkhead.\n        *   Implementar mecanismos de reintento y degradaci\u00f3n elegante.\n        *   Monitorear la salud de los servicios en tiempo real.\n\n    *   **Sugerencias:** Resilience4j, Hystrix, Prometheus, Grafana.\n\n", "pregunta": "**\n        *   Implementar un back-end reactivo que pueda escalar horizontalmente.\n        *   Utilizar un sistema de mensajer\u00eda as\u00edncrona para comunicar componentes.\n        *   Implementar backpressure para evitar sobrecargar los servicios.", "puntaje": 10, "respuestaAlumno": "", "archivoSubido": false, "archivoId": "anexo_269321_1748468425568", "archivoNombre": "exampro_innovacion_educativa.pdf", "archivoUrl": "https://cloud.appwrite.io/v1/storage/buckets/APPWRITE_BUCKET_DOCUMENTO_ANEXO_EXAMEN/files/anexo_269321_1748468425568/view?project=67e565df00172171560", "archivoTama\u00f1o": 1017026, "archivoTipo": "application/pdf"}]}, "createdAt": "2025-05-30T12:15:30.586305", "expiration": "2025-06-06T17:15:30.540Z", "publicAccess": true}