{"id": "d7a4f386", "examenData": {"id": "058318", "fecha": "2025-04-07", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Alta acoplamiento entre componentes", "valor": "A"}, {"texto": "B) Escalabilidad limitada", "valor": "B"}, {"texto": "C) Tolerancia a fallos", "valor": "C"}, {"texto": "D) Latencia predecible en condiciones de carga", "valor": "D"}, {"texto": "E) Uso exclusivo de bases de datos relacionales", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. **Avanzado**: Compare y contraste la arquitectura en capas tradicional con la arquitectura hexagonal, detallando c\u00f3mo cada una maneja la separaci\u00f3n de responsabilidades, la escalabilidad y el acoplamiento entre componentes. Proporcione ejemplos concretos de escenarios donde una ser\u00eda m\u00e1s adecuada que la otra.", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso 1-1:**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico impredecibles durante eventos como el Black Friday. Debes dise\u00f1ar un sistema reactivo que garantice escalabilidad y resiliencia para procesar \u00f3rdenes y actualizar inventarios en tiempo real.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo garantizar\u00edas que el sistema procese \u00f3rdenes sin perder mensajes durante picos de demanda?  \n2. \u00bfQu\u00e9 estrategias implementar\u00edas para mantener la consistencia de datos entre el servicio de \u00f3rdenes y el de inventario?  \n\n**Requisitos espec\u00edficos:**  \n- Usar un patr\u00f3n de dise\u00f1o reactivo como Event Sourcing o CQRS.  \n- Implementar un broker de mensajes para manejar colas de \u00f3rdenes.  \n- Garantizar tolerancia a fallos y sobrecarga mediante backpressure.  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Kafka, Akka, Spring WebFlux.  \n- Enfoques: Circuit Breaker, proyecciones de eventos, particionado de datos.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-07T16:47:10.492754", "expiration": "2025-04-14T21:47:10.470Z", "publicAccess": true}