{"id": "17ae8e6a", "examenData": {"id": "321243", "fecha": "2025-04-08", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio clave de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Centralizaci\u00f3n del procesamiento", "valor": "B"}, {"texto": "C) Respuesta ante fallos mediante resiliencia", "valor": "C"}, {"texto": "D) Uso exclusivo de bases de datos relacionales", "valor": "D"}, {"texto": "E) Sincronizaci\u00f3n forzada de procesos", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "1-1) \u00bfCu\u00e1l de las siguientes es una caracter\u00edstica principal de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Escalabilidad limitada", "valor": "B"}, {"texto": "C) Respuesta r\u00e1pida a fallos", "valor": "C"}, {"texto": "D) Comunicaci\u00f3n s\u00edncrona por defecto", "valor": "D"}, {"texto": "E) Estado compartido globalmente", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "1-1. \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?  \n\nA) Acoplamiento fuerte entre componentes  \nB) Tolerancia a fallos mediante aislamiento  \nC) Procesamiento s\u00edncrono por defecto  \nD) Centralizaci\u00f3n del estado de la aplicaci\u00f3n  \nE) Dependencia de infraestructura monol\u00edtica", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1. Explica en detalle las diferencias fundamentales entre la arquitectura en capas (por ejemplo, MVC) y la arquitectura hexagonal (puertos y adaptadores), mencionando ventajas, desventajas y casos de uso t\u00edpicos para cada una. (Avanzado)", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso de uso 1-1**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos como el Black Friday, donde miles de usuarios realizan compras simult\u00e1neamente. El sistema debe procesar \u00f3rdenes en tiempo real, notificar a los usuarios sobre el estado de sus pedidos y actualizar el inventario de productos sin bloquear la interfaz.  \n\n**Preguntas de caso de uso:**  \n1. \u00bfC\u00f3mo dise\u00f1ar\u00edas una arquitectura reactiva para manejar solicitudes concurrentes de \u00f3rdenes de compra, garantizando escalabilidad y resiliencia?  \n2. \u00bfQu\u00e9 patrones reactivos (ej. Circuit Breaker, Backpressure) aplicar\u00edas para evitar la saturaci\u00f3n del sistema durante picos de demanda?  \n\n**Requisitos espec\u00edficos:**  \n- Implementar un servicio de procesamiento de \u00f3rdenes as\u00edncrono usando mensajer\u00eda (ej. colas).  \n- Garantizar consistencia eventual en la actualizaci\u00f3n de inventario.  \n- Incluir un mecanismo de notificaci\u00f3n en tiempo real a los usuarios (ej. WebSockets).  \n\n**Sugerencias de herramientas/enfoques:**  \n- Herramientas: Akka, Spring WebFlux, Kafka, RabbitMQ, MongoDB (para datos cambiantes).  \n- Enfoques: Event Sourcing, CQRS, patr\u00f3n Publisher-Subscriber.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-08T17:34:23.123822", "expiration": "2025-04-15T22:34:23.107Z", "publicAccess": true}