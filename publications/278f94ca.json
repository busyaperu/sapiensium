{"id": "278f94ca", "examenData": {"id": "220472", "nombreExamen": "Programaci\u00f3n UML", "tipoExamen": "Evaluaci\u00f3n", "fecha": "2025-04-22", "profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesorId": "16MI987", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l de los siguientes principios NO forma parte del Manifiesto Reactivo?  \nA) Orientado a mensajes  \nB) Tolerante a fallos  \nC) Centralizado  \nD) El\u00e1stico  \nE) Responsivo", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es com\u00fan en arquitecturas reactivas para manejar flujos de datos?  \nA) Singleton  \nB) Observer  \nC) Factory  \nD) Decorator  \nE) Proxy", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se utiliza com\u00fanmente para implementar sistemas reactivos en Java?  \nA) Spring MVC  \nB) Hibernate  \nC) Reactor  \nD) JPA  \nE) JDBC", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 beneficio principal ofrece el modelo de actores en arquitecturas reactivas?  \nA) Reducci\u00f3n del acoplamiento  \nB) Mayor consumo de recursos  \nC) Sincronizaci\u00f3n global  \nD) Dependencia de estados compartidos  \nE) Lentitud en la comunicaci\u00f3n", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 tipo de procesamiento promueven las arquitecturas reactivas para manejar cargas variables?  \nA) Por lotes (batch)  \nB) Sincr\u00f3nico  \nC) Asincr\u00f3nico no bloqueante  \nD) Secuencial estricto  \nE) Lineal y predecible", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "**Intermedio:** Compara y contrasta el Modelo de Actores con el Patr\u00f3n Observer en el contexto de las Arquitecturas Reactivas, destacando ventajas y desventajas de cada enfoque.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 2, "texto": "**Avanzado:** Analiza c\u00f3mo el principio de \"Resiliencia\" se implementa en una Arquitectura Reactiva, detallando estrategias como *backpressure*, *timeouts* y *circuit breakers*.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 3, "texto": "**Intermedio:** Describe c\u00f3mo las Arquitecturas Reactivas manejan la escalabilidad horizontal y qu\u00e9 desaf\u00edos pueden surgir al aplicarlas en sistemas distribuidos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 4, "texto": "**Avanzado:** Discute el impacto de las Arquitecturas Reactivas en la coherencia de datos en sistemas distribuidos, considerando t\u00e9cnicas como *event sourcing* y *CQRS*.", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Plataforma de Monitoreo de Sensores IoT para Agricultura**  \n   - **Escenario**: Una granja inteligente requiere monitorear datos de sensores (humedad, temperatura) en tiempo real y activar riego autom\u00e1tico cuando los niveles caen bajo un umbral. El sistema debe escalar para miles de sensores.  \n   - **Requisitos**:  \n     - Procesar flujos de datos reactivos con backpressure.  \n     - Almacenar datos hist\u00f3ricos y notificar a los agricultores via SMS/email.  \n     - Visualizar datos en un dashboard con actualizaciones en vivo.  \n   - **Herramientas sugeridas**: Apache Kafka Streams, RSocket, InfluxDB, Grafana, Spring WebFlux.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 2, "descripcion": "**Sistema de Compras en L\u00ednea con Ofertas Flash**  \n   - **Escenario**: Una tienda online lanza ofertas flash con stock limitado. El sistema debe manejar picos de tr\u00e1fico masivos y evitar sobreventas (ej: 100 usuarios comprando el \u00faltimo producto).  \n   - **Requisitos**:  \n     - Usar patrones como Circuit Breaker y colas para manejar concurrencia.  \n     - Implementar un carrito de compras reactivo que reserve items temporalmente.  \n     - Notificar a los usuarios sobre cambios en stock o pedidos fallidos.  \n   - **Herramientas sugeridas**: Vert.x, Redis, RabbitMQ, Hystrix, Vue.js.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 3, "descripcion": "**Aplicaci\u00f3n de Chat para Soporte al Cliente Multicanales**  \n   - **Escenario**: Una empresa necesita un chat unificado que integre WhatsApp, SMS y web, con mensajes en tiempo real y asignaci\u00f3n autom\u00e1tica de agentes basada en carga de trabajo.  \n   - **Requisitos**:  \n     - Crear un sistema de eventos para enrutar mensajes entre canales.  \n     - Balancear carga usando actores reactivos.  \n     - Persistir conversaciones y permitir b\u00fasqueda hist\u00f3rica.  \n   - **Herramientas sugeridas**: Akka HTTP, Twilio API, MongoDB, Socket.IO, Angular.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 4, "descripcion": "**Plataforma de Trading de Criptomonedas con Alertas**  \n   - **Escenario**: Un exchange de criptomonedas necesita procesar transacciones en tiempo real, ejecutar \u00f3rdenes de compra/venta autom\u00e1ticas y enviar alertas cuando los precios crucen umbrales definidos.  \n   - **Requisitos**:  \n     - Procesar streams de datos de mercados con latencia m\u00ednima.  \n     - Implementar un motor de reglas reactivo para alertas.  \n     - Garantizar atomicidad en transacciones financieras.  \n   - **Herramientas sugeridas**: Apache Flink, Elasticsearch, WebSockets, Quarkus, React.js.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-21T19:43:52.401495", "expiration": "2025-04-29T00:43:52.369Z", "publicAccess": true}