{"id": "cec5a996", "examenData": {"examen_id": "311127", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-06-19T16:51:57.105Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI765", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l es el objetivo principal de una arquitectura reactiva en el dise\u00f1o de sistemas distribuidos?", "puntaje": 0.5, "opciones": [{"texto": "Minimizar el uso de recursos", "valor": "A"}, {"texto": "Garantizar la m\u00e1xima seguridad", "valor": "B"}, {"texto": "Mantener la responsividad ante cargas variables", "valor": "C"}, {"texto": "Centralizar el control de los datos", "valor": "D"}, {"texto": "Priorizar la consistencia sobre la disponibilidad", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "En una arquitectura reactiva, \u00bfqu\u00e9 principio asegura que el sistema contin\u00fae operando correctamente incluso ante fallos localesizados?", "puntaje": 0.5, "opciones": [{"texto": "Concurrencia expl\u00edcita", "valor": "A"}, {"texto": "Resiliencia mediante tolerancia a fallos", "valor": "B"}, {"texto": "Particionamiento forzado", "valor": "C"}, {"texto": "Transparencia en la ejecuci\u00f3n", "valor": "D"}, {"texto": "Aislamiento de componentes", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o se utiliza com\u00fanmente en arquitecturas reactivas para separar operaciones de lectura y escritura en los datos?", "puntaje": 0.5, "opciones": [{"texto": "Event Sourcing", "valor": "A"}, {"texto": "Circuit Breaker", "valor": "B"}, {"texto": "CQRS", "valor": "C"}, {"texto": "Actor Model", "valor": "D"}, {"texto": "MapReduce", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de los siguientes es una propiedad fundamental de la mensajer\u00eda orientada en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Uso de variables compartidas globales", "valor": "A"}, {"texto": "Comunicaci\u00f3n s\u00edncrona y bloqueante", "valor": "B"}, {"texto": "Transmisi\u00f3n de mensajes como \u00fanico medio de interacci\u00f3n", "valor": "C"}, {"texto": "Priorizar la velocidad sobre la seguridad", "valor": "D"}, {"texto": "Uso obligatorio de colas FIFO", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 t\u00e9cnica se emplea en arquitecturas reactivas para evitar el bloqueo de componentes cuando se enfrentan a cargas de tr\u00e1fico excesivas?", "puntaje": 0.5, "opciones": [{"texto": "Backpressure", "valor": "A"}, {"texto": "Lock contention", "valor": "B"}, {"texto": "Deadlock prevention", "valor": "C"}, {"texto": "Rate limiting", "valor": "D"}, {"texto": "Buffer overflow", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfCu\u00e1l es la principal ventaja de utilizar la programaci\u00f3n reactiva en comparaci\u00f3n con enfoques tradicionales de programaci\u00f3n concurrente?", "puntaje": 0.5, "opciones": [{"texto": "Eliminar la necesidad de lenguajes de programaci\u00f3n modernos", "valor": "A"}, {"texto": "Reducir la dependencia de bases de datos", "valor": "B"}, {"texto": "Manejar flujos de datos y eventos de forma declarativa y no bloqueante", "valor": "C"}, {"texto": "Aumentar la cantidad de hilos necesarios", "valor": "D"}, {"texto": "Priorizar la secuencialidad sobre la paralelizaci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "En el contexto de las arquitecturas reactivas, \u00bfqu\u00e9 significa \"elasticidad\"?", "puntaje": 1, "opciones": [{"texto": "Capacidad para almacenar datos de forma persistente", "valor": "A"}, {"texto": "Capacidad para escalar din\u00e1micamente recursos seg\u00fan la demanda", "valor": "B"}, {"texto": "Resistencia a atacantes externos", "valor": "C"}, {"texto": "Uso exclusivo de hardware especializado", "valor": "D"}, {"texto": "Priorizar la latencia baja sobre la capacidad", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfQu\u00e9 problema se soluciona t\u00edpicamente con el patr\u00f3n de \"Actores\" en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "La necesidad de interfaces gr\u00e1ficas", "valor": "A"}, {"texto": "La gesti\u00f3n de estados globales compartidos", "valor": "B"}, {"texto": "La comunicaci\u00f3n s\u00edncrona entre microservicios", "valor": "C"}, {"texto": "La falta de escalabilidad horizontal", "valor": "D"}, {"texto": "La seguridad en transacciones financieras", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfCu\u00e1l de las siguientes herramientas es espec\u00edfica para implementar sistemas reactivos en Java?", "puntaje": 0.5, "opciones": [{"texto": "Apache Kafka", "valor": "A"}, {"texto": "Akka", "valor": "B"}, {"texto": "PostgreSQL", "valor": "C"}, {"texto": "Kubernetes", "valor": "D"}, {"texto": "Swagger", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfCu\u00e1l de las siguientes NO es una caracter\u00edstica de las arquitecturas reactivas?", "puntaje": 0.5, "opciones": [{"texto": "Responsividad ante solicitudes", "valor": "A"}, {"texto": "Gesti\u00f3n de colas con prioridad", "valor": "B"}, {"texto": "Resistencia a fallos del sistema", "valor": "C"}, {"texto": "Elasticidad para manejar cargas variables", "valor": "D"}, {"texto": "Uso de arquitectura monol\u00edtica", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 11, "texto": "\u00bfPara qu\u00e9 se utiliza el modelo de actores (Actor Model) en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Para garantizar la coherencia en bases de datos", "valor": "A"}, {"texto": "Para manejar la concurrencia mediante aislamiento y mensajes", "valor": "B"}, {"texto": "Para construir interfaces gr\u00e1ficas interactivas", "valor": "C"}, {"texto": "Para implementar patrones de dise\u00f1o orientados a objetos", "valor": "D"}, {"texto": "Para optimizar el almacenamiento en disco", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 12, "texto": "\u00bfCu\u00e1l es el prop\u00f3sito del patr\u00f3n Circuit Breaker en arquitecturas reactivas?", "puntaje": 0.5, "opciones": [{"texto": "Acelerar la transferencia de datos entre componentes", "valor": "A"}, {"texto": "Prevenir la propagaci\u00f3n de fallos en el sistema", "valor": "B"}, {"texto": "Generar informes de estado del servidor", "valor": "C"}, {"texto": "Implementar autenticaci\u00f3n basada en tokens", "valor": "D"}, {"texto": "Reducir el uso de memoria en operaciones pesadas", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 13, "texto": "\u00bfQu\u00e9 tecnolog\u00eda es com\u00fanmente asociada con la implementaci\u00f3n de sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Django", "valor": "A"}, {"texto": "Spring WebFlux", "valor": "B"}, {"texto": "Apache Kafka", "valor": "C"}, {"texto": "Akka", "valor": "D"}, {"texto": "PostgreSQL", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 14, "texto": "\u00bfQu\u00e9 caracter\u00edstica evita el uso de una arquitectura reactiva basada en mensajes?", "puntaje": 0.5, "opciones": [{"texto": "Comunicaci\u00f3n as\u00edncrona", "valor": "A"}, {"texto": "Compartici\u00f3n de estado global", "valor": "B"}, {"texto": "Uso de patrones de observador", "valor": "C"}, {"texto": "Resiliencia mediante reintentos", "valor": "D"}, {"texto": "Escalabilidad horizontal", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 15, "texto": "\u00bfCu\u00e1l es el prop\u00f3sito del patr\u00f3n de Event Sourcing en sistemas reactivos?", "puntaje": 0.5, "opciones": [{"texto": "Minimizar la latencia en solicitudes HTTP", "valor": "A"}, {"texto": "Persistir eventos como secuencia para reconstruir estados", "valor": "B"}, {"texto": "Validar la integridad de los datos en tiempo real", "valor": "C"}, {"texto": "Implementar interfaces REST sin uso de JSON", "valor": "D"}, {"texto": "Optimizar la compresi\u00f3n de archivos de logs", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 16, "texto": "\u00bfCu\u00e1l de las siguientes estrategias NO se considera parte de la resiliencia en arquitecturas reactivas?", "puntaje": 0.5, "opciones": [{"texto": "Recuperaci\u00f3n local del sistema", "valor": "A"}, {"texto": "Balanceo de carga din\u00e1mico", "valor": "B"}, {"texto": "Uso de configuraciones est\u00e1ticas", "valor": "C"}, {"texto": "Reintentos controlados con backoff exponencial", "valor": "D"}, {"texto": "Implementaci\u00f3n de patrones de degradaci\u00f3n de servicio", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 17, "texto": "\u00bfQu\u00e9 diferencia a una arquitectura reactiva de una arquitectura tradicional basada en solicitudes-respuestas?", "puntaje": 0.5, "opciones": [{"texto": "El uso de interfaces gr\u00e1ficas interactivas", "valor": "A"}, {"texto": "La dependencia en servicios de terceros", "valor": "B"}, {"texto": "La comunicaci\u00f3n asincr\u00f3nica y basada en eventos", "valor": "C"}, {"texto": "La necesidad de transacciones ACID", "valor": "D"}, {"texto": "La integraci\u00f3n obligatoria con APIs REST", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 18, "texto": "\u00bfPor qu\u00e9 se considera esencial el uso de I/O no bloqueante en arquitecturas reactivas?", "puntaje": 0.5, "opciones": [{"texto": "Para permitir la migraci\u00f3n de monolitos a microservicios", "valor": "A"}, {"texto": "Para mejorar la escalabilidad y reducir la latencia", "valor": "B"}, {"texto": "Para simplificar la programaci\u00f3n orientada a objetos", "valor": "C"}, {"texto": "Para garantizar la coherencia en operaciones transaccionales", "valor": "D"}, {"texto": "Para evitar la necesidad de redes de alta velocidad", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 19, "texto": "Describe un escenario del mundo real donde una arquitectura reactiva ser\u00eda la soluci\u00f3n ideal.  Explica por qu\u00e9 otras arquitecturas ser\u00edan menos adecuadas y qu\u00e9 beneficios espec\u00edficos aporta la arquitectura reactiva en este contexto.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 20, "texto": "Explica c\u00f3mo el backpressure se maneja en un sistema reactivo y compara diferentes estrategias para implementarlo. \u00bfCu\u00e1les son las ventajas y desventajas de cada una?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 21, "texto": "Dise\u00f1a una arquitectura reactiva simple para un sistema de chat en tiempo real.  Describe los componentes clave, los flujos de datos y c\u00f3mo se manejar\u00edan los problemas comunes como la concurrencia y la tolerancia a fallos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 22, "texto": "\u00bfCu\u00e1les son los desaf\u00edos comunes al implementar una arquitectura reactiva y c\u00f3mo se pueden mitigar? Considera aspectos como la depuraci\u00f3n, el testing y la monitorizaci\u00f3n.", "puntaje": 1.5, "respuestaAlumno": ""}], "casos_uso": [{"numero": 23, "descripcion": "Escenario pr\u00e1ctico detallado: Una plataforma de aprendizaje online necesita generar un mini-cuestionario de 2 preguntas \u00fanicas sobre casos de uso de arquitecturas reactivas cada vez que un estudiante completa un m\u00f3dulo avanzado. La generaci\u00f3n debe ser r\u00e1pida y no bloquear la interfaz de usuario mientras se recuperan o crean las preguntas.\nRequisitos espec\u00edficos: Implementar un servicio que, al recibir una se\u00f1al de \"m\u00f3dulo completado\" para un estudiante, genere as\u00edncronamente exactamente 2 preguntas distintas sobre casos de uso de arquitecturas reactivas y las env\u00ede al cliente (navegador web del estudiante) sin bloquear el procesamiento de otras solicitudes.\nSugerencias de herramientas o enfoques: Spring WebFlux, Reactor, RxJava, Vert.x, WebSockets, Server-Sent Events (SSE).\n\n", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 6, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-06-19T11:51:57.161688", "expiration": "2025-06-26T16:51:57.105Z", "publicAccess": true}