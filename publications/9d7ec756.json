{"id": "9d7ec756", "examenData": {"examen_id": "663073", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-05-02T17:36:19.855Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfQu\u00e9 patr\u00f3n de arquitectura reactiva se centra en la coordinaci\u00f3n de m\u00faltiples flujos de datos?", "puntaje": 1, "opciones": [{"texto": "Saga", "valor": "A"}, {"texto": "CQRS", "valor": "B"}, {"texto": "Event Sourcing", "valor": "C"}, {"texto": "Backpressure", "valor": "D"}, {"texto": "Circuit Breaker", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfCu\u00e1l es el prop\u00f3sito principal de Backpressure en un sistema reactivo?", "puntaje": 1, "opciones": [{"texto": "Mejorar la velocidad de respuesta", "valor": "A"}, {"texto": "Manejar la sobrecarga del sistema", "valor": "B"}, {"texto": "Aumentar la resiliencia", "valor": "C"}, {"texto": "Simplificar el c\u00f3digo as\u00edncrono", "valor": "D"}, {"texto": "Facilitar la depuraci\u00f3n", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 describe mejor el concepto de Event Sourcing?", "puntaje": 1, "opciones": [{"texto": "Almacenar el estado actual de la aplicaci\u00f3n", "valor": "A"}, {"texto": "Almacenar una secuencia de eventos que representan los cambios de estado", "valor": "B"}, {"texto": "Almacenar solo los eventos m\u00e1s recientes", "valor": "C"}, {"texto": "Almacenar eventos en una base de datos relacional", "valor": "D"}, {"texto": "Almacenar eventos en un sistema de archivos distribuido", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l de las siguientes NO es una ventaja t\u00edpica de usar un sistema reactivo?", "puntaje": 1, "opciones": [{"texto": "Mayor escalabilidad", "valor": "A"}, {"texto": "Mayor complejidad de desarrollo", "valor": "B"}, {"texto": "Mayor resiliencia", "valor": "C"}, {"texto": "Mayor capacidad de respuesta", "valor": "D"}, {"texto": "Mejor manejo de la concurrencia", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 patr\u00f3n se utiliza para aislar fallos y evitar que se propaguen a trav\u00e9s del sistema?", "puntaje": 1, "opciones": [{"texto": "Saga", "valor": "A"}, {"texto": "CQRS", "valor": "B"}, {"texto": "Event Sourcing", "valor": "C"}, {"texto": "Backpressure", "valor": "D"}, {"texto": "Circuit Breaker", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "\u00bfQu\u00e9 significa \"responsivo\" en el contexto de las Arquitecturas Reactivas?", "puntaje": 1, "opciones": [{"texto": "El sistema responde r\u00e1pidamente incluso bajo alta carga", "valor": "A"}, {"texto": "El sistema se adapta a los cambios en la carga", "valor": "B"}, {"texto": "El sistema se recupera de las fallas", "valor": "C"}, {"texto": "El sistema utiliza mensajes asincr\u00f3nicos", "valor": "D"}, {"texto": "El sistema es f\u00e1cil de mantener", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfCQRS significa?", "puntaje": 1, "opciones": [{"texto": "Command Query Responsibility Segregation", "valor": "A"}, {"texto": "Complex Query Resolution System", "valor": "B"}, {"texto": "Concurrent Query Request Service", "valor": "C"}, {"texto": "Centralized Query Routing System", "valor": "D"}, {"texto": "Consistent Query Response Structure", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "\u00bfCu\u00e1l es el objetivo principal del patr\u00f3n Saga en las Arquitecturas Reactivas?", "puntaje": 1, "opciones": [{"texto": "Manejar transacciones distribuidas", "valor": "A"}, {"texto": "Implementar backpressure", "valor": "B"}, {"texto": "Mejorar el rendimiento de las consultas", "valor": "C"}, {"texto": "Simplificar el dise\u00f1o de la base de datos", "valor": "D"}, {"texto": "Facilitar la implementaci\u00f3n de Event Sourcing", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se utiliza com\u00fanmente para implementar sistemas reactivos?", "puntaje": 1, "opciones": [{"texto": "Akka", "valor": "A"}, {"texto": "Spring Boot", "valor": "B"}, {"texto": "Node.js", "valor": "C"}, {"texto": "React", "valor": "D"}, {"texto": "Todas las anteriores", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 10, "texto": "Describe un escenario del mundo real donde la implementaci\u00f3n de una arquitectura reactiva ser\u00eda altamente beneficiosa.  Justifica tu elecci\u00f3n explicando c\u00f3mo los principios reactivos abordar\u00edan los desaf\u00edos espec\u00edficos de ese escenario.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 11, "texto": "Compara y contrasta los patrones de dise\u00f1o \"Circuit Breaker\" y \"Backpressure\" en el contexto de las arquitecturas reactivas. \u00bfC\u00f3mo contribuyen estos patrones a la resiliencia del sistema y c\u00f3mo se implementan en la pr\u00e1ctica?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "Imagina que est\u00e1s dise\u00f1ando un sistema de comercio electr\u00f3nico de alta carga con requisitos de baja latencia. \u00bfC\u00f3mo aplicar\u00edas el principio de \"Message-Driven\" en una arquitectura reactiva para este sistema?  Describe las ventajas y desventajas de este enfoque.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Discute las implicaciones de la consistencia eventual en una arquitectura reactiva. \u00bfC\u00f3mo se gestionan los datos inconsistentes y qu\u00e9 estrategias se pueden utilizar para mitigar los problemas asociados con este tipo de consistencia?", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 14, "descripcion": "**Escenario:** Una plataforma de comercio electr\u00f3nico necesita gestionar un gran n\u00famero de transacciones concurrentes y garantizar la disponibilidad del inventario en tiempo real.\n\n**Requisitos:** Desarrollar un sistema reactivo que procese pedidos, actualice el inventario y gestione las transacciones de pago de forma concurrente y resiliente. Debe ser capaz de manejar picos de tr\u00e1fico sin afectar el rendimiento.\n\n**Sugerencias:** Cassandra, Spring WebFlux, Redis.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 15, "descripcion": "**Escenario:** Una aplicaci\u00f3n de chat en tiempo real necesita permitir la comunicaci\u00f3n instant\u00e1nea entre m\u00faltiples usuarios.\n\n**Requisitos:** Construir un sistema reactivo que permita a los usuarios enviar y recibir mensajes en tiempo real, gestionar la presencia de usuarios y notificar a los usuarios sobre nuevos mensajes.  Debe ser escalable para manejar un gran n\u00famero de usuarios concurrentes.\n\n**Sugerencias:** WebSockets, Vert.x, Node.js.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-02T12:36:19.911715", "expiration": "2025-05-09T17:36:19.855Z", "publicAccess": true}