{"id": "a8798892", "examenData": {"id": "188086", "fecha": "2025-04-07", "profesor": "Mariela Isabel Camargo Roman", "nombreAlumno": "", "idAlumno": "", "bloqueado": true, "preguntasMarcar": [{"numero": 1, "texto": "1-1) \u00bfCu\u00e1l de los siguientes es un principio fundamental de las arquitecturas reactivas?", "puntaje": 1, "opciones": [{"texto": "A) Acoplamiento fuerte entre componentes", "valor": "A"}, {"texto": "B) Tolerancia al fallo", "valor": "B"}, {"texto": "C) Uso exclusivo de bases de datos relacionales", "valor": "C"}, {"texto": "D) Sincronizaci\u00f3n obligatoria de procesos", "valor": "D"}, {"texto": "E) Jerarqu\u00eda r\u00edgida de componentes", "valor": "E"}], "respuestaSeleccionada": null}], "preguntasLibres": [{"numero": 1, "texto": "1-1 Compara y contrasta las arquitecturas en capas y la arquitectura hexagonal, detallando sus ventajas, desventajas y casos de uso ideales para cada una. Incluye ejemplos concretos que ilustren las diferencias en su implementaci\u00f3n y c\u00f3mo cada enfoque maneja la separaci\u00f3n de responsabilidades.", "puntaje": 1, "respuestaAlumno": ""}], "casosUso": [{"numero": 1, "descripcion": "**Caso 1-1**  \n\n**Escenario pr\u00e1ctico:**  \nUna plataforma de comercio electr\u00f3nico necesita manejar picos de tr\u00e1fico durante eventos de ventas flash sin degradar el rendimiento. Debes dise\u00f1ar un sistema reactivo que procese \u00f3rdenes de compra asincr\u00f3nicamente y notifique a los usuarios en tiempo real sobre el estado de sus pedidos.  \n\n**Preguntas de casos de uso:**  \n1. \u00bfC\u00f3mo garantizar\u00edas la escalabilidad del sistema para manejar miles de solicitudes concurrentes durante un evento de venta?  \n2. \u00bfQu\u00e9 estrategias implementar\u00edas para asegurar la consistencia de datos entre los microservicios de \u00f3rdenes y inventario?  \n\n**Requisitos espec\u00edficos:**  \n- Implementar un patr\u00f3n de cola (ej. Kafka, RabbitMQ) para desacoplar el procesamiento de \u00f3rdenes.  \n- Usar una base de datos distribuida (ej. Cassandra) para el inventario.  \n- Incluir un servicio de notificaciones en tiempo real (ej. WebSockets).  \n\n**Sugerencias de herramientas/enfoques:**  \n- Kafka para mensajer\u00eda asincr\u00f3nica.  \n- Spring WebFlux o Akka para manejo reactivo de peticiones.  \n- Cassandra para almacenamiento escalable.  \n- WebSockets o Server-Sent Events (SSE) para notificaciones.", "pregunta": "Pregunta sobre el caso de uso", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-07T17:37:17.998608", "expiration": "2025-04-14T22:37:17.987Z", "publicAccess": true}