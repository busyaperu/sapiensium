{"id": "7376c725", "examenData": {"examen_id": "014228", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Practica", "fecha": "2025-05-11T23:52:31.862Z", "nombre_profesor": "Mariela Isabel Camargo Roman", "profesor_id": "16MI765", "preguntas_marcar": [{"numero": 1, "texto": "En una arquitectura reactiva, \u00bfqu\u00e9 mecanismo se utiliza t\u00edpicamente para manejar la sobrecarga de datos entre un productor r\u00e1pido y un consumidor lento?\nA) Polling sincr\u00f3nico\nB) Backpressure\nC) Bloqueo de hilos\nD) Reintentos infinitos\nE) Buffering ilimitado", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 paradigma de programaci\u00f3n es com\u00fanmente asociado con la implementaci\u00f3n de flujos de datos as\u00edncronos y reactivos?\nA) Programaci\u00f3n imperativa\nB) Programaci\u00f3n orientada a objetos\nC) Programaci\u00f3n funcional reactiva\nD) Programaci\u00f3n l\u00f3gica\nE) Programaci\u00f3n estructurada", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l es el principal beneficio de una arquitectura \"Orientada a Mensajes\" en el contexto reactivo?\nA) Comunicaci\u00f3n s\u00edncrona directa entre componentes\nB) Acoplamiento fuerte entre emisor y receptor\nC) Aislamiento temporal y espacial de componentes\nD) Dependencia estricta del orden de procesamiento\nE) Ejecuci\u00f3n secuencial y bloqueante", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 caracter\u00edstica describe mejor el principio \"El\u00e1stico\" (Elastic) en arquitecturas reactivas?\nA) El sistema responde r\u00e1pidamente a las solicitudes.\nB) El sistema se mantiene operativo ante fallos.\nC) El sistema puede escalar o reducir recursos autom\u00e1ticamente.\nD) El sistema se comunica mediante mensajes as\u00edncronos.\nE) El sistema garantiza la entrega de todos los mensajes.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfCu\u00e1l de las siguientes tecnolog\u00edas o frameworks es un ejemplo com\u00fanmente utilizado para construir sistemas reactivos en Java/Kotlin?\nA) Django\nB) Ruby on Rails\nC) Spring WebFlux\nD) ASP.NET MVC\nE) Laravel", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "En una arquitectura reactiva, \u00bfqu\u00e9 caracter\u00edstica permite que el sistema se mantenga responsive incluso frente a fallos?\n    A) Elasticidad\n    B) Resilencia\n    C) Manejo de mensajes\n    D) Inmutabilidad\n    E) Concurrencia", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfCu\u00e1l de los siguientes patrones de dise\u00f1o es com\u00fanmente utilizado en arquitecturas reactivas para la comunicaci\u00f3n entre componentes?\n    A) Cliente-Servidor\n    B) Publicador-Suscriptor\n    C) Petici\u00f3n-Respuesta S\u00edncrona\n    D) Monolito\n    E) Orquestaci\u00f3n Centralizada", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "La capacidad de un sistema reactivo para adaptarse a cargas de trabajo variables aumentando o disminuyendo recursos se conoce como:\n    A) Resilencia\n    B) Responsiveness\n    C) Elasticidad\n    D) Aislamiento\n    E) Tolerancia a fallos", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "\u00bfQu\u00e9 paradigma de programaci\u00f3n est\u00e1 estrechamente asociado con la construcci\u00f3n de sistemas reactivos debido a su manejo del flujo de datos as\u00edncrono?\n    A) Programaci\u00f3n Imperativa\n    B) Programaci\u00f3n Estructurada\n    C) Programaci\u00f3n Orientada a Objetos\n    D) Programaci\u00f3n Funcional Reactiva\n    E) Programaci\u00f3n L\u00f3gica", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfCu\u00e1l es el prop\u00f3sito principal de usar mensajes as\u00edncronos en una arquitectura reactiva?\n    A) Bloquear el hilo de ejecuci\u00f3n hasta recibir una respuesta\n    B) Permitir que los componentes se comuniquen sin acoplamiento temporal\n    C) Asegurar que las operaciones se ejecuten en un orden estricto y predecible\n    D) Minimizar el n\u00famero total de componentes en el sistema\n    E) Facilitar la depuraci\u00f3n s\u00edncrona", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "Describe un escenario del mundo real donde una arquitectura reactiva sea la soluci\u00f3n m\u00e1s adecuada. Justifica tu elecci\u00f3n explicando las ventajas que ofrece sobre otras arquitecturas y c\u00f3mo aborda los desaf\u00edos espec\u00edficos del escenario.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "Explica c\u00f3mo el backpressure se implementa en un sistema reactivo y por qu\u00e9 es crucial para la estabilidad y el rendimiento bajo carga. Proporciona un ejemplo concreto de c\u00f3mo se podr\u00eda manejar el backpressure en una aplicaci\u00f3n de streaming de datos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Comparando los enfoques s\u00edncronos y as\u00edncronos en el contexto de las arquitecturas reactivas, discute las implicaciones de cada uno en el rendimiento, la complejidad y la gesti\u00f3n de errores.  \u00bfCu\u00e1ndo ser\u00eda preferible utilizar uno sobre el otro?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "Dise\u00f1a un sistema reactivo simple para gestionar las reservas de un restaurante. Describe los componentes principales, el flujo de datos y c\u00f3mo se aplicar\u00edan los principios reactivos para manejar las fluctuaciones en la demanda y garantizar una alta disponibilidad.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Describe c\u00f3mo el patr\u00f3n \"Back-pressure\" ayuda a gestionar la sobrecarga en un sistema reactivo y proporciona un ejemplo concreto de su implementaci\u00f3n.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 16, "descripcion": "*   **Escenario pr\u00e1ctico detallado:** Un sistema de ingesta y procesamiento de datos para una red de millones de sensores IoT distribuidos (por ejemplo, en una ciudad inteligente o una planta industrial). El sistema recibe un volumen masivo y continuo de datos de telemetr\u00eda, que pueden variar dr\u00e1sticamente. Debe filtrar, agregar y analizar estos datos en tiempo real para detectar anomal\u00edas o tendencias y activar alertas, incluso si algunos sensores o nodos de procesamiento dejan de enviar datos.\n    *   **Requisitos espec\u00edficos:** Dise\u00f1ar un pipeline de ingesta de datos escalable y resiliente capaz de manejar vol\u00famenes fluctuantes. Implementar flujos de procesamiento reactivos para an\u00e1lisis en tiempo real y detecci\u00f3n de eventos. Asegurar que el sistema pueda recuperarse de fallos en los nodos de procesamiento sin perder datos cr\u00edticos.\n    *   **Sugerencias de herramientas o enfoques:** Kafka, Flink, Spark Streaming, Akka Streams, Project Reactor, MQTT, Cassandra, bases de datos de series temporales.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 17, "descripcion": "*   **Escenario pr\u00e1ctico detallado:** Un servicio de notificaciones para una gran red social. Este servicio es responsable de enviar millones de notificaciones (push, in-app, email) por minuto basadas en la actividad de los usuarios y sus preferencias. Debe entregar las notificaciones de forma fiable, manejar la sobrecarga cuando hay eventos virales y ser resistente a fallos en los gateways de notificaci\u00f3n externos (como APNS o FCM).\n    *   **Requisitos espec\u00edficos:** Dise\u00f1ar un sistema impulsado por mensajes para gestionar las solicitudes de notificaci\u00f3n de forma as\u00edncrona. Implementar mecanismos de gesti\u00f3n de contrapresi\u00f3n (backpressure) para proteger los servicios descendentes m\u00e1s lentos. Asegurar que el sistema pueda manejar fallos transitorios o permanentes en los canales de entrega.\n    *   **Sugerencias de herramientas o enfoques:** RabbitMQ, Kafka, Akka, Spring WebFlux, Reactor, gRPC, servicios de notificaci\u00f3n dedicados.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-11T18:52:32.213650", "expiration": "2025-05-18T23:52:31.862Z", "publicAccess": true}