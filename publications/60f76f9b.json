{"id": "60f76f9b", "examenData": {"examen_id": "194763", "nombre_examen": "Arquitecturas Reactivas", "tipo_examen": "Practica", "fecha": "2025-05-12T00:37:58.657Z", "nombre_profesor": "Mariela Isabel Camargo Roman", "profesor_id": "16MI765", "preguntas_marcar": [{"numero": 1, "texto": "En arquitecturas reactivas, \u00bfqu\u00e9 concepto se refiere a la capacidad del sistema para mantenerse receptivo bajo diversas cargas?\nA) Resiliencia\nB) Elasticidad\nC) Orientaci\u00f3n a Mensajes\nD) Capacidad de Respuesta (Responsiveness)\nE) Escalabilidad Vertical", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 patr\u00f3n es com\u00fanmente utilizado en sistemas reactivos para evitar la propagaci\u00f3n de fallos catastr\u00f3ficos?\nA) Patr\u00f3n Observer\nB) Patr\u00f3n Strategy\nC) Patr\u00f3n Circuit Breaker\nD) Patr\u00f3n Factory\nE) Patr\u00f3n Decorator", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfCu\u00e1l es la principal ventaja de la comunicaci\u00f3n as\u00edncrona y basada en mensajes en sistemas reactivos?\nA) Mayor acoplamiento entre servicios\nB) Simplificaci\u00f3n de la gesti\u00f3n de estado compartido\nC) Mejor aislamiento de fallos y desacoplamiento\nD) Garant\u00eda de orden de procesamiento en todo momento\nE) Reducci\u00f3n de la latencia en todas las operaciones", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfQu\u00e9 significa \"Elasticidad\" en el contexto de un sistema reactivo?\nA) Capacidad de recuperarse r\u00e1pidamente de fallos\nB) Capacidad de procesar mensajes de forma secuencial\nC) Capacidad de escalar recursos autom\u00e1ticamente hacia arriba o abajo seg\u00fan la demanda\nD) Capacidad de responder a peticiones dentro de un tiempo l\u00edmite fijo\nE) Capacidad de mantener todo el estado del sistema en memoria", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfCu\u00e1l de los siguientes describe mejor el concepto de \"Backpressure\" en flujos reactivos?\nA) Un mecanismo para aplicar presi\u00f3n a la entrada de datos\nB) Un mecanismo para que el consumidor controle la tasa de producci\u00f3n del emisor\nC) Una t\u00e9cnica para comprimir los datos antes de enviarlos\nD) La resistencia que encuentran los datos al viajar por la red\nE) Un sistema para reintentar operaciones fallidas autom\u00e1ticamente", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 6, "texto": "En el contexto de arquitecturas reactivas, \u00bfqu\u00e9 problema busca resolver el concepto de Backpressure?\nA) El productor de datos es m\u00e1s lento que el consumidor.\nB) El consumidor de datos es m\u00e1s lento que el productor.\nC) La latencia de red es excesiva.\nD) La base de datos no responde a tiempo.\nE) El sistema tiene exceso de memoria RAM.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 7, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es com\u00fanmente asociado con la implementaci\u00f3n de sistemas reactivos distribuidos?\nA) MVC (Model-View-Controller)\nB) ORM (Object-Relational Mapping)\nC) Actor Model\nD) Singleton\nE) Factory Pattern", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 8, "texto": "Un sistema reactivo que puede mantenerse sensible incluso en caso de fallos parciales exhibe la caracter\u00edstica de:\nA) Elasticidad\nB) Sensibilidad\nC) Resiliencia\nD) Escalabilidad\nE) Disponibilidad", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 9, "texto": "En programaci\u00f3n reactiva, \u00bfqu\u00e9 t\u00e9rmino se utiliza para describir una secuencia de eventos o datos que pueden ser procesados as\u00edncronamente?\nA) Hilo (Thread)\nB) Callback\nC) Promesa (Promise)\nD) Flujo (Stream) / Observable\nE) Futuro (Future)", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 10, "texto": "\u00bfCu\u00e1l de las siguientes afirmaciones describe mejor la comunicaci\u00f3n orientada a mensajes en arquitecturas reactivas?\nA) Comunicaci\u00f3n s\u00edncrona punto a punto.\nB) Invocaci\u00f3n directa de m\u00e9todos remotos (RPC).\nC) Intercambio de informaci\u00f3n a trav\u00e9s de colas o bus de eventos, desacoplando remitente y receptor.\nD) Uso intensivo de memoria compartida entre componentes.\nE) Comunicaci\u00f3n basada en solicitudes y respuestas bloqueantes.", "puntaje": 0.5, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 11, "texto": "Describe un escenario del mundo real donde la implementaci\u00f3n de una arquitectura reactiva ser\u00eda beneficiosa. Justifica tu elecci\u00f3n explicando c\u00f3mo los principios reactivos abordar\u00edan los desaf\u00edos espec\u00edficos de ese escenario.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 12, "texto": "\u00bfC\u00f3mo se compara y contrasta el manejo de fallos en una arquitectura reactiva con el manejo de fallos en una arquitectura tradicional basada en hilos?  Explica las ventajas y desventajas de cada enfoque.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 13, "texto": "Dise\u00f1a un sistema reactivo simple para gestionar el inventario de una tienda online. Describe los componentes, el flujo de datos y c\u00f3mo se aplicar\u00edan los principios reactivos (responsividad, resiliencia, elasticidad y orientaci\u00f3n a mensajes) en este dise\u00f1o.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 14, "texto": "Analiza las implicaciones de la consistencia eventual en un sistema reactivo.  \u00bfQu\u00e9 desaf\u00edos presenta y qu\u00e9 estrategias se pueden utilizar para mitigar estos desaf\u00edos en un contexto de negocio espec\u00edfico, como por ejemplo, una aplicaci\u00f3n bancaria?", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 15, "texto": "Compara y contrasta los patrones de dise\u00f1o \"Circuit Breaker\" y \"Bulkhead\" en el contexto de arquitecturas reactivas.  \u00bfCu\u00e1ndo usar\u00edas cada uno y por qu\u00e9?", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 16, "descripcion": "Escenario pr\u00e1ctico detallado: Un sistema de monitoreo de infraestructura a gran escala recolecta m\u00e9tricas (CPU, memoria, red, logs) de miles de servidores y servicios en tiempo real. Estas m\u00e9tricas se usan para dashboards en vivo, an\u00e1lisis hist\u00f3rico y para disparar alertas cuando se superan ciertos umbrales. El volumen de datos es masivo y constante, y la capacidad de reaccionar r\u00e1pidamente a las anomal\u00edas es cr\u00edtica.\nRequisitos espec\u00edficos de lo que debe implementar el estudiante: Dise\u00f1ar un pipeline de ingesta y procesamiento de m\u00e9tricas que pueda manejar alto throughput, permita an\u00e1lisis en tiempo real y batch, y dispare alertas de forma confiable. El sistema debe ser capaz de escalar horizontalmente seg\u00fan el n\u00famero de fuentes de datos y la complejidad del an\u00e1lisis.\nSugerencias de herramientas o enfoques que podr\u00eda utilizar: Apache Kafka, Apache Flink, Apache Spark Streaming, Prometheus, Grafana, Akka, Reactive Streams.\nPregunta 1: \u00bfC\u00f3mo dise\u00f1ar\u00edas el sistema de ingesta de m\u00e9tricas utilizando principios message-driven y non-blocking I/O para manejar el alto volumen y velocidad de datos de miles de fuentes de manera resiliente?\nPregunta 2: Explica c\u00f3mo el componente de an\u00e1lisis en tiempo real que detecta umbrales y genera alertas podr\u00eda implementar l\u00f3gica reactiva (como Reactive Streams o actores) para procesar los flujos de m\u00e9tricas con baja latencia y aplicar backpressure si los sistemas de notificaci\u00f3n (e.g., email, SMS) se vuelven lentos.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 17, "descripcion": "Escenario pr\u00e1ctico detallado: Una plataforma de Internet de las Cosas (IoT) necesita recibir datos de millones de dispositivos distribuidos globalmente. Los dispositivos env\u00edan telemetr\u00eda intermitentemente, y el sistema debe procesar estos datos, almacenarlos, y en algunos casos, enviar comandos de vuelta a los dispositivos o activar otros servicios (ej. mantenimiento predictivo). La conectividad de los dispositivos puede ser inestable.\nRequisitos espec\u00edficos de lo que debe implementar el estudiante: Dise\u00f1ar la capa de conectividad y el pipeline de procesamiento inicial para manejar la ingesta masiva y potencialmente desordenada de datos de dispositivos, garantizando que los datos no se pierdan y que el sistema pueda escalar con el n\u00famero de dispositivos.\nSugerencias de herramientas o enfoques que podr\u00eda utilizar: MQTT, Apache Kafka, Apache NiFi, Akka, Vert.x, Cassandra, AWS IoT Core, Azure IoT Hub.\nPregunta 1: Describe c\u00f3mo la capa de conectividad de la plataforma IoT aplicar\u00eda principios reactivos (resiliencia, message-driven) para manejar eficientemente las conexiones intermitentes y el env\u00edo de datos desde millones de dispositivos, algunos con conectividad unreliable.\nPregunta 2: \u00bfC\u00f3mo dise\u00f1ar\u00edas el pipeline de procesamiento de datos de IoT posterior a la ingesta utilizando flujos reactivos para manejar la transformaci\u00f3n, filtrado y enrutamiento de datos a diferentes servicios (almacenamiento, an\u00e1lisis, actuadores), aplicando backpressure si alg\u00fan servicio downstream se congestiona?", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 5, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-05-11T19:37:58.802011", "expiration": "2025-05-19T00:37:58.657Z", "publicAccess": true}