{"id": "d4b10ac6", "examenData": {"examen_id": "465966", "nombre_examen": "Programaci\u00f3n UML", "tipo_examen": "Evaluaci\u00f3n", "fecha": "2025-04-29T16:24:19.631Z", "nombre_profesor": "Mariela Isabel Camargo Rom\u00e1n", "profesor_id": "16MI987", "preguntas_marcar": [{"numero": 1, "texto": "\u00bfCu\u00e1l de los siguientes es un principio clave de las arquitecturas reactivas?  \nA) Acoplamiento fuerte entre componentes  \nB) Tolerancia al fracaso  \nC) Procesamiento sincr\u00f3nico  \nD) Jerarqu\u00eda r\u00edgida de servicios  \nE) Uso exclusivo de lenguajes compilados", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 2, "texto": "\u00bfQu\u00e9 patr\u00f3n de dise\u00f1o es com\u00fan en sistemas reactivos?  \nA) Singleton  \nB) Observer  \nC) Factory  \nD) Decorator  \nE) Adapter", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 3, "texto": "\u00bfQu\u00e9 tecnolog\u00eda se asocia frecuentemente con arquitecturas reactivas?  \nA) COBOL  \nB) ReactJS  \nC) Apache Kafka  \nD) MySQL  \nE) Docker", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 4, "texto": "\u00bfCu\u00e1l es un beneficio de la mensajer\u00eda as\u00edncrona en sistemas reactivos?  \nA) Mayor latencia  \nB) Menor complejidad  \nC) Mejor desacoplamiento  \nD) Dependencia de estado compartido  \nE) Requerimientos de hardware reducido", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}, {"numero": 5, "texto": "\u00bfQu\u00e9 concepto es esencial en el dise\u00f1o de sistemas reactivos?  \nA) Estado global mutable  \nB) Procesamiento por lotes  \nC) Elasticidad  \nD) Acoplamiento temporal  \nE) Transacciones largas", "puntaje": 1, "opciones": [{"texto": "Opci\u00f3n A", "valor": "A"}, {"texto": "Opci\u00f3n B", "valor": "B"}, {"texto": "Opci\u00f3n C", "valor": "C"}, {"texto": "Opci\u00f3n D", "valor": "D"}, {"texto": "Opci\u00f3n E", "valor": "E"}], "respuestaSeleccionada": null}], "preguntas_libres": [{"numero": 1, "texto": "**Intermedio**: Compara y contrasta las arquitecturas reactivas basadas en eventos con las basadas en mensajes, destacando sus ventajas, desventajas y casos de uso t\u00edpicos.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 2, "texto": "**Intermedio-Avanzado**: Analiza c\u00f3mo se maneja la resiliencia en una arquitectura reactiva. Describe al menos dos patrones de dise\u00f1o que permiten tolerancia a fallos y c\u00f3mo se implementan.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 3, "texto": "**Avanzado**: Describe c\u00f3mo se logra la escalabilidad el\u00e1stica en sistemas reactivos. Incluye ejemplos de tecnolog\u00edas o frameworks que facilitan este comportamiento y explica su funcionamiento.", "puntaje": 1, "respuestaAlumno": ""}, {"numero": 4, "texto": "**Avanzado**: Explica el concepto de \"backpressure\" en sistemas reactivos, su importancia y c\u00f3mo se implementa en frameworks como Akka o Project Reactor. Proporciona un ejemplo pr\u00e1ctico.", "puntaje": 1, "respuestaAlumno": ""}], "casos_uso": [{"numero": 1, "descripcion": "**Escenario**: Un servicio de streaming de video requiere procesar y recomendar contenido en tiempo real basado en el comportamiento de los usuarios (pausas, b\u00fasquedas, valoraciones).  \n   **Requisitos**: Dise\u00f1a una arquitectura reactiva que procese eventos de interacci\u00f3n de usuarios y actualice las recomendaciones sin bloqueos.  \n   **Herramientas sugeridas**: Akka, RabbitMQ, Redis.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 2, "descripcion": "**Escenario**: Una aplicaci\u00f3n de monitoreo de tr\u00e1fico urbano debe procesar datos de sensores (c\u00e1maras, GPS) para alertar sobre congestiones y sugerir rutas alternativas.  \n   **Requisitos**: Crea un flujo reactivo que agrege y procese datos en tiempo real, con latencia m\u00ednima.  \n   **Herramientas sugeridas**: Apache Flink, MQTT, PostgreSQL.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 3, "descripcion": "**Escenario**: Un banco necesita procesar transacciones financieras de alta frecuencia, validando fraudes y actualizando saldos en milisegundos.  \n   **Requisitos**: Implementa un sistema reactivo con consistencia eventual y alta disponibilidad.  \n   **Herramientas sugeridas**: EventStore, Axon Framework, Cassandra.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}, {"numero": 4, "descripcion": "**Escenario**: Un juego multijugador en l\u00ednea debe sincronizar el estado del juego entre miles de jugadores con baja latencia.  \n   **Requisitos**: Desarrolla una arquitectura reactiva que maneje eventos de juego y garantice sincronizaci\u00f3n en tiempo real.  \n   **Herramientas sugeridas**: WebSockets, Reactor, Google Cloud Pub/Sub.", "pregunta": "Desarrolle una soluci\u00f3n para el caso descrito anteriormente", "puntaje": 1, "respuestaAlumno": "", "archivoSubido": false}]}, "createdAt": "2025-04-29T11:24:19.659598", "expiration": "2025-05-06T16:24:19.631Z", "publicAccess": true}